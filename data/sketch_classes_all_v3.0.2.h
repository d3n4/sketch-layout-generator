//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//



//
// File: /Applications/Sketch.app/Contents/MacOS/Sketch
// UUID: 240E00F4-E72E-361F-924D-151905818113
//
//                           Arch: x86_64
//                 Source version: 0.0.0.0.0
//       Minimum Mac OS X version: 10.8.0
//                    SDK version: 10.9.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/../Frameworks
//                               = /Applications/Sketch.app/Contents/Frameworks
//

@protocol BCPopoverContentController <NSObject>

@optional
- (void)popoverWindowDidShow:(BCPopover *)arg1;
@end

@protocol BCPopoverDelegate <NSObject>
- (void)popoverWillClose:(BCPopover *)arg1;

@optional
- (BOOL)popoverShouldCloseWhenOtherPopoverOpens:(BCPopover *)arg1 otherPopover:(BCPopover *)arg2;
- (void)popoverWindowSizeDidChange:(BCPopover *)arg1;
@end

@protocol BITCrashManagerDelegate <NSObject>

@optional
- (void)crashManagerDidFinishSendingCrashReport:(BITCrashManager *)arg1;
- (void)crashManager:(BITCrashManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)crashManagerWillSendCrashReport:(BITCrashManager *)arg1;
- (void)crashManagerWillCancelSendingCrashReport:(BITCrashManager *)arg1;
- (void)crashManagerWillShowSubmitCrashReportAlert:(BITCrashManager *)arg1;
- (NSString *)applicationLogForCrashManager:(BITCrashManager *)arg1;
- (void)showMainApplicationWindowForCrashManager:(BITCrashManager *)arg1;
@end

@protocol BITHockeyManagerDelegate <NSObject, BITCrashManagerDelegate>

@optional
- (NSString *)userEmailForHockeyManager:(BITHockeyManager *)arg1 componentManager:(BITCrashManager *)arg2;
- (NSString *)userNameForHockeyManager:(BITHockeyManager *)arg1 componentManager:(BITCrashManager *)arg2;
- (NSString *)userIDForHockeyManager:(BITHockeyManager *)arg1 componentManager:(BITCrashManager *)arg2;
@end

@protocol CODebugController
- (void)output:(NSString *)arg1 args:(struct __va_list_tag [1])arg2;
@end

@protocol CSRestClientDelegate <NSObject>

@optional
- (void)getAuthorizationHeader:(void (^)(NSString *))arg1;
- (NSString *)userAgent;
@end

@protocol DKContextDelegate <NSObject>
- (BOOL)rendererShouldInterruptRendering;
- (BOOL)rendererShouldSkipDrawingLayer:(id)arg1;
- (BOOL)rendererShouldForceDrawingLayer:(id)arg1;
- (BOOL)rendererNeedsToDrawRect:(struct CGRect)arg1;
@end

@protocol MSArrayDelegate <NSObject>
- (void)dataArray:(MSArray *)arg1 didRemoveObject:(id)arg2;
- (void)dataArray:(MSArray *)arg1 willRemoveObject:(id)arg2;
- (void)dataArray:(MSArray *)arg1 didAddObject:(id)arg2;
@end

@protocol MSBaseViewDelegate <NSObject>
@property(nonatomic) double zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin;
@end

@protocol MSBasicDelegate <NSObject>
- (void)refreshViewsWithMask:(unsigned long long)arg1;
- (void)refreshOfType:(unsigned long long)arg1 rect:(struct CGRect)arg2;

@optional
- (id)verticalRuler;
- (id)horizontalRuler;
- (void)reloadLayerList;
- (NSArray *)selectedLayers;
- (MSPage *)currentPage;
- (MSContentDrawView *)currentView;
@end

@protocol MSColorInspectorDelegate <NSObject>
- (void)colorInspector:(MSColorInspector *)arg1 didChangeToColor:(MSColor *)arg2;

@optional
- (void)inspectorDidChangeType:(MSColorInspector *)arg1;
@end

@protocol MSColorInspectorSectionDelegate <NSObject>
- (void)colorDidChangeTo:(MSColor *)arg1;
@end

@protocol MSDocumentDataDelegate <NSObject>
- (void)layerTreeLayoutDidChange;
- (void)didAddPage:(MSPage *)arg1;
- (void)willRemovePage:(MSPage *)arg1;
- (void)documentData:(MSDocumentData *)arg1 syncSharedObject:(id <MSSharedObjectInstance>)arg2;
- (void)documentData:(MSDocumentData *)arg1 didChangeToPage:(MSPage *)arg2;
@end

@protocol MSDrawViewContentDelegate <NSObject, MSBaseViewDelegate>
- (NSView *)verticalRuler;
- (NSView *)horizontalRuler;
@end

@protocol MSGradientBarViewDelegate <NSObject>
- (void)gradientBarChanged:(MSGradientBarView *)arg1;
@end

@protocol MSGradientEventHandlerDelegate <NSObject>
- (void)gradientHandlerWillLoseFocus:(MSGradientEventHandler *)arg1;
- (void)gradientHandlerDidChangeGradient:(MSGradientEventHandler *)arg1;
- (void)gradientHandlerDidChangeCurrentPoint:(MSGradientEventHandler *)arg1;
@end

@protocol MSImporter <NSObject>
- (BOOL)shouldCollapseSinglePage;
- (BOOL)shouldExpandPages;
- (NSString *)secondPhaseSubtitleForValue:(long long)arg1 maximum:(long long)arg2;
- (NSString *)firstPhaseSubtitle;
- (void)finishImporting;
- (void)importIntoGroup:(MSLayerGroup *)arg1 name:(NSString *)arg2 images:(MSImageCollection *)arg3 progress:(void (^)(void))arg4;
- (unsigned long long)prepareToImportFromURL:(NSURL *)arg1;
- (unsigned long long)prepareToImportFromData:(NSData *)arg1;
@end

@protocol MSInspectorChildController <NSObject>
- (BOOL)shouldHideExportBar;
- (void)prepareForDisplay;
@end

@protocol MSLayerWithBackgroundColour <NSObject>
@property(nonatomic) BOOL hasBackgroundColor;
- (MSColor *)backgroundColor;
@end

@protocol MSModeModePickerDelegate <NSObject>
- (NSString *)pickerView:(MSModePickerView *)arg1 labelForMode:(long long)arg2;
- (void)pickerViewChanged:(MSModePickerView *)arg1;
@end

@protocol MSPageDelegate <NSObject>
- (void)didUpdateDetailsForPage:(MSPage *)arg1;
- (void)willRemovePage:(MSPage *)arg1;
- (void)didAddPage:(MSPage *)arg1;
- (void)willRemoveArtboard:(MSArtboardGroup *)arg1 fromPage:(MSPage *)arg2;
- (void)didAddArtboard:(MSArtboardGroup *)arg1 toPage:(MSPage *)arg2;
- (void)didUpdateDetailsForArtboard:(MSArtboardGroup *)arg1;
- (void)determineCurrentArtboard;
- (void)layerSelectionDidChange;
- (void)currentArtboardDidChange;
- (void)collectRefreshRect:(struct CGRect)arg1 page:(MSPage *)arg2;
@end

@protocol MSPagesPopoverCellDelegate
- (void)popoverCell:(MSPagesPopoverCell *)arg1 deletePageWithID:(id)arg2;
- (BOOL)popoverCell:(MSPagesPopoverCell *)arg1 canDeletePageWithID:(id)arg2;
- (void)popoverCell:(MSPagesPopoverCell *)arg1 duplicatePageWithID:(id)arg2;
- (void)pagesPopoverCell:(MSPagesPopoverCell *)arg1 textFielDidEndEditing:(NSString *)arg2;
@end

@protocol MSPresetPickerViewDelegate <NSObject>
- (void)pickerView:(MSPresetPickerView *)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)pickerView:(MSPresetPickerView *)arg1 removePresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(MSPresetPickerView *)arg1;
- (unsigned long long)numberOfPresetsInPickerView:(MSPresetPickerView *)arg1;

@optional
- (void)pickerView:(MSPresetPickerView *)arg1 didStopHoverPresetAtIndex:(long long)arg2;
- (void)pickerView:(MSPresetPickerView *)arg1 didHoverPresetAtIndex:(long long)arg2;
- (void)presetPickerFinishedDragging:(MSPresetPickerView *)arg1;
- (BOOL)pickerViewSupportsInternalDragDrop:(MSPresetPickerView *)arg1;
- (void)pickerView:(MSPresetPickerView *)arg1 writeDataForPresetAtIndex:(long long)arg2 toPasteboard:(NSPasteboard *)arg3;
- (BOOL)pickerView:(MSPresetPickerView *)arg1 didDragPresetAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (BOOL)pickerView:(MSPresetPickerView *)arg1 shouldShowMenuForItemAtIndex:(unsigned long long)arg2;
- (BOOL)pickerViewSupportsDragDrop:(MSPresetPickerView *)arg1;
- (BOOL)shouldShowAddPresetButton:(MSPresetPickerView *)arg1;
- (void)drawFullContentForCellInPickerView:(MSPresetPickerView *)arg1 atIndex:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (void)drawContentForCellInPickerView:(MSPresetPickerView *)arg1 atIndex:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
@end

@protocol MSRenderingContextDelegate <DKContextDelegate>
@end

@protocol MSReorderingContainerDelegate <NSObject>
- (void)containerBackground:(MSReorderingContainerView *)arg1 dragDidReorderChildAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;

@optional
- (unsigned long long)numberOfReorderableSubviewsForContainerBackground:(MSReorderingContainerView *)arg1;
- (double)startingOffsetForStackingContainerBackground:(MSReorderingContainerView *)arg1;
@end

@protocol MSRootLayer <NSObject>
@property(nonatomic) struct CGPoint rulerBase;
@property(copy, nonatomic) MSRulerData *verticalRulerData;
@property(copy, nonatomic) MSRulerData *horizontalRulerData;
@property(copy, nonatomic) MSLayoutGrid *layout;
@property(copy, nonatomic) MSSimpleGrid *grid;
@end

@protocol MSSectionProtocol <NSObject>
- (NSArray *)views;

@optional
- (BOOL)wantsSeparatorBetweenView:(NSView *)arg1 andView:(NSView *)arg2;
@end

@protocol MSSharedObjectContainerDelegate <NSObject>
- (NSArray *)rootLayersIncludingSymbols:(BOOL)arg1;
@end

@protocol MSSharedObjectInstance <NSObject>
@property(retain, nonatomic) NSString *sharedObjectID;
- (void)setPrimitiveSharedObjectID:(NSString *)arg1;
- (unsigned long long)type;
@end

@protocol MSSliceLayerWatcher <NSObject>
- (void)sliceLayerDidChange:(MSSliceLayer *)arg1;
@end

@protocol MSSourceListViewDelegate <NSObject, PXListViewDelegate>
- (NSIndexSet *)listView:(MSSourceListView *)arg1 actualSelectionIndexes:(NSIndexSet *)arg2;
- (id)listView:(MSSourceListView *)arg1 menuForEvent:(NSEvent *)arg2;
@end

@protocol MSStyleDelegate <NSObject>
- (void)layerStyleDidChange;
- (BOOL)shouldDrawArtisticStrokeForPath:(BCBezierPath *)arg1;
- (BCBezierPath *)outlineStrokePath:(BCBezierPath *)arg1;
@end

@protocol MSStylePartDelegate <NSObject>
- (BOOL)supportsAdvancedBorderSettings;
- (BOOL)hasBitmapStylesEnabled;
- (void)layerStyleDidChange;
@end

@protocol MSStylePartInspectorDelegate <NSObject>

@optional
- (void)reload;
- (NSArray *)layers;
- (void)refreshLayers;
- (BOOL)layersHaveArtisticStroke;
- (void)returnToDefaultHandler;
- (id)switchToEventHandlerWithName:(NSString *)arg1;
@end

@protocol MSTextLayerEditingDelegate <NSObject>
- (void)adjustForegroundColor;
- (void)adjustTextViewFrame;
@end

@protocol MSTileDelegate <NSObject>
- (void)tileDidDraw:(MSTile *)arg1 page:(MSPage *)arg2;
@end

@protocol MSTileRemoveCollector <NSObject>
- (void)tileRemoveCollectorDidFinish:(MSTileRemoveCollector *)arg1;
@end

@protocol MSUpDownProtocol <NSObject>
@property(readonly, nonatomic) MSUpDownController *upDownController;
- (double)incrementValue;
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (void)applicationDidChangeOcclusionState:(NSNotification *)arg1;
- (void)applicationDidChangeScreenParameters:(NSNotification *)arg1;
- (void)applicationWillTerminate:(NSNotification *)arg1;
- (void)applicationDidUpdate:(NSNotification *)arg1;
- (void)applicationWillUpdate:(NSNotification *)arg1;
- (void)applicationDidResignActive:(NSNotification *)arg1;
- (void)applicationWillResignActive:(NSNotification *)arg1;
- (void)applicationDidBecomeActive:(NSNotification *)arg1;
- (void)applicationWillBecomeActive:(NSNotification *)arg1;
- (void)applicationDidUnhide:(NSNotification *)arg1;
- (void)applicationWillUnhide:(NSNotification *)arg1;
- (void)applicationDidHide:(NSNotification *)arg1;
- (void)applicationWillHide:(NSNotification *)arg1;
- (void)applicationDidFinishLaunching:(NSNotification *)arg1;
- (void)applicationWillFinishLaunching:(NSNotification *)arg1;
- (void)application:(NSApplication *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (void)application:(NSApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(NSApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(NSApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (NSError *)application:(NSApplication *)arg1 willPresentError:(NSError *)arg2;
- (NSMenu *)applicationDockMenu:(NSApplication *)arg1;
- (BOOL)applicationShouldHandleReopen:(NSApplication *)arg1 hasVisibleWindows:(BOOL)arg2;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(NSApplication *)arg1;
- (unsigned long long)application:(NSApplication *)arg1 printFiles:(NSArray *)arg2 withSettings:(NSDictionary *)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)application:(NSApplication *)arg1 printFile:(NSString *)arg2;
- (BOOL)application:(id)arg1 openFileWithoutUI:(NSString *)arg2;
- (BOOL)applicationOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(NSApplication *)arg1;
- (BOOL)application:(NSApplication *)arg1 openTempFile:(NSString *)arg2;
- (void)application:(NSApplication *)arg1 openFiles:(NSArray *)arg2;
- (BOOL)application:(NSApplication *)arg1 openFile:(NSString *)arg2;
- (unsigned long long)applicationShouldTerminate:(NSApplication *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDraggingDestination <NSObject>

@optional
- (void)updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id <NSDraggingInfo>)arg1;
- (void)concludeDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)performDragOperation:(id <NSDraggingInfo>)arg1;
- (BOOL)prepareForDragOperation:(id <NSDraggingInfo>)arg1;
- (void)draggingExited:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingUpdated:(id <NSDraggingInfo>)arg1;
- (unsigned long long)draggingEntered:(id <NSDraggingInfo>)arg1;
@end

@protocol NSDraggingSource <NSObject>
- (unsigned long long)draggingSession:(NSDraggingSession *)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@optional
- (BOOL)ignoreModifierKeysForDraggingSession:(NSDraggingSession *)arg1;
- (void)draggingSession:(NSDraggingSession *)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(NSDraggingSession *)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(NSDraggingSession *)arg1 willBeginAtPoint:(struct CGPoint)arg2;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSNetServiceBrowserDelegate <NSObject>

@optional
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didRemoveService:(NSNetService *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didRemoveDomain:(NSString *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didFindService:(NSNetService *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didFindDomain:(NSString *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didNotSearch:(NSDictionary *)arg2;
- (void)netServiceBrowserDidStopSearch:(NSNetServiceBrowser *)arg1;
- (void)netServiceBrowserWillSearch:(NSNetServiceBrowser *)arg1;
@end

@protocol NSNetServiceDelegate <NSObject>

@optional
- (void)netService:(NSNetService *)arg1 didAcceptConnectionWithInputStream:(NSInputStream *)arg2 outputStream:(NSOutputStream *)arg3;
- (void)netService:(NSNetService *)arg1 didUpdateTXTRecordData:(NSData *)arg2;
- (void)netServiceDidStop:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotResolve:(NSDictionary *)arg2;
- (void)netServiceDidResolveAddress:(NSNetService *)arg1;
- (void)netServiceWillResolve:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotPublish:(NSDictionary *)arg2;
- (void)netServiceDidPublish:(NSNetService *)arg1;
- (void)netServiceWillPublish:(NSNetService *)arg1;
@end

@protocol NSObject
- (NSString *)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (NSString *)debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(NSNotification *)arg1;
- (void)popoverWillClose:(NSNotification *)arg1;
- (void)popoverDidShow:(NSNotification *)arg1;
- (void)popoverWillShow:(NSNotification *)arg1;
- (NSWindow *)detachableWindowForPopover:(NSPopover *)arg1;
- (BOOL)popoverShouldClose:(NSPopover *)arg1;
@end

@protocol NSSharingServiceDelegate <NSObject>

@optional
- (NSWindow *)sharingService:(NSSharingService *)arg1 sourceWindowForShareItems:(NSArray *)arg2 sharingContentScope:(long long *)arg3;
- (NSImage *)sharingService:(NSSharingService *)arg1 transitionImageForShareItem:(id <NSPasteboardWriting>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(NSSharingService *)arg1 sourceFrameOnScreenForShareItem:(id <NSPasteboardWriting>)arg2;
- (void)sharingService:(NSSharingService *)arg1 didShareItems:(NSArray *)arg2;
- (void)sharingService:(NSSharingService *)arg1 didFailToShareItems:(NSArray *)arg2 error:(NSError *)arg3;
- (void)sharingService:(NSSharingService *)arg1 willShareItems:(NSArray *)arg2;
@end

@protocol NSSharingServicePickerDelegate <NSObject>

@optional
- (void)sharingServicePicker:(NSSharingServicePicker *)arg1 didChooseSharingService:(NSSharingService *)arg2;
- (id <NSSharingServiceDelegate>)sharingServicePicker:(NSSharingServicePicker *)arg1 delegateForSharingService:(NSSharingService *)arg2;
- (NSArray *)sharingServicePicker:(NSSharingServicePicker *)arg1 sharingServicesForItems:(NSArray *)arg2 proposedSharingServices:(NSArray *)arg3;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(NSNotification *)arg1;
- (void)splitViewWillResizeSubviews:(NSNotification *)arg1;
- (struct CGRect)splitView:(NSSplitView *)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(NSSplitView *)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(NSSplitView *)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(NSSplitView *)arg1 shouldAdjustSizeOfSubview:(NSView *)arg2;
- (void)splitView:(NSSplitView *)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(NSSplitView *)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(NSSplitView *)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 shouldCollapseSubview:(NSView *)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(NSSplitView *)arg1 canCollapseSubview:(NSView *)arg2;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextStorageDelegate <NSObject>

@optional
- (void)textStorageDidProcessEditing:(NSNotification *)arg1;
- (void)textStorageWillProcessEditing:(NSNotification *)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (void)toolbarDidRemoveItem:(NSNotification *)arg1;
- (void)toolbarWillAddItem:(NSNotification *)arg1;
- (NSArray *)toolbarSelectableItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)arg1;
- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)arg1;
- (NSToolbarItem *)toolbar:(NSToolbar *)arg1 itemForItemIdentifier:(NSString *)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol PDFParser <NSObject>
- (NSString *)name;
- (unsigned long long)pageCount;
- (void)parseWithProgress:(void (^)(void))arg1;
- (void)loadDocumentFromData:(NSData *)arg1;
- (void)loadDocumentFromURL:(NSURL *)arg1;
- (id)initWithScanner:(PDFScanner *)arg1;
@end

@protocol PXListViewDelegate <NSObject>
- (PXListViewCell *)listView:(PXListView *)arg1 cellForRow:(unsigned long long)arg2;
- (double)listView:(PXListView *)arg1 heightOfRow:(unsigned long long)arg2;
- (unsigned long long)numberOfRowsInListView:(PXListView *)arg1;

@optional
- (BOOL)listView:(PXListView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(unsigned long long)arg3 dropHighlight:(unsigned long long)arg4;
- (unsigned long long)listView:(PXListView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(unsigned long long)arg3 proposedDropHighlight:(unsigned long long)arg4;
- (BOOL)listView:(PXListView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)listView:(PXListView *)arg1 rowDoubleClicked:(unsigned long long)arg2;
- (void)listViewSelectionDidChange:(NSNotification *)arg1;
@end

@interface AppController : NSObject <NSApplicationDelegate, BITHockeyManagerDelegate, BITCrashManagerDelegate, NSWindowDelegate, NSMenuDelegate>
{
    id shapesMenu;	// 8 = 0x8
    NSMenuItem *pluginsMenuItem;	// 16 = 0x10
    NSMenu *templatesMenu;	// 24 = 0x18
    NSMenu *printMenu;	// 32 = 0x20
    NSMenuItem *debugMenuItem;	// 40 = 0x28
    MSIOSConnectionController *_connectionController;	// 48 = 0x30
    NSTimer *_updateTimer;	// 56 = 0x38
    MSReleaseNotesWindowController *_releaseNotesWindowController;	// 64 = 0x40
    NSString *_scriptPath;	// 72 = 0x48
    NSURL *_crashLogURL;	// 80 = 0x50
    NSMutableArray *_crashLog;	// 88 = 0x58
    id _lastRunPlugin;	// 96 = 0x60
}

@property(retain, nonatomic) id lastRunPlugin; // @synthesize lastRunPlugin=_lastRunPlugin;
@property(retain, nonatomic) NSMutableArray *crashLog; // @synthesize crashLog=_crashLog;
@property(retain, nonatomic) NSURL *crashLogURL; // @synthesize crashLogURL=_crashLogURL;
@property(nonatomic) NSString *scriptPath; // @synthesize scriptPath=_scriptPath;
@property(retain, nonatomic) MSReleaseNotesWindowController *releaseNotesWindowController; // @synthesize releaseNotesWindowController=_releaseNotesWindowController;
@property(retain, nonatomic) NSTimer *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(retain, nonatomic) MSIOSConnectionController *connectionController; // @synthesize connectionController=_connectionController;
- (void).cxx_destruct;
- (id)crashLogText;
- (void)addToCrashLog:(id)arg1;
- (void)refreshCurrentDocument;
- (void)visitDocumentation:(id)arg1;
- (void)openPluginsFolder:(id)arg1;
- (void)runLastScriptAction:(id)arg1;
- (void)runCustomScriptAction:(id)arg1;
- (void)revealPlugin:(id)arg1;
- (void)editPlugin:(id)arg1;
- (void)runPlugin:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)buyInAppStore:(id)arg1;
- (id)majorVersion;
- (id)subTextForRegistration;
- (void)showSupportPage:(id)arg1;
- (void)showOnlineHelp:(id)arg1;
- (void)feedback:(id)arg1;
- (void)openPreferencesWindow:(id)arg1;
- (void)documentWillClose:(id)arg1;
- (void)revealPluginsFolderInFinder:(id)arg1;
- (void)addTemplatesAtPath:(id)arg1 toMenu:(id)arg2;
- (id)templateLibraryPath;
- (void)updateTemplateMenu:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)openTemplateAtPath:(id)arg1;
- (void)openTemplateFile:(id)arg1;
- (void)checkDefaults;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)showReleaseNotesWindow:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)awakeFromNib;
- (void)welcomeToSketch:(id)arg1;
- (void)showMainApplicationWindow;
- (id)licensePlaceholderString;
- (BOOL)isAppStoreVersion;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)init;
- (id)runPluginScript:(id)arg1;
- (id)runPluginAtURL:(id)arg1;
- (id)evaluateScript:(id)arg1;
- (void)checkForUpdates:(id)arg1;
- (id)applicationLogForCrashManager:(id)arg1;
- (void)startHockeyAppTracking;
- (void)stopCheckingForUpdates;
- (void)checkForUpdatesAndCrashes;

@end

@interface BCAlphaColorPicker : BCColorPickerSliderView
{
    double _alphaValue;	// 176 = 0xb0
    BCFlexibleColor *_color;	// 184 = 0xb8
}

@property(retain, nonatomic) BCFlexibleColor *color; // @synthesize color=_color;
@property(nonatomic) double alphaValue; // @synthesize alphaValue=_alphaValue;
- (void).cxx_destruct;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawAlphaGradient;
- (void)drawCheckerboard;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (id)initInBounds:(struct CGRect)arg1;

@end

@interface BCAutosizingTextField : NSTextField
{
    double maximumWidth;	// 200 = 0xc8
    double maximumHeight;	// 208 = 0xd0
}

@property(nonatomic) double maximumHeight; // @synthesize maximumHeight;
@property(nonatomic) double maximumWidth; // @synthesize maximumWidth;
- (void)sizeToFitWithMaximumWidth;

@end

@interface BCAutosizingTokenField : NSTokenField
{
    double maximumWidth;	// 240 = 0xf0
}

@property(nonatomic) double maximumWidth; // @synthesize maximumWidth;
- (void)sizeToFitWithMaximumWidth;

@end

@interface BCBaseMagnifierButton : NSButton
{
    BCFlexibleColor *_chosenColor;	// 176 = 0xb0
}

@property(retain, nonatomic) BCFlexibleColor *chosenColor; // @synthesize chosenColor=_chosenColor;
- (void).cxx_destruct;
- (void)dealloc;
- (id)color;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;

@end

@interface BCBezierPath : NSObject <NSCopying, NSMutableCopying>
{
    NSBezierPath *_path;	// 8 = 0x8
}

+ (id)bezierPathWithRect:(struct CGRect)arg1;
+ (id)bezierPathWithPaths:(id)arg1;
+ (id)bezierPathWithNSBezierPath:(id)arg1;
@property(retain, nonatomic) NSBezierPath *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGRect)controlPointBounds;
- (struct CGRect)safeBounds;
- (struct CGRect)bounds;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (unsigned long long)elementAtIndex:(long long)arg1;
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;
@property(readonly, nonatomic) struct CGPoint lastPoint; // @dynamic lastPoint;
@property(readonly, nonatomic) struct CGPoint firstPoint; // @dynamic firstPoint;
@property(readonly, nonatomic) BOOL isEmpty; // @dynamic isEmpty;
@property(readonly, nonatomic) unsigned long long lineJoinStyle; // @dynamic lineJoinStyle;
@property(readonly, nonatomic) unsigned long long lineCapStyle; // @dynamic lineCapStyle;
@property(readonly, nonatomic) double length; // @dynamic length;
@property(readonly, nonatomic) unsigned long long elementCount; // @dynamic elementCount;
@property(readonly, nonatomic) unsigned long long windingRule; // @dynamic windingRule;
- (void)setLineWidth:(double)arg1;
@property(readonly, nonatomic) double lineWidth; // @dynamic lineWidth;
- (void)clipInBlock:(CDUnknownBlockType)arg1;
- (void)addClip;
- (void)strokeWithWidth:(double)arg1;
- (void)fillNonZero;
- (void)fillEvenOdd;
- (void)fill;
@property(readonly, nonatomic) NSBezierPath *bezierPath; // @dynamic bezierPath;
- (id)subPaths;
- (id)unCachedBezierPathWithSquareLineCapStyle;
- (id)bezierPathWithSquareLineCapStyle;
- (id)bezierPathWithLineWidth:(double)arg1;
- (id)joinedWith:(id)arg1;
- (id)bezierPathByFlatteningPath;
- (id)reversedPath;
- (id)booleanOp:(long long)arg1 withPath:(id)arg2;
- (id)booleanExclusiveOrWith:(id)arg1;
- (id)booleanSubtractWith:(id)arg1;
- (id)booleanIntersectWith:(id)arg1;
- (id)booleanUnionWith:(id)arg1;
- (id)unCachedOuterPathWithRect:(struct CGRect)arg1;
- (id)outerPathWithRect:(struct CGRect)arg1;
- (id)unCachedInsetPathBy:(double)arg1;
- (id)insetPathBy:(double)arg1;
- (id)bezierPathByGrowingBy_deprecated:(double)arg1;
- (id)unCachedOuterPathOfSize:(double)arg1;
- (id)outerPathOfSize:(double)arg1;
- (id)outlinePath;
- (id)unCachedOutlinePathWithWidth:(double)arg1;
- (id)outlinePathWithWidth:(double)arg1;
- (id)unCachedTransformedPath:(id)arg1;
- (id)transformedPath:(id)arg1;

@end

@interface BCBonjourBlockHandler : NSObject
{
    NSMutableDictionary *_handlers;	// 8 = 0x8
}

@property(retain, nonatomic) NSMutableDictionary *handlers; // @synthesize handlers=_handlers;
- (void).cxx_destruct;
- (void)handleCommand:(id)arg1 message:(id)arg2 receiver:(id)arg3;
- (void)setCommand:(id)arg1 handler:(CDUnknownBlockType)arg2;

@end

@interface BCBonjourBrowser : NSObject <NSNetServiceBrowserDelegate>
{
    CDUnknownBlockType _foundAction;	// 8 = 0x8
    CDUnknownBlockType _removedAction;	// 16 = 0x10
    NSNetServiceBrowser *_browser;	// 24 = 0x18
}

@property(retain, nonatomic) NSNetServiceBrowser *browser; // @synthesize browser=_browser;
@property(copy, nonatomic) CDUnknownBlockType removedAction; // @synthesize removedAction=_removedAction;
@property(copy, nonatomic) CDUnknownBlockType foundAction; // @synthesize foundAction=_foundAction;
- (void).cxx_destruct;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(BOOL)arg3;
- (void)cleanup;
- (void)dealloc;
- (id)init;

@end

@interface BCBonjourConnection : NSObject <NSStreamDelegate>
{
    BOOL _closing;	// 8 = 0x8
    int _socket;	// 12 = 0xc
    CDUnknownBlockType _handler;	// 16 = 0x10
    NSObject<OS_dispatch_io> *_channel;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_networkQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_archiveQueue;	// 40 = 0x28
    NSObject<OS_dispatch_source> *_pingTimer;	// 48 = 0x30
}

@property(nonatomic) BOOL closing; // @synthesize closing=_closing;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pingTimer; // @synthesize pingTimer=_pingTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *archiveQueue; // @synthesize archiveQueue=_archiveQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *networkQueue; // @synthesize networkQueue=_networkQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_io> *channel; // @synthesize channel=_channel;
@property(nonatomic) int socket; // @synthesize socket=_socket;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void).cxx_destruct;
- (void)failedWithError:(id)arg1;
- (void)opened;
- (void)closed;
- (void)reportIOError:(int)arg1 code:(unsigned long long)arg2 channel:(id)arg3;
- (void)sendDictionary:(id)arg1 terminateWhenDone:(BOOL)arg2;
- (void)disablePingTimer;
- (void)enablePingTimer;
- (void)sendDictionary:(id)arg1;
- (void)receivedDictionary:(id)arg1;
- (void)unarchiveDictionary:(id)arg1;
- (void)readDictionaryDataOfSize:(unsigned long long)arg1;
- (void)readDictionary;
- (void)dealloc;
- (void)shutdownChannel:(id)arg1;
- (void)configureSocket:(int)arg1;
- (void)close;
- (id)initWithSocket:(int)arg1 handler:(CDUnknownBlockType)arg2;

@end

@interface BCBonjourConnectionManager : NSObject
{
}

+ (void)releaseConnection:(id)arg1;
+ (void)delayedReleaseConnection:(id)arg1;

@end

@interface BCBonjourController : NSObject
{
    NSArray *_clients;	// 8 = 0x8
    CDUnknownBlockType _handler;	// 16 = 0x10
    unsigned long long _index;	// 24 = 0x18
    BCBonjourBrowser *_browser;	// 32 = 0x20
    NSMutableSet *_autoConnectClients;	// 40 = 0x28
}

@property(retain, nonatomic) NSMutableSet *autoConnectClients; // @synthesize autoConnectClients=_autoConnectClients;
@property(retain, nonatomic) BCBonjourBrowser *browser; // @synthesize browser=_browser;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(retain, nonatomic) NSArray *clients; // @synthesize clients=_clients;
- (void).cxx_destruct;
- (void)setAutoConnectForClient:(id)arg1 value:(BOOL)arg2;
- (BOOL)shouldAutoConnectClient:(id)arg1;
- (unsigned long long)indexOfClientWithName:(id)arg1;
- (void)removeClientForService:(id)arg1;
- (id)addClientForService:(id)arg1;
- (void)removeObjectFromClientsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inClientsAtIndex:(unsigned long long)arg2;
- (void)broadcastMessage:(id)arg1;
- (BOOL)hasConnections;
@property(readonly, nonatomic) NSArray *availableClients;
@property(readonly, nonatomic) NSArray *connectedClients;
- (void)cleanup;
- (id)initWithHandler:(CDUnknownBlockType)arg1;

@end

@interface BCBonjourDelegateHandler : NSObject
{
    id _delegate;	// 8 = 0x8
}

@property(retain, nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)handleCommand:(id)arg1 message:(id)arg2 receiver:(id)arg3;
- (id)initWithDelegate:(id)arg1;

@end

@interface BCBonjourListener : NSObject
{
    int _port;	// 8 = 0x8
    CDUnknownBlockType _handler;	// 16 = 0x10
    struct __CFSocket *_socket4;	// 24 = 0x18
    struct __CFRunLoopSource *_source4;	// 32 = 0x20
    struct __CFSocket *_socket6;	// 40 = 0x28
    struct __CFRunLoopSource *_source6;	// 48 = 0x30
}

@property(nonatomic) struct __CFRunLoopSource *source6; // @synthesize source6=_source6;
@property(nonatomic) struct __CFSocket *socket6; // @synthesize socket6=_socket6;
@property(nonatomic) struct __CFRunLoopSource *source4; // @synthesize source4=_source4;
@property(nonatomic) struct __CFSocket *socket4; // @synthesize socket4=_socket4;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(nonatomic) int port; // @synthesize port=_port;
- (void).cxx_destruct;
- (void)acceptConnectionFromAddress:(struct __CFData *)arg1 onSocket:(int)arg2;
- (struct __CFSocket *)newSocket:(id *)arg1 ip4:(BOOL)arg2 source:(struct __CFRunLoopSource **)arg3;
- (struct __CFRunLoopSource *)newRunLoopSourceForSocket:(struct __CFSocket *)arg1;
- (void)stop;
- (BOOL)start:(id *)arg1;
- (void)dealloc;
- (id)initWithConnectionHandler:(CDUnknownBlockType)arg1;

@end

@interface BCBonjourProxy : NSObject <NSNetServiceDelegate>
{
    CDUnknownBlockType _handler;	// 8 = 0x8
    NSUUID *_uuid;	// 16 = 0x10
    NSString *_model;	// 24 = 0x18
    NSString *_systemName;	// 32 = 0x20
    NSString *_systemVersion;	// 40 = 0x28
    NSString *_idiom;	// 48 = 0x30
    long long _state;	// 56 = 0x38
    long long _remoteState;	// 64 = 0x40
    BCBonjourConnection *_connection;	// 72 = 0x48
    NSNetService *_service;	// 80 = 0x50
    NSDictionary *_extendedInfo;	// 88 = 0x58
}

+ (id)keyPathsForValuesAffectingRemoteStateString;
+ (id)keyPathsForValuesAffectingStateString;
+ (id)keyPathsForValuesAffectingSystem;
+ (id)keyPathsForValuesAffectingConnected;
@property(retain, nonatomic) NSDictionary *extendedInfo; // @synthesize extendedInfo=_extendedInfo;
@property(retain, nonatomic) NSNetService *service; // @synthesize service=_service;
@property(retain, nonatomic) BCBonjourConnection *connection; // @synthesize connection=_connection;
@property long long remoteState; // @synthesize remoteState=_remoteState;
@property long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *idiom; // @synthesize idiom=_idiom;
@property(retain, nonatomic) NSString *systemVersion; // @synthesize systemVersion=_systemVersion;
@property(retain, nonatomic) NSString *systemName; // @synthesize systemName=_systemName;
@property(retain, nonatomic) NSString *model; // @synthesize model=_model;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void).cxx_destruct;
- (void)netService:(id)arg1 didUpdateTXTRecordData:(id)arg2;
- (void)netServiceDidResolveAddress:(id)arg1;
- (void)netService:(id)arg1 didNotResolve:(id)arg2;
- (void)updateInfo:(id)arg1;
- (id)description;
- (void)sendMessage:(id)arg1;
- (void)startConnecting;
- (int)openSocket;
@property(readonly, nonatomic) struct CGSize size;
@property(readonly, nonatomic) double scale;
@property(readonly, nonatomic) NSString *remoteStateString;
@property(readonly, nonatomic) NSString *stateString;
@property(readonly, nonatomic) NSString *system;
@property(readonly, nonatomic) NSString *name;
- (BOOL)connected;
- (void)disconnect;
- (void)connect;
- (void)updateWithService:(id)arg1;
- (void)cleanup;
- (void)dealloc;
- (id)initWithService:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)forceConnect;

@end

@interface BCBonjourShared : NSObject
{
}

+ (id)stringForState:(long long)arg1;
+ (id)serviceType;

@end

@interface BCColorListView : BCColorPickerBaseView
{
    NSArray *_colors;	// 176 = 0xb0
    long long _selectedColorIndex;	// 184 = 0xb8
}

@property(readonly, nonatomic) long long selectedColorIndex; // @synthesize selectedColorIndex=_selectedColorIndex;
@property(copy, nonatomic) NSArray *colors; // @synthesize colors=_colors;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseUp:(id)arg1;

@end

@interface BCColorPickerBaseView : NSControl
{
    id target;	// 176 = 0xb0
    SEL action;	// 184 = 0xb8
}

@property SEL action; // @synthesize action;
@property __weak id target; // @synthesize target;
- (void).cxx_destruct;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)drawMarkerInRect:(struct CGRect)arg1;
- (id)markerShadow;
- (void)drawCheckerboardPatternInRect:(struct CGRect)arg1;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (struct CGRect)contentBounds;
- (id)undoManager;
- (id)lightShadow;
- (id)darkShadow;
- (void)drawRect:(struct CGRect)arg1;
- (id)initInBounds:(struct CGRect)arg1;

@end

@interface BCColorPickerSliderView : BCColorPickerBaseView
{
}

- (void)drawSelectionMarkerAtPosition:(long long)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface BCColorPresetPicker : BCColorPickerBaseView
{
}

- (BOOL)isFlipped;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (unsigned long long)colorIndexAtPoint:(struct CGPoint)arg1;
- (unsigned long long)colorIndexForEvent:(id)arg1;
- (id)clickedColorForEvent:(id)arg1;
- (id)imageForColor:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)mouseDown:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BCColorPreview : BCColorPickerBaseView
{
    BCFlexibleColor *_color;	// 176 = 0xb0
}

@property(retain, nonatomic) BCFlexibleColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)mouseUp:(id)arg1;
- (void)drawCheckerboard;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (id)initInBounds:(struct CGRect)arg1;

@end

@interface BCFlexibleColor : NSObject
{
    double _red;	// 8 = 0x8
    double _green;	// 16 = 0x10
    double _blue;	// 24 = 0x18
    double _hue;	// 32 = 0x20
    double _sat;	// 40 = 0x28
    double _light;	// 48 = 0x30
    double _alpha;	// 56 = 0x38
}

+ (id)colorWithHue:(double)arg1 sat:(double)arg2 light:(double)arg3 alpha:(double)arg4;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(nonatomic) double light; // @synthesize light=_light;
@property(nonatomic) double sat; // @synthesize sat=_sat;
@property(nonatomic) double hue; // @synthesize hue=_hue;
@property(nonatomic) double blue; // @synthesize blue=_blue;
@property(nonatomic) double green; // @synthesize green=_green;
@property(nonatomic) double red; // @synthesize red=_red;
- (id)colorForColorSpace:(id)arg1;

@end

@interface BCFontSearchField : NSSearchField <NSTextViewDelegate>
{
    NSTableView *_searchResults;	// 216 = 0xd8
}

@property(nonatomic) __weak NSTableView *searchResults; // @synthesize searchResults=_searchResults;
- (void).cxx_destruct;
- (void)moveFocusToTableView;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;

@end

@interface BCHSBColorPicker : NSControl
{
    BCSaturationBrightnessColorPicker *sbPickerView;	// 176 = 0xb0
    BCHueColorPicker *hPickerView;	// 184 = 0xb8
    BCAlphaColorPicker *aPickerView;	// 192 = 0xc0
    BCColorPreview *colorPreviewView;	// 200 = 0xc8
    BCMagnifierButton *magnifierButton;	// 208 = 0xd0
    NSTextField *redComponentTextField;	// 216 = 0xd8
    NSTextField *greenComponentTextField;	// 224 = 0xe0
    NSTextField *blueComponentTextField;	// 232 = 0xe8
    NSTextField *hueComponentTextField;	// 240 = 0xf0
    NSTextField *satComponentTextField;	// 248 = 0xf8
    NSTextField *ligComponentTextField;	// 256 = 0x100
    NSTextField *alphaComponentTextField;	// 264 = 0x108
    NSTextField *hexValueTextField;	// 272 = 0x110
    long long ignoreColorActionsCounter;	// 280 = 0x118
    id target;	// 288 = 0x120
    SEL action;	// 296 = 0x128
}

@property SEL action; // @synthesize action;
@property __weak id target; // @synthesize target;
- (void).cxx_destruct;
- (void)colorListChanged:(id)arg1;
- (void)hexValueFieldChanged:(id)arg1;
- (void)rgbComponentFieldsChanged:(id)arg1;
- (void)hslComponentFieldsChanged:(id)arg1;
- (void)setColor:(id)arg1 ignoringFields:(id)arg2;
@property(copy, nonatomic) MSColor *color; // @dynamic color;
- (id)flexibleColor;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateColorPreviewView;
- (void)saturationBrightnessChanged:(id)arg1;
- (void)alphaChanged:(id)arg1;
- (void)hueChanged:(id)arg1;
- (void)magnifierAction:(id)arg1;
- (void)awakeFromNib;
- (void)constructSubviews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BCHSLFlexibleColor : BCFlexibleColor
{
}

- (double)blue;
- (double)green;
- (double)red;

@end

@interface BCHexTextField : NSTextField
{
}

- (BOOL)becomeFirstResponder;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;

@end

@interface BCHueColorPicker : BCColorPickerSliderView
{
    double _hueValue;	// 176 = 0xb0
}

@property(nonatomic) double hueValue; // @synthesize hueValue=_hueValue;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (id)initInBounds:(struct CGRect)arg1;

@end

@interface BCMagicWand : NSOperation
{
    unsigned long long _width;	// 24 = 0x18
    unsigned long long _height;	// 32 = 0x20
    int _tolerance;	// 40 = 0x28
    int _pushCounter;	// 44 = 0x2c
    int _popCounter;	// 48 = 0x30
    struct BCPixel _reference;	// 52 = 0x34
    NSBitmapImageRep *_bitmap;	// 56 = 0x38
    CDUnknownBlockType _wandCompletionBlock;	// 64 = 0x40
    NSBitmapImageRep *_maskImage;	// 72 = 0x48
    struct BCPixel *_pixels;	// 80 = 0x50
    struct BCPixel *_mask;	// 88 = 0x58
    char *_planned;	// 96 = 0x60
    int *_nextVisits;	// 104 = 0x68
    struct CGPoint _startPoint;	// 112 = 0x70
}

@property(nonatomic) int *nextVisits; // @synthesize nextVisits=_nextVisits;
@property(nonatomic) char *planned; // @synthesize planned=_planned;
@property(nonatomic) struct BCPixel reference; // @synthesize reference=_reference;
@property(nonatomic) int popCounter; // @synthesize popCounter=_popCounter;
@property(nonatomic) int pushCounter; // @synthesize pushCounter=_pushCounter;
@property(nonatomic) struct BCPixel *mask; // @synthesize mask=_mask;
@property(nonatomic) struct BCPixel *pixels; // @synthesize pixels=_pixels;
@property(retain, nonatomic) NSBitmapImageRep *maskImage; // @synthesize maskImage=_maskImage;
@property(copy, nonatomic) CDUnknownBlockType wandCompletionBlock; // @synthesize wandCompletionBlock=_wandCompletionBlock;
@property(retain, nonatomic) NSBitmapImageRep *bitmap; // @synthesize bitmap=_bitmap;
@property(nonatomic) int tolerance; // @synthesize tolerance=_tolerance;
@property(nonatomic) struct CGPoint startPoint; // @synthesize startPoint=_startPoint;
- (void).cxx_destruct;
- (struct CGPoint)popVisit;
- (void)pushVisit:(struct CGPoint)arg1;
- (void)collectVisitsForPoint:(struct CGPoint)arg1;
- (BOOL)pointMatch:(struct CGPoint)arg1;
- (void)run;
- (void)setUpMaskImage;
- (void)main;

@end

@interface BCMagnifier : NSObject
{
}

+ (unsigned int)displayIDForScreenPoint:(struct CGPoint)arg1;
+ (id)colorFromScreenGrab:(id)arg1 mouse:(struct CGPoint)arg2;
+ (void)pickColorWithCompletionBlock:(CDUnknownBlockType)arg1;
+ (struct CGPoint)pointInFlippedCoordinates:(struct CGPoint)arg1;

@end

@interface BCMagnifierButton : BCBaseMagnifierButton
{
}

+ (Class)cellClass;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BCMagnifierButtonCell : NSButtonCell
{
}

- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)lightShadow;

@end

@interface BCMagnifierWindow : NSWindow
{
    struct CGRect _screenFrame;	// 256 = 0x100
}

@property(nonatomic) struct CGRect screenFrame; // @synthesize screenFrame=_screenFrame;
- (void)flagsChanged;
- (void)setCurrentColor:(id)arg1;
- (void)setScreenGrab:(id)arg1;
- (void)mouseMovedTo:(struct CGPoint)arg1;
- (id)initWithScreenGrab:(id)arg1;
- (struct CGRect)frameForWindowAroundMouse;

@end

@interface BCMagnifierWindowContentView : NSView
{
    BCScreenGrab *_screenGrab;	// 152 = 0x98
    BCFlexibleColor *_currentColor;	// 160 = 0xa0
}

@property(retain, nonatomic) BCFlexibleColor *currentColor; // @synthesize currentColor=_currentColor;
@property(retain, nonatomic) BCScreenGrab *screenGrab; // @synthesize screenGrab=_screenGrab;
- (void).cxx_destruct;
- (void)drawMiddlePixel;
- (void)drawPixelLines;
- (void)drawBlackBorder:(id)arg1;
- (void)drawCurrentColorValues;
- (void)drawMagnifiedImage;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface BCMutableBezierPath : BCBezierPath
{
}

- (id)bezierPathWithLineWidth:(double)arg1;
- (id)joinedWith:(id)arg1;
- (id)reversedPath;
- (id)booleanOp:(long long)arg1 withPath:(id)arg2;
- (id)booleanExclusiveOrWith:(id)arg1;
- (id)booleanSubtractWith:(id)arg1;
- (id)booleanIntersectWith:(id)arg1;
- (id)booleanUnionWith:(id)arg1;
- (id)bezierPathByGrowingBy_deprecated:(double)arg1;
- (id)insetPathBy:(double)arg1;
- (id)outerPathOfSize:(double)arg1;
- (id)outlinePath;
- (id)outlinePathWithWidth:(double)arg1;
- (id)transformedPath:(id)arg1;
- (void)appendBezierPath:(id)arg1;
@property(copy, nonatomic) NSArray *dashPattern; // @dynamic dashPattern;
@property(nonatomic) unsigned long long lineJoinStyle; // @dynamic lineJoinStyle;
@property(nonatomic) unsigned long long lineCapStyle; // @dynamic lineCapStyle;
@property(nonatomic) unsigned long long windingRule; // @dynamic windingRule;
@property(nonatomic) double lineWidth; // @dynamic lineWidth;

@end

@interface BCPopover : NSObject <NSWindowDelegate>
{
    BOOL dontSendNextPopoverWindowSizeNotification;	// 8 = 0x8
    BOOL _constrainToScreenSize;	// 9 = 0x9
    NSViewController<BCPopoverContentController> *_contentViewController;	// 16 = 0x10
    id <BCPopoverDelegate> _delegate;	// 24 = 0x18
    BCPopoverWindow *_window;	// 32 = 0x20
    NSView *_attachedToView;	// 40 = 0x28
    unsigned long long _preferredEdge;	// 48 = 0x30
}

@property(nonatomic) unsigned long long preferredEdge; // @synthesize preferredEdge=_preferredEdge;
@property(nonatomic) BOOL constrainToScreenSize; // @synthesize constrainToScreenSize=_constrainToScreenSize;
@property(retain, nonatomic) NSView *attachedToView; // @synthesize attachedToView=_attachedToView;
@property(retain, nonatomic) BCPopoverWindow *window; // @synthesize window=_window;
@property(nonatomic) __weak id <BCPopoverDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSViewController<BCPopoverContentController> *contentViewController; // @synthesize contentViewController=_contentViewController;
- (void).cxx_destruct;
- (void)dealloc;
- (void)close;
- (void)windowWillClose:(id)arg1;
- (struct CGRect)windowRectForViewSize:(struct CGSize)arg1 above:(struct CGRect)arg2 pointingTo:(struct CGPoint)arg3 edge:(unsigned long long)arg4;
- (struct CGPoint)pointAtEdge:(unsigned long long)arg1 ofRect:(struct CGRect)arg2;
- (void)attachedViewDidMove:(id)arg1;
- (struct CGPoint)attachToPointInScreenCoordinates;
- (struct CGRect)screenAnchorRect;
- (struct CGRect)popoverWindowFrame;
- (struct CGRect)screenFrame;
- (double)popoverArrowPosition;
- (void)otherPopoverDidShow:(id)arg1;
- (void)contentViewDidResizeNotification:(id)arg1;
- (void)configureNotifications:(id)arg1;
- (void)move;
- (void)showRelativeToView:(id)arg1 preferredEdge:(unsigned long long)arg2;
- (id)init;

@end

@interface BCPopoverContentView : NSView
{
    NSColor *_backgroundColor;	// 152 = 0x98
    unsigned long long _arrowEdge;	// 160 = 0xa0
    double _arrowPosition;	// 168 = 0xa8
}

@property(nonatomic) double arrowPosition; // @synthesize arrowPosition=_arrowPosition;
@property(nonatomic) unsigned long long arrowEdge; // @synthesize arrowEdge=_arrowEdge;
@property(copy, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)backgroundPath;
- (struct CGRect)availableContentRect;
- (BOOL)canBecomeKeyView;
- (void)cancelOperation:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)keyDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface BCPopoverWindow : NSWindow
{
}

+ (id)attachedWindowWithView:(id)arg1;
- (id)arrowView;
@property(nonatomic) double arrowPosition; // @dynamic arrowPosition;
@property(nonatomic) unsigned long long arrowEdge; // @dynamic arrowEdge;
- (unsigned long long)collectionBehavior;
- (BOOL)canBecomeKeyWindow;
- (void)resignMainWindow;
- (id)initWithContentRect:(struct CGRect)arg1;

@end

@interface BCRGBFlexibleColor : BCFlexibleColor
{
}

- (double)light;
- (double)sat;
- (double)hue;

@end

@interface BCReceiptValidation : NSObject
{
}

@end

@interface BCReceiptValidationException : NSException
{
}

+ (void)raiseWithStatus:(unsigned long long)arg1 error:(int)arg2;
+ (void)raiseWithStatus:(unsigned long long)arg1;
+ (id)exceptionWithStatus:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long status;

@end

@interface BCRegistrationController : NSObject
{
}

- (BOOL)validateMenuItem:(id)arg1;
- (void)purchaseAction:(id)arg1;

@end

@interface BCRegistrationSheet : CHSheetController
{
    NSTextField *licenseField;	// 80 = 0x50
}

- (void).cxx_destruct;
- (void)awakeFromNib;
- (void)visitStore:(id)arg1;
- (void)cancel:(id)arg1;
- (void)registerAction:(id)arg1;

@end

@interface BCSaturationBrightnessColorPicker : BCColorPickerBaseView
{
    struct CGPoint _originalPoint;	// 176 = 0xb0
    double _hue;	// 192 = 0xc0
    double _saturation;	// 200 = 0xc8
    double _brightness;	// 208 = 0xd0
}

@property(nonatomic) double brightness; // @synthesize brightness=_brightness;
@property(nonatomic) double saturation; // @synthesize saturation=_saturation;
@property(nonatomic) double hue; // @synthesize hue=_hue;
- (void)dealloc;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (struct CGRect)pickerRect;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (id)initInBounds:(struct CGRect)arg1;

@end

@interface BCScreenGrab : NSObject
{
    unsigned int _displayID;	// 8 = 0x8
    NSImage *_image;	// 16 = 0x10
    NSBitmapImageRep *_bitmapRep;	// 24 = 0x18
    NSColorSpace *_colorSpace;	// 32 = 0x20
}

+ (id)screenGrabForDisplay:(unsigned int)arg1;
@property(retain, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(retain, nonatomic) NSBitmapImageRep *bitmapRep; // @synthesize bitmapRep=_bitmapRep;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(nonatomic) unsigned int displayID; // @synthesize displayID=_displayID;
- (void).cxx_destruct;
- (id)currentScreen;
- (BOOL)isRetinaScreen;
@property(readonly, nonatomic) struct CGRect screenFrame; // @dynamic screenFrame;

@end

@interface BCTrialChecker : NSObject
{
}

+ (void)runLicenseDialog;
+ (void)run;

@end

@interface BCTrialCountdown : NSObject
{
}

+ (id)trialPopUpWithNumberOfDays:(long long)arg1;
+ (void)hideCountdownButton;
+ (void)showCountDownWithNumberOfDays:(long long)arg1 inWindow:(id)arg2;

@end

@interface BCTrialExpiredWindowController : NSWindowController
{
    NSView *normalView;	// 80 = 0x50
    NSView *registrationView;	// 88 = 0x58
    NSTextField *registrationField;	// 96 = 0x60
    NSTextField *subTextField;	// 104 = 0x68
    NSTextField *mainTextField;	// 112 = 0x70
}

+ (void)show;
- (void).cxx_destruct;
- (void)registerLicense:(id)arg1;
- (void)visitStore:(id)arg1;
- (void)registerVolume:(id)arg1;
- (void)quit:(id)arg1;
- (void)buy:(id)arg1;
- (void)replaceApplicationNameInView:(id)arg1;
- (void)awakeFromNib;

@end

@interface BCUndoManager : NSUndoManager
{
    int _undoNameRegistrationDisabledCounter;	// 72 = 0x48
    int _undCoalescingDisabledCounter;	// 76 = 0x4c
    BOOL shouldOpenUndoGroup;	// 80 = 0x50
    BOOL hasOpenedUndoGroup;	// 81 = 0x51
}

- (void)enableUndoCoalescing;
- (void)disableUndoCoalescing;
- (BOOL)shouldCoalesceOldAction:(id)arg1 withNewAction:(id)arg2;
- (void)redo;
- (void)undo;
- (id)redoActionName;
- (id)undoActionName;
- (void)setActionName:(id)arg1 sender:(id)arg2;
- (void)setAdvancedActionName:(id)arg1;
- (void)endUndoGrouping;
- (void)prepareForUndo;
- (void)registerUndoWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (id)prepareWithInvocationTarget:(id)arg1;
- (void)setActionName:(id)arg1;
- (void)disableUndoNameRegistration;
- (void)enableUndoNameRegistration;
- (void)bc_openUndoGroupIfNecessary;
- (void)endMasterUndoGrouping;
- (void)beginMasterUndoGrouping;

@end

@interface BezierAccumulator : CHSingletonObject
{
    NSBezierPath *accumulatedPath;	// 8 = 0x8
}

@property(retain, nonatomic) NSBezierPath *accumulatedPath; // @synthesize accumulatedPath;
- (void).cxx_destruct;
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)setFirstPoint:(struct CGPoint)arg1;
- (void)reset;
- (id)init;

@end

@interface CATransaction (MSDisableAnimation)
+ (void)disableAnimationsInBlock:(CDUnknownBlockType)arg1;
@end

@interface CHAffine : NSAffineTransform
{
}

+ (id)affine;
- (id)scaleY:(double)arg1;
- (id)scaleX:(double)arg1;
- (id)scale:(double)arg1;
- (id)rotate:(double)arg1;
- (id)translateY:(double)arg1;
- (id)translateX:(double)arg1;
- (id)translate:(struct CGPoint)arg1;

@end

@interface CHFlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface CHInputSheet : CHSheetController
{
    NSTextField *titleField;	// 80 = 0x50
    NSTextField *subtitleField;	// 88 = 0x58
    NSTextField *fieldTitleField;	// 96 = 0x60
    NSTextField *inputField;	// 104 = 0x68
}

- (void).cxx_destruct;
- (void)confirm:(id)arg1;
- (void)setDefaultValue:(id)arg1;
- (void)setFieldTitle:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;

@end

@interface CHLinedWhiteView : CHPlainWhiteView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface CHPlainWhiteView : NSView
{
    NSString *displayString;	// 152 = 0x98
}

@property(copy) NSString *displayString; // @synthesize displayString;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface CHProgressSheet : CHSheetController
{
    NSTextField *textField;	// 80 = 0x50
    NSProgressIndicator *progress;	// 88 = 0x58
    long long maximum;	// 96 = 0x60
    long long value;	// 104 = 0x68
    NSTextField *titleField;	// 112 = 0x70
    NSTextField *subtitleField;	// 120 = 0x78
    NSButton *cancelButton;	// 128 = 0x80
}

@property long long value; // @synthesize value;
@property long long maximum; // @synthesize maximum;
- (void).cxx_destruct;
- (void)setIndeterminate:(BOOL)arg1;
- (void)cancel:(id)arg1;
- (void)setShowsCancelButton:(BOOL)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (BOOL)isMaximum;
- (void)setMessage:(id)arg1;
- (void)incrementProgressBy:(long long)arg1;
- (void)incrementProgress;
- (void)setProgressMaximum:(long long)arg1;
- (void)awakeFromNib;

@end

@interface CHSheetController : NSWindowController
{
    id _object;	// 80 = 0x50
    id _delegate;	// 88 = 0x58
}

+ (id)runForWindow:(id)arg1 withObject:(id)arg2 delegate:(id)arg3;
+ (id)runForWindow:(id)arg1 withObject:(id)arg2;
+ (id)runForWindow:(id)arg1;
+ (id)runWithObject:(id)arg1;
+ (id)run;
@property __weak id delegate; // @synthesize delegate=_delegate;
@property(retain) id object; // @synthesize object=_object;
- (void).cxx_destruct;
- (void)_sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)dealloc;
- (id)_init;
- (id)windowNibName;
- (void)cancel:(id)arg1;
- (void)confirm:(id)arg1;

@end

@interface CHSingletonObject : NSObject
{
}

+ (id)sharedController;
- (void)awakeFromNib;
- (id)init;

@end

@interface CHSingletonWindowController : NSWindowController
{
}

+ (id)sharedController;
+ (BOOL)hasSharedController;
- (void)awakeFromNib;
- (id)initWithWindowNibName:(id)arg1;

@end

@interface CHStringAttributes : NSDictionary <NSCopying>
{
    NSMutableDictionary *attributes;	// 8 = 0x8
}

+ (id)stringAttributesWithFont:(id)arg1 color:(id)arg2 alignment:(unsigned long long)arg3;
+ (id)stringAttributesWithFont:(id)arg1 color:(id)arg2;
+ (id)stringAttributesWithColor:(id)arg1;
+ (id)stringAttributesWithFont:(id)arg1;
+ (id)stringAttributes;
+ (id)stringAttributesWithBlock:(CDUnknownBlockType)arg1;
- (void).cxx_destruct;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (void)setBigShadowOfColor:(id)arg1 location:(long long)arg2;
- (void)setShadowOfColor:(id)arg1 location:(long long)arg2;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(retain) NSShadow *shadow;
- (void)disableHyphenation;
@property unsigned long long alignment; // @dynamic alignment;
@property(retain) NSColor *color; // @dynamic color;
@property double fontSize; // @dynamic fontSize;
@property(retain) NSFont *font; // @dynamic font;
- (id)initWithDictionary:(id)arg1;
- (id)init;
- (id)initWithObjects:(const id *)arg1 forKeys:(const id *)arg2 count:(unsigned long long)arg3;

@end

@interface CHTransparentView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CHTransparentWindow : NSWindow
{
}

- (BOOL)canBecomeKeyWindow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (id)initWithContentRect:(struct CGRect)arg1;

@end

@interface CHTuple : NSObject
{
    id _first;	// 8 = 0x8
    id _second;	// 16 = 0x10
}

+ (id)tupleWith:(id)arg1 and:(id)arg2;
@property(retain, nonatomic) id second; // @synthesize second=_second;
@property(retain, nonatomic) id first; // @synthesize first=_first;
- (void).cxx_destruct;
- (void)each:(CDUnknownBlockType)arg1;

@end

@interface CHViewController : NSViewController
{
    CHViewController *_parentViewController;	// 104 = 0x68
    NSArray *_childViewControllers;	// 112 = 0x70
}

@property(copy, nonatomic) NSArray *childViewControllers; // @synthesize childViewControllers=_childViewControllers;
@property(nonatomic) __weak CHViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
- (void).cxx_destruct;
- (void)setTargetsToNil:(id)arg1;
- (void)dealloc;
- (id)firstResponderAlternativeForLosingFocus;
- (void)viewControllerWillDisappear;
- (id)rootViewController;
- (void)removeChildViewController:(id)arg1;
- (void)addChildViewController:(id)arg1;
- (id)nibName;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface CHWhiteView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface CIImage (CHCIImageAdditions)
- (id)imageByScaling:(double)arg1;
- (id)PNGRepresentationWithInterlaced:(BOOL)arg1;
@end

@interface CIVector (CIVector_NSPoint)
+ (id)vectorWithPoint:(struct CGPoint)arg1;
@end

@interface CSAPI : NSObject <CSRestClientDelegate>
{
    NSURL *baseURL;	// 8 = 0x8
    CSRestClient *_restClient;	// 16 = 0x10
    CSOAuthConfig *_authConfig;	// 24 = 0x18
    NSString *_APIKey;	// 32 = 0x20
}

+ (BOOL)isValidEmailAddress:(id)arg1;
+ (id)paginationParametersWithPage:(unsigned long long)arg1 pageSize:(unsigned long long)arg2 orderField:(id)arg3 ascending:(BOOL)arg4;
+ (id)sharedDateFormatter;
@property(copy) NSString *APIKey; // @synthesize APIKey=_APIKey;
@property(retain) CSOAuthConfig *authConfig; // @synthesize authConfig=_authConfig;
@property(retain) CSRestClient *restClient; // @synthesize restClient=_restClient;
@property(copy) NSURL *baseURL; // @synthesize baseURL;
- (void).cxx_destruct;
- (void)logout;
- (void)getAuthorizationHeader:(CDUnknownBlockType)arg1;
@property(readonly) BOOL isAuthorized; // @dynamic isAuthorized;
@property(readonly) NSString *userAgent; // @dynamic userAgent;
- (id)initWithAPIKey:(id)arg1;
- (id)initWithClientID:(id)arg1 clientSecret:(id)arg2 scope:(id)arg3;
- (id)init;
- (void)deactivateWebhookWithListID:(id)arg1 webhookID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)activateWebhookWithListID:(id)arg1 webhookID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)deleteWebhookWithListID:(id)arg1 webhookID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)testWebhookWithListID:(id)arg1 webhookID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getWebhooksWithListID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)createWebhookWithListID:(id)arg1 events:(id)arg2 URLString:(id)arg3 payloadFormat:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)deleteCustomFieldWithListID:(id)arg1 customFieldKey:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)updateCustomFieldOptionsWithListID:(id)arg1 customFieldKey:(id)arg2 options:(id)arg3 keepExisting:(BOOL)arg4 completionHandler:(CDUnknownBlockType)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)updateCustomFieldWithListID:(id)arg1 customField:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)createCustomFieldWithListID:(id)arg1 customField:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getCustomFieldsWithListID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getBouncedSubscribersWithListID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getDeletedSubscribersWithListID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getUnsubscribedSubscribersWithListID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getUnconfirmedSubscribersWithListID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getActiveSubscribersWithListID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getSubscribersWithListID:(id)arg1 slug:(id)arg2 date:(id)arg3 page:(unsigned long long)arg4 pageSize:(unsigned long long)arg5 orderField:(id)arg6 ascending:(BOOL)arg7 completionHandler:(CDUnknownBlockType)arg8 errorHandler:(CDUnknownBlockType)arg9;
- (void)getListSegmentsWithListID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getListStatisticsWithListID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getListDetailsWithListID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)deleteListWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)updateListWithListID:(id)arg1 title:(id)arg2 unsubscribePage:(id)arg3 unsubscribeSetting:(id)arg4 confirmationSuccessPage:(id)arg5 shouldConfirmOptIn:(BOOL)arg6 addUnsubscribesToSuppList:(BOOL)arg7 scrubActiveWithSuppList:(BOOL)arg8 completionHandler:(CDUnknownBlockType)arg9 errorHandler:(CDUnknownBlockType)arg10;
- (void)createListWithClientID:(id)arg1 title:(id)arg2 unsubscribePage:(id)arg3 unsubscribeSetting:(id)arg4 confirmationSuccessPage:(id)arg5 shouldConfirmOptIn:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getExternalSessionUrl:(id)arg1 chrome:(id)arg2 url:(id)arg3 integratorID:(id)arg4 clientID:(id)arg5 completionHandler:(CDUnknownBlockType)arg6 errorHandler:(CDUnknownBlockType)arg7;
- (void)getPrimaryContact:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)setPrimaryContactWithEmailAddress:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)deleteAdministratorWithEmailAddress:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getAdministratorWithEmailAddress:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getAdministrators:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)updateAdministratorWithEmailAddress:(id)arg1 name:(id)arg2 newEmailAddress:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)addAdministratorWithName:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getSystemDate:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)getTimezones:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)getCountries:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)getBillingDetails:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)getClients:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)getAPIKeyWithSiteURL:(id)arg1 username:(id)arg2 password:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)importSubscribersToListWithID:(id)arg1 subscribers:(id)arg2 shouldResubscribe:(BOOL)arg3 shouldQueueSubscriptionBasedAutoresponders:(BOOL)arg4 shouldRestartSubscriptionBasedAutoresponders:(BOOL)arg5 completionHandler:(CDUnknownBlockType)arg6 errorHandler:(CDUnknownBlockType)arg7;
- (void)getSubscriberHistoryWithListID:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getSubscriberDetailsWithListID:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)unsubscribeFromListWithID:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)updateSubscriptionWithListID:(id)arg1 currentEmailAddress:(id)arg2 newEmailAddress:(id)arg3 name:(id)arg4 shouldResubscribe:(BOOL)arg5 customFields:(id)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)subscribeToListWithID:(id)arg1 emailAddress:(id)arg2 name:(id)arg3 shouldResubscribe:(BOOL)arg4 customFields:(id)arg5 completionHandler:(CDUnknownBlockType)arg6 errorHandler:(CDUnknownBlockType)arg7;
- (void)deleteTemplateWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)updateTemplateWithTemplateID:(id)arg1 name:(id)arg2 htmlURLURL:(id)arg3 zipFileURL:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)createTemplateWithClientID:(id)arg1 name:(id)arg2 htmlURLURL:(id)arg3 zipFileURL:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)getTemplateDetailsWithTemplateID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getOAuthAuthorizationHeader:(CDUnknownBlockType)arg1;
- (id)OAuthAuthorizationHeader;
- (void)refreshAuthorizationInfo:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)getAuthorizationInfoWithCode:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getAuthorizationInfoWithParameters:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (BOOL)handleOpenURL:(id)arg1;
- (void)updateConfigWithAuthorizationInfo:(id)arg1;
- (void)authorize;
- (BOOL)canOpenURL:(id)arg1;
- (BOOL)appConformsToScheme;
@property(readonly) NSURL *authorizationURL; // @dynamic authorizationURL;
@property(readonly) NSString *appScheme; // @dynamic appScheme;
- (void)deleteSegmentWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getActiveSubscribersWithSegmentID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getSegmentDetailsWithSegmentID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)removeAllRulesFromSegmentWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)addRuleToSegmentWithID:(id)arg1 rule:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)updateSegmentWithSegmentID:(id)arg1 title:(id)arg2 rules:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)createSegmentWithListID:(id)arg1 title:(id)arg2 rules:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)getPrimaryContactWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)setPrimaryContactWithClientID:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)deletePersonWithClientID:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getPersonDetailsWithClientID:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getPeopleWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)updatePersonWithClientID:(id)arg1 name:(id)arg2 currentEmailAddress:(id)arg3 newEmailAddress:(id)arg4 password:(id)arg5 accessLevel:(unsigned long long)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)addPersonWithClientID:(id)arg1 name:(id)arg2 emailAddress:(id)arg3 password:(id)arg4 accessLevel:(unsigned long long)arg5 completionHandler:(CDUnknownBlockType)arg6 errorHandler:(CDUnknownBlockType)arg7;
- (void)getTemplatesWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getSegmentsWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)unsuppressEmailAddressWithClientID:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)suppressEmailAddressesWithClientID:(id)arg1 emailAddresses:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getSuppressionListWithClientID:(id)arg1 page:(unsigned long long)arg2 pageSize:(unsigned long long)arg3 orderField:(id)arg4 ascending:(BOOL)arg5 completionHandler:(CDUnknownBlockType)arg6 errorHandler:(CDUnknownBlockType)arg7;
- (void)getSubscriberListsForEmailAddressWithClientID:(id)arg1 emailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getSubscriberListsWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getDraftCampaignsWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getScheduledCampaignsWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getSentCampaignsWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getCampaignsWithClientID:(id)arg1 slug:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)getClientDetailsWithClientID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)transferCreditsWithClientID:(id)arg1 credits:(long long)arg2 canUseMyCreditsWhenTheyRunOut:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)setClientMonthlyBillingWithClientID:(id)arg1 currency:(id)arg2 clientPays:(BOOL)arg3 markupPercentage:(float)arg4 monthlyScheme:(id)arg5 completionHandler:(CDUnknownBlockType)arg6 errorHandler:(CDUnknownBlockType)arg7;
- (void)setClientPAYGBillingSettingsWithClientID:(id)arg1 currency:(id)arg2 canPurchaseCredits:(BOOL)arg3 clientPays:(BOOL)arg4 markupPercentage:(float)arg5 markupOnDelivery:(float)arg6 markupPerRecipient:(float)arg7 markupOnDesignSpamTest:(float)arg8 completionHandler:(CDUnknownBlockType)arg9 errorHandler:(CDUnknownBlockType)arg10;
- (void)deleteClientWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)updateClientWithClientID:(id)arg1 companyName:(id)arg2 country:(id)arg3 timezone:(id)arg4 completionHandler:(CDUnknownBlockType)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)createClientWithCompanyName:(id)arg1 country:(id)arg2 timezone:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)getCampaignSpamComplaintsWithCampaignID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getCampaignUnsubscribesWithCampaignID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getCampaignClicksWithCampaignID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getCampaignOpensWithCampaignID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getCampaignBouncesWithCampaignID:(id)arg1 date:(id)arg2 page:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 orderField:(id)arg5 ascending:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7 errorHandler:(CDUnknownBlockType)arg8;
- (void)getCampaignRecipientsWithCampaignID:(id)arg1 page:(unsigned long long)arg2 pageSize:(unsigned long long)arg3 orderField:(id)arg4 ascending:(BOOL)arg5 completionHandler:(CDUnknownBlockType)arg6 errorHandler:(CDUnknownBlockType)arg7;
- (void)getCampaignRecipientsWithCampaignID:(id)arg1 slug:(id)arg2 resultClass:(Class)arg3 date:(id)arg4 page:(unsigned long long)arg5 pageSize:(unsigned long long)arg6 orderField:(id)arg7 ascending:(BOOL)arg8 completionHandler:(CDUnknownBlockType)arg9 errorHandler:(CDUnknownBlockType)arg10;
- (void)getCampaignListsAndSegmentsWithCampaignID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getCampaignEmailClientUsageWithCampaignID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)getCampaignSummaryWithCampaignID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)unscheduleCampaignWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)sendCampaignPreviewWithCampaignID:(id)arg1 recipients:(id)arg2 personalize:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)sendCampaignWithCampaignID:(id)arg1 confirmationEmailAddress:(id)arg2 sendDate:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)sendCampaignImmediatelyWithCampaignID:(id)arg1 confirmationEmailAddress:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)sendCampaignWithCampaignID:(id)arg1 confirmationEmailAddress:(id)arg2 sendDateString:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)deleteCampaignWithID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)createCampaignFromTemplateWithClientID:(id)arg1 name:(id)arg2 subject:(id)arg3 fromName:(id)arg4 fromEmail:(id)arg5 replyTo:(id)arg6 listIDs:(id)arg7 segmentIDs:(id)arg8 templateID:(id)arg9 templateContent:(id)arg10 completionHandler:(CDUnknownBlockType)arg11 errorHandler:(CDUnknownBlockType)arg12;
- (void)createCampaignWithClientID:(id)arg1 name:(id)arg2 subject:(id)arg3 fromName:(id)arg4 fromEmail:(id)arg5 replyTo:(id)arg6 htmlURL:(id)arg7 textURL:(id)arg8 listIDs:(id)arg9 segmentIDs:(id)arg10 completionHandler:(CDUnknownBlockType)arg11 errorHandler:(CDUnknownBlockType)arg12;

@end

@interface CSAdministrator : NSObject
{
    NSString *_name;	// 8 = 0x8
    NSString *_emailAddress;	// 16 = 0x10
    NSString *_status;	// 24 = 0x18
}

+ (id)administratorWithDictionary:(id)arg1;
@property(copy) NSString *status; // @synthesize status=_status;
@property(copy) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;

@end

@interface CSBillingDetails : NSObject
{
    unsigned long long _credits;	// 8 = 0x8
}

+ (id)billingDetailsWithDictionary:(id)arg1;
@property unsigned long long credits; // @synthesize credits=_credits;

@end

@interface CSCampaign : NSObject
{
    NSString *_campaignID;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    NSString *_subject;	// 24 = 0x18
    NSString *_fromName;	// 32 = 0x20
    NSString *_fromEmail;	// 40 = 0x28
    NSString *_replyTo;	// 48 = 0x30
    NSString *_webVersionPage;	// 56 = 0x38
    NSString *_webVersionTextPage;	// 64 = 0x40
    NSString *_previewPage;	// 72 = 0x48
    NSString *_previewTextPage;	// 80 = 0x50
    NSDate *_dateCreated;	// 88 = 0x58
    NSDate *_dateScheduled;	// 96 = 0x60
    NSString *_scheduledTimeZone;	// 104 = 0x68
    NSDate *_dateSent;	// 112 = 0x70
    unsigned long long _totalRecipients;	// 120 = 0x78
}

+ (id)campaignWithDictionary:(id)arg1;
@property unsigned long long totalRecipients; // @synthesize totalRecipients=_totalRecipients;
@property(retain) NSDate *dateSent; // @synthesize dateSent=_dateSent;
@property(copy) NSString *scheduledTimeZone; // @synthesize scheduledTimeZone=_scheduledTimeZone;
@property(retain) NSDate *dateScheduled; // @synthesize dateScheduled=_dateScheduled;
@property(retain) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(copy) NSString *previewTextPage; // @synthesize previewTextPage=_previewTextPage;
@property(copy) NSString *previewPage; // @synthesize previewPage=_previewPage;
@property(copy) NSString *webVersionTextPage; // @synthesize webVersionTextPage=_webVersionTextPage;
@property(copy) NSString *webVersionPage; // @synthesize webVersionPage=_webVersionPage;
@property(copy) NSString *replyTo; // @synthesize replyTo=_replyTo;
@property(copy) NSString *fromEmail; // @synthesize fromEmail=_fromEmail;
@property(copy) NSString *fromName; // @synthesize fromName=_fromName;
@property(copy) NSString *subject; // @synthesize subject=_subject;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *campaignID; // @synthesize campaignID=_campaignID;
- (void).cxx_destruct;

@end

@interface CSCampaignBouncedRecipient : CSCampaignRecipient
{
    NSString *_bounceType;	// 8 = 0x8
    NSString *_reason;	// 16 = 0x10
}

@property(copy) NSString *reason; // @synthesize reason=_reason;
@property(copy) NSString *bounceType; // @synthesize bounceType=_bounceType;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface CSCampaignEmailClient : NSObject
{
    float _percentage;	// 8 = 0x8
    NSString *_client;	// 16 = 0x10
    NSString *_version;	// 24 = 0x18
    unsigned long long _subscribers;	// 32 = 0x20
}

+ (id)campaignEmailClientWithDictionary:(id)arg1;
@property unsigned long long subscribers; // @synthesize subscribers=_subscribers;
@property float percentage; // @synthesize percentage=_percentage;
@property(copy) NSString *version; // @synthesize version=_version;
@property(copy) NSString *client; // @synthesize client=_client;
- (void).cxx_destruct;

@end

@interface CSCampaignRecipient : NSObject
{
    float _latitude;	// 8 = 0x8
    float _longitude;	// 12 = 0xc
    NSString *_emailAddress;	// 16 = 0x10
    NSString *_listID;	// 24 = 0x18
    NSDate *_date;	// 32 = 0x20
    NSString *_IPAddress;	// 40 = 0x28
    NSString *_city;	// 48 = 0x30
    NSString *_region;	// 56 = 0x38
    NSString *_countryCode;	// 64 = 0x40
    NSString *_countryName;	// 72 = 0x48
}

@property(copy) NSString *countryName; // @synthesize countryName=_countryName;
@property(copy) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(copy) NSString *region; // @synthesize region=_region;
@property(copy) NSString *city; // @synthesize city=_city;
@property float longitude; // @synthesize longitude=_longitude;
@property float latitude; // @synthesize latitude=_latitude;
@property(copy) NSString *IPAddress; // @synthesize IPAddress=_IPAddress;
@property(retain) NSDate *date; // @synthesize date=_date;
@property(copy) NSString *listID; // @synthesize listID=_listID;
@property(copy) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface CSCampaignRecipientClicked : CSCampaignRecipient
{
    NSURL *_URL;	// 8 = 0x8
}

@property(retain) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface CSCampaignSummary : NSObject
{
    unsigned long long _recipientCount;	// 8 = 0x8
    unsigned long long _openedCount;	// 16 = 0x10
    unsigned long long _clickCount;	// 24 = 0x18
    unsigned long long _unsubscribedCount;	// 32 = 0x20
    unsigned long long _bouncedCount;	// 40 = 0x28
    unsigned long long _uniqueOpenedCount;	// 48 = 0x30
    unsigned long long _spamComplaints;	// 56 = 0x38
    unsigned long long _forwardsCount;	// 64 = 0x40
    unsigned long long _likesCount;	// 72 = 0x48
    unsigned long long _mentionsCount;	// 80 = 0x50
    NSString *_webVersionPage;	// 88 = 0x58
    NSString *_webVersionTextPage;	// 96 = 0x60
    NSString *_worldviewURL;	// 104 = 0x68
}

+ (id)campaignSummaryWithDictionary:(id)arg1;
@property(copy) NSString *worldviewURL; // @synthesize worldviewURL=_worldviewURL;
@property(copy) NSString *webVersionTextPage; // @synthesize webVersionTextPage=_webVersionTextPage;
@property(copy) NSString *webVersionPage; // @synthesize webVersionPage=_webVersionPage;
@property unsigned long long mentionsCount; // @synthesize mentionsCount=_mentionsCount;
@property unsigned long long likesCount; // @synthesize likesCount=_likesCount;
@property unsigned long long forwardsCount; // @synthesize forwardsCount=_forwardsCount;
@property unsigned long long spamComplaints; // @synthesize spamComplaints=_spamComplaints;
@property unsigned long long uniqueOpenedCount; // @synthesize uniqueOpenedCount=_uniqueOpenedCount;
@property unsigned long long bouncedCount; // @synthesize bouncedCount=_bouncedCount;
@property unsigned long long unsubscribedCount; // @synthesize unsubscribedCount=_unsubscribedCount;
@property unsigned long long clickCount; // @synthesize clickCount=_clickCount;
@property unsigned long long openedCount; // @synthesize openedCount=_openedCount;
@property unsigned long long recipientCount; // @synthesize recipientCount=_recipientCount;
- (void).cxx_destruct;

@end

@interface CSClient : NSObject
{
    BOOL _canPurchaseCredits;	// 8 = 0x8
    BOOL _clientPays;	// 9 = 0x9
    float _markupOnDesignSpamTest;	// 12 = 0xc
    float _baseRatePerRecipient;	// 16 = 0x10
    float _markupPerRecipient;	// 20 = 0x14
    float _markupOnDelivery;	// 24 = 0x18
    float _baseDeliveryRate;	// 28 = 0x1c
    float _baseDesignSpamTestRate;	// 32 = 0x20
    NSString *_clientID;	// 40 = 0x28
    NSString *_name;	// 48 = 0x30
    NSString *_APIKey;	// 56 = 0x38
    NSString *_username;	// 64 = 0x40
    unsigned long long _accessLevel;	// 72 = 0x48
    NSString *_contactName;	// 80 = 0x50
    NSString *_emailAddress;	// 88 = 0x58
    NSString *_country;	// 96 = 0x60
    NSString *_timezone;	// 104 = 0x68
    unsigned long long _credits;	// 112 = 0x70
    NSString *_currency;	// 120 = 0x78
    NSString *_monthlyScheme;	// 128 = 0x80
}

+ (id)clientWithDictionary:(id)arg1;
@property(copy) NSString *monthlyScheme; // @synthesize monthlyScheme=_monthlyScheme;
@property(copy) NSString *currency; // @synthesize currency=_currency;
@property float baseDesignSpamTestRate; // @synthesize baseDesignSpamTestRate=_baseDesignSpamTestRate;
@property float baseDeliveryRate; // @synthesize baseDeliveryRate=_baseDeliveryRate;
@property float markupOnDelivery; // @synthesize markupOnDelivery=_markupOnDelivery;
@property float markupPerRecipient; // @synthesize markupPerRecipient=_markupPerRecipient;
@property float baseRatePerRecipient; // @synthesize baseRatePerRecipient=_baseRatePerRecipient;
@property float markupOnDesignSpamTest; // @synthesize markupOnDesignSpamTest=_markupOnDesignSpamTest;
@property BOOL clientPays; // @synthesize clientPays=_clientPays;
@property unsigned long long credits; // @synthesize credits=_credits;
@property BOOL canPurchaseCredits; // @synthesize canPurchaseCredits=_canPurchaseCredits;
@property(copy) NSString *timezone; // @synthesize timezone=_timezone;
@property(copy) NSString *country; // @synthesize country=_country;
@property(copy) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(copy) NSString *contactName; // @synthesize contactName=_contactName;
@property unsigned long long accessLevel; // @synthesize accessLevel=_accessLevel;
@property(copy) NSString *username; // @synthesize username=_username;
@property(copy) NSString *APIKey; // @synthesize APIKey=_APIKey;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *clientID; // @synthesize clientID=_clientID;
- (void).cxx_destruct;

@end

@interface CSCustomField : NSObject
{
    BOOL _clear;	// 8 = 0x8
    BOOL _visibleInPreferenceCenter;	// 9 = 0x9
    int _dataType;	// 12 = 0xc
    NSString *_key;	// 16 = 0x10
    NSString *_name;	// 24 = 0x18
    NSArray *_options;	// 32 = 0x20
    id _value;	// 40 = 0x28
}

+ (id)customFieldWithDictionary:(id)arg1;
+ (id)customFieldWithKey:(id)arg1 value:(id)arg2;
+ (id)customFieldWithKey:(id)arg1 name:(id)arg2 visibleInPreferenceCenter:(BOOL)arg3;
+ (id)customFieldWithName:(id)arg1 dataType:(int)arg2;
+ (id)customFieldWithName:(id)arg1 dataType:(int)arg2 options:(id)arg3;
+ (id)customFieldWithName:(id)arg1 key:(id)arg2 dataType:(int)arg3 options:(id)arg4;
+ (id)customFieldWithName:(id)arg1 key:(id)arg2 dataType:(int)arg3 options:(id)arg4 value:(id)arg5;
+ (id)customFieldWithName:(id)arg1 key:(id)arg2 dataType:(int)arg3 options:(id)arg4 value:(id)arg5 visibleInPreferenceCenter:(BOOL)arg6;
+ (void)initialize;
+ (id)dataTypeStringForDataType:(int)arg1;
+ (int)dataTypeForDataTypeString:(id)arg1;
@property BOOL visibleInPreferenceCenter; // @synthesize visibleInPreferenceCenter=_visibleInPreferenceCenter;
@property BOOL clear; // @synthesize clear=_clear;
@property(retain) id value; // @synthesize value=_value;
@property(retain) NSArray *options; // @synthesize options=_options;
@property int dataType; // @synthesize dataType=_dataType;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)dictionaryValue;
- (id)dataTypeString;

@end

@interface CSList : NSObject
{
    BOOL _confirmOptIn;	// 8 = 0x8
    NSString *_listID;	// 16 = 0x10
    NSString *_name;	// 24 = 0x18
    NSString *_unsubscribePage;	// 32 = 0x20
    NSString *_confirmationSuccessPage;	// 40 = 0x28
    NSString *_unsubscribeSetting;	// 48 = 0x30
}

+ (id)listWithDictionary:(id)arg1;
@property BOOL confirmOptIn; // @synthesize confirmOptIn=_confirmOptIn;
@property(copy) NSString *unsubscribeSetting; // @synthesize unsubscribeSetting=_unsubscribeSetting;
@property(copy) NSString *confirmationSuccessPage; // @synthesize confirmationSuccessPage=_confirmationSuccessPage;
@property(copy) NSString *unsubscribePage; // @synthesize unsubscribePage=_unsubscribePage;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *listID; // @synthesize listID=_listID;
- (void).cxx_destruct;

@end

@interface CSListForSubscriber : NSObject
{
    NSString *_listID;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    NSString *_subscriberState;	// 24 = 0x18
    NSDate *_dateSubscriberAdded;	// 32 = 0x20
}

+ (id)listWithDictionary:(id)arg1;
@property(retain) NSDate *dateSubscriberAdded; // @synthesize dateSubscriberAdded=_dateSubscriberAdded;
@property(copy) NSString *subscriberState; // @synthesize subscriberState=_subscriberState;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *listID; // @synthesize listID=_listID;
- (void).cxx_destruct;

@end

@interface CSOAuthConfig : NSObject
{
    NSString *_accessToken;	// 8 = 0x8
    NSString *_refreshToken;	// 16 = 0x10
    NSDate *_accessTokenExpiresAt;	// 24 = 0x18
    NSString *_clientID;	// 32 = 0x20
    NSString *_clientSecret;	// 40 = 0x28
    NSArray *_scope;	// 48 = 0x30
    NSURL *_redirectURL;	// 56 = 0x38
    NSURL *_tokenURL;	// 64 = 0x40
}

@property(retain) NSURL *tokenURL; // @synthesize tokenURL=_tokenURL;
@property(retain) NSURL *redirectURL; // @synthesize redirectURL=_redirectURL;
@property(retain) NSArray *scope; // @synthesize scope=_scope;
@property(copy) NSString *clientSecret; // @synthesize clientSecret=_clientSecret;
@property(copy) NSString *clientID; // @synthesize clientID=_clientID;
- (void).cxx_destruct;
- (void)deleteConfig;
@property(readonly) BOOL isAccessTokenExpired; // @dynamic isAccessTokenExpired;
@property(readonly) BOOL isAuthorized; // @dynamic isAuthorized;
@property(retain) NSDate *accessTokenExpiresAt; // @synthesize accessTokenExpiresAt=_accessTokenExpiresAt;
@property(copy) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(copy) NSString *accessToken; // @synthesize accessToken=_accessToken;
- (id)initWithClientID:(id)arg1 clientSecret:(id)arg2 scope:(id)arg3;

@end

@interface CSPaginatedResult : NSObject
{
    BOOL _ascending;	// 8 = 0x8
    NSArray *_results;	// 16 = 0x10
    NSString *_orderedBy;	// 24 = 0x18
    unsigned long long _page;	// 32 = 0x20
    unsigned long long _pageSize;	// 40 = 0x28
    unsigned long long _resultCount;	// 48 = 0x30
    unsigned long long _totalResultCount;	// 56 = 0x38
    unsigned long long _totalPages;	// 64 = 0x40
}

+ (id)paginatedResultOfClass:(Class)arg1 withDictionary:(id)arg2;
@property unsigned long long totalPages; // @synthesize totalPages=_totalPages;
@property unsigned long long totalResultCount; // @synthesize totalResultCount=_totalResultCount;
@property unsigned long long resultCount; // @synthesize resultCount=_resultCount;
@property unsigned long long pageSize; // @synthesize pageSize=_pageSize;
@property unsigned long long page; // @synthesize page=_page;
@property BOOL ascending; // @synthesize ascending=_ascending;
@property(copy) NSString *orderedBy; // @synthesize orderedBy=_orderedBy;
@property(retain) NSArray *results; // @synthesize results=_results;
- (void).cxx_destruct;
- (id)objectAtIndex:(unsigned long long)arg1;

@end

@interface CSPerson : NSObject
{
    NSString *_name;	// 8 = 0x8
    NSString *_emailAddress;	// 16 = 0x10
    unsigned long long _accessLevel;	// 24 = 0x18
    NSString *_status;	// 32 = 0x20
}

+ (id)personWithDictionary:(id)arg1;
@property(copy) NSString *status; // @synthesize status=_status;
@property unsigned long long accessLevel; // @synthesize accessLevel=_accessLevel;
@property(copy) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;

@end

@interface CSRestClient : NSObject
{
    id <CSRestClientDelegate> _delegate;	// 8 = 0x8
    NSURL *_baseURL;	// 16 = 0x10
}

@property(retain) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (void)delete:(id)arg1 withParameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)put:(id)arg1 withParameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)post:(id)arg1 withParameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)get:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)get:(id)arg1 withParameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)sendAsynchronousRequestWithMethod:(id)arg1 path:(id)arg2 parameters:(id)arg3 headers:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)sendAsynchronousRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)requestWithMethod:(id)arg1 path:(id)arg2 parameters:(id)arg3 headers:(id)arg4;
@property __weak id <CSRestClientDelegate> delegate; // @synthesize delegate=_delegate;
- (id)initWithBaseURL:(id)arg1;
- (void)getAuthorizationHeader:(CDUnknownBlockType)arg1;
- (id)delegateUserAgent;

@end

@interface CSSSKeychain : NSObject
{
}

+ (id)_queryForService:(id)arg1 account:(id)arg2;
+ (BOOL)setPasswordData:(id)arg1 forService:(id)arg2 account:(id)arg3 error:(id *)arg4;
+ (BOOL)setPasswordData:(id)arg1 forService:(id)arg2 account:(id)arg3;
+ (BOOL)setPassword:(id)arg1 forService:(id)arg2 account:(id)arg3 error:(id *)arg4;
+ (BOOL)setPassword:(id)arg1 forService:(id)arg2 account:(id)arg3;
+ (BOOL)deletePasswordForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
+ (BOOL)deletePasswordForService:(id)arg1 account:(id)arg2;
+ (id)passwordDataForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
+ (id)passwordDataForService:(id)arg1 account:(id)arg2;
+ (id)passwordForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
+ (id)passwordForService:(id)arg1 account:(id)arg2;
+ (id)accountsForService:(id)arg1 error:(id *)arg2;
+ (id)accountsForService:(id)arg1;
+ (id)allAccounts:(id *)arg1;
+ (id)allAccounts;

@end

@interface CSSegment : NSObject
{
    NSString *_segmentID;	// 8 = 0x8
    NSString *_listID;	// 16 = 0x10
    NSString *_title;	// 24 = 0x18
    NSArray *_rules;	// 32 = 0x20
    unsigned long long _activeSubscriberCount;	// 40 = 0x28
}

+ (id)segmentWithDictionary:(id)arg1;
@property unsigned long long activeSubscriberCount; // @synthesize activeSubscriberCount=_activeSubscriberCount;
@property(retain) NSArray *rules; // @synthesize rules=_rules;
@property(copy) NSString *title; // @synthesize title=_title;
@property(copy) NSString *listID; // @synthesize listID=_listID;
@property(copy) NSString *segmentID; // @synthesize segmentID=_segmentID;
- (void).cxx_destruct;

@end

@interface CSSegmentRule : NSObject
{
    NSString *_subject;	// 8 = 0x8
    NSArray *_clauses;	// 16 = 0x10
}

+ (id)segmentRuleWithDictionary:(id)arg1;
+ (id)segmentRuleWithSubject:(id)arg1 clauses:(id)arg2;
@property(retain) NSArray *clauses; // @synthesize clauses=_clauses;
@property(copy) NSString *subject; // @synthesize subject=_subject;
- (void).cxx_destruct;
- (id)dictionaryValue;

@end

@interface CSSubscriber : NSObject
{
    NSString *_emailAddress;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    NSDate *_date;	// 24 = 0x18
    NSString *_state;	// 32 = 0x20
    NSArray *_customFields;	// 40 = 0x28
    NSString *_readsEmailWith;	// 48 = 0x30
}

+ (id)dictionaryWithEmailAddress:(id)arg1 name:(id)arg2 customFieldValues:(id)arg3;
+ (id)subscriberWithDictionary:(id)arg1;
+ (id)subscriberWithEmailAddress:(id)arg1 name:(id)arg2 customFields:(id)arg3;
@property(copy) NSString *readsEmailWith; // @synthesize readsEmailWith=_readsEmailWith;
@property(retain) NSArray *customFields; // @synthesize customFields=_customFields;
@property(copy) NSString *state; // @synthesize state=_state;
@property(retain) NSDate *date; // @synthesize date=_date;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface CSSubscriberAction : NSObject
{
    NSString *_event;	// 8 = 0x8
    NSDate *_date;	// 16 = 0x10
    NSString *_IPAddress;	// 24 = 0x18
    NSString *_detail;	// 32 = 0x20
}

+ (id)subscriberActionWithDictionary:(id)arg1;
@property(copy) NSString *detail; // @synthesize detail=_detail;
@property(copy) NSString *IPAddress; // @synthesize IPAddress=_IPAddress;
@property(retain) NSDate *date; // @synthesize date=_date;
@property(copy) NSString *event; // @synthesize event=_event;
- (void).cxx_destruct;

@end

@interface CSSubscriberHistoryItem : NSObject
{
    NSString *_typeID;	// 8 = 0x8
    NSString *_type;	// 16 = 0x10
    NSString *_name;	// 24 = 0x18
    NSArray *_actions;	// 32 = 0x20
}

+ (id)subscriberHistoryItemWithDictionary:(id)arg1;
@property(retain) NSArray *actions; // @synthesize actions=_actions;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *type; // @synthesize type=_type;
@property(copy) NSString *typeID; // @synthesize typeID=_typeID;
- (void).cxx_destruct;

@end

@interface CSSubscriberImportResult : NSObject
{
    unsigned long long _totalUniqueEmailsSubmitted;	// 8 = 0x8
    unsigned long long _totalExistingSubscribers;	// 16 = 0x10
    unsigned long long _totalNewSubscribers;	// 24 = 0x18
    NSArray *_duplicateEmailsInSubmission;	// 32 = 0x20
    NSArray *_failureDetails;	// 40 = 0x28
}

+ (id)subscriberImportResultWithDictionary:(id)arg1;
@property(retain) NSArray *failureDetails; // @synthesize failureDetails=_failureDetails;
@property(retain) NSArray *duplicateEmailsInSubmission; // @synthesize duplicateEmailsInSubmission=_duplicateEmailsInSubmission;
@property unsigned long long totalNewSubscribers; // @synthesize totalNewSubscribers=_totalNewSubscribers;
@property unsigned long long totalExistingSubscribers; // @synthesize totalExistingSubscribers=_totalExistingSubscribers;
@property unsigned long long totalUniqueEmailsSubmitted; // @synthesize totalUniqueEmailsSubmitted=_totalUniqueEmailsSubmitted;
- (void).cxx_destruct;

@end

@interface CSSuppressedRecipient : NSObject
{
    NSString *_suppressionReason;	// 8 = 0x8
    NSString *_emailAddress;	// 16 = 0x10
    NSDate *_date;	// 24 = 0x18
    NSString *_state;	// 32 = 0x20
}

@property(copy) NSString *state; // @synthesize state=_state;
@property(retain) NSDate *date; // @synthesize date=_date;
@property(copy) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(copy) NSString *suppressionReason; // @synthesize suppressionReason=_suppressionReason;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface CSTemplate : NSObject
{
    NSString *_templateID;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    NSString *_previewPage;	// 24 = 0x18
    NSString *_screenshotPage;	// 32 = 0x20
}

+ (id)templateWithDictionary:(id)arg1;
@property(copy) NSString *screenshotPage; // @synthesize screenshotPage=_screenshotPage;
@property(copy) NSString *previewPage; // @synthesize previewPage=_previewPage;
@property(copy) NSString *name; // @synthesize name=_name;
@property(copy) NSString *templateID; // @synthesize templateID=_templateID;
- (void).cxx_destruct;

@end

@interface CSWebhook : NSObject
{
    NSString *_webhookID;	// 8 = 0x8
    NSString *_url;	// 16 = 0x10
    NSString *_status;	// 24 = 0x18
    NSString *_payloadFormat;	// 32 = 0x20
    NSArray *_events;	// 40 = 0x28
}

+ (id)webhookWithDictionary:(id)arg1;
@property(retain) NSArray *events; // @synthesize events=_events;
@property(copy) NSString *payloadFormat; // @synthesize payloadFormat=_payloadFormat;
@property(copy) NSString *status; // @synthesize status=_status;
@property(copy) NSString *url; // @synthesize url=_url;
@property(copy) NSString *webhookID; // @synthesize webhookID=_webhookID;
- (void).cxx_destruct;

@end

@interface DKContext : NSObject
{
    struct CGContext *_contextRef;	// 8 = 0x8
    struct CGAffineTransform _totalTransform;	// 16 = 0x10
    BOOL _isDrawingPixelated;	// 64 = 0x40
    BOOL _contextFlippedHorizontal;	// 65 = 0x41
    BOOL _contextFlippedVertical;	// 66 = 0x42
    NSColorSpace *_colorSpace;	// 72 = 0x48
    double _zoomLevel;	// 80 = 0x50
    DKContextAttributes *_attributes;	// 88 = 0x58
    id <DKContextDelegate> _delegate;	// 96 = 0x60
    double _contextRotation;	// 104 = 0x68
    NSMutableArray *_reusableContextTransforms;	// 112 = 0x70
    NSMutableArray *_transformStack;	// 120 = 0x78
    NSMutableArray *_blendStack;	// 128 = 0x80
    NSMutableArray *_contextStates;	// 136 = 0x88
    NSMutableArray *_reusableContextStates;	// 144 = 0x90
    struct CGPoint _scrollOrigin;	// 152 = 0x98
}

+ (id)contextWithContextRef:(struct CGContext *)arg1 atZoomLevel:(double)arg2;
+ (struct CGContext *)currentCGContext;
+ (void)restoreGraphicsState;
+ (void)saveGraphicsState;
@property(retain, nonatomic) NSMutableArray *reusableContextStates; // @synthesize reusableContextStates=_reusableContextStates;
@property(retain, nonatomic) NSMutableArray *contextStates; // @synthesize contextStates=_contextStates;
@property(retain, nonatomic) NSMutableArray *blendStack; // @synthesize blendStack=_blendStack;
@property(retain, nonatomic) NSMutableArray *transformStack; // @synthesize transformStack=_transformStack;
@property(retain, nonatomic) NSMutableArray *reusableContextTransforms; // @synthesize reusableContextTransforms=_reusableContextTransforms;
@property(nonatomic) BOOL contextFlippedVertical; // @synthesize contextFlippedVertical=_contextFlippedVertical;
@property(nonatomic) BOOL contextFlippedHorizontal; // @synthesize contextFlippedHorizontal=_contextFlippedHorizontal;
@property(nonatomic) double contextRotation; // @synthesize contextRotation=_contextRotation;
@property(nonatomic) BOOL isDrawingPixelated; // @synthesize isDrawingPixelated=_isDrawingPixelated;
@property(nonatomic) __weak id <DKContextDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) DKContextAttributes *attributes; // @synthesize attributes=_attributes;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
@property(nonatomic) double zoomLevel; // @synthesize zoomLevel=_zoomLevel;
@property(retain, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
- (void).cxx_destruct;
- (void)resetContextRotation;
- (void)contextRotateBy:(double)arg1;
- (void)endTransformable:(id)arg1;
- (void)beginTransformable:(id)arg1;
- (BOOL)needsToDrawRect:(struct CGRect)arg1;
- (void)popBlendMode;
- (void)pushBlendMode:(int)arg1;
- (void)popAlpha;
- (void)pushAlpha:(double)arg1;
- (void)disableFontSubpixelQuantizationInBlock:(CDUnknownBlockType)arg1;
- (void)setShouldSubPixelAntialiasText:(BOOL)arg1;
- (BOOL)isFlippedVertical;
- (BOOL)isFlippedHorizontal;
- (double)currentRotation;
- (void)applyTransform:(id)arg1;
- (void)addContextState;
- (void)removeContextState;
- (void)endTransparencyLayer;
- (void)beginTransparencyLayerInRect:(struct CGRect)arg1;
- (void)beginTransparencyLayer;
- (void)popGraphicsState;
- (void)pushGraphicsState;
- (void)prepareTransformForReuse:(id)arg1;
- (id)findContextTransform;
- (id)contextTransform;
- (void)reverseTransformGroup;
- (void)beginTransformGroup;
- (void)reverse;
- (void)pushTransform:(id)arg1;
- (void)flipVertical;
- (void)flipHorizontal;
- (void)rotateBy:(double)arg1 aroundPoint:(struct CGPoint)arg2;
- (void)rotateBy:(double)arg1;
- (void)offsetBy:(struct CGPoint)arg1;
- (void)offsetByX:(double)arg1 Y:(double)arg2;
- (void)dealloc;
- (void)tearDown;
- (id)backingContext;
- (void)setUp;
@property(readonly, nonatomic) struct CGContext *contextRef; // @dynamic contextRef;
- (id)initWithContextRef:(struct CGContext *)arg1 atZoomLevel:(double)arg2;

@end

@interface DKContextAttributes : NSObject
{
    BOOL _pageHasBlending;	// 8 = 0x8
    BOOL _shouldFlipShadows;	// 9 = 0x9
    NSColor *_backgroundColor;	// 16 = 0x10
    id _rootObject;	// 24 = 0x18
    double _shadowScale;	// 32 = 0x20
}

@property(nonatomic) BOOL shouldFlipShadows; // @synthesize shouldFlipShadows=_shouldFlipShadows;
@property(nonatomic) double shadowScale; // @synthesize shadowScale=_shadowScale;
@property(retain, nonatomic) id rootObject; // @synthesize rootObject=_rootObject;
@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) BOOL pageHasBlending; // @synthesize pageHasBlending=_pageHasBlending;
- (void).cxx_destruct;
- (id)init;

@end

@interface DKContextState : NSObject <NSCopying>
{
    NSMutableArray *_alphaStack;	// 8 = 0x8
    DKContext *_parentContext;	// 16 = 0x10
}

@property(nonatomic) __weak DKContext *parentContext; // @synthesize parentContext=_parentContext;
@property(retain, nonatomic) NSMutableArray *alphaStack; // @synthesize alphaStack=_alphaStack;
- (void).cxx_destruct;
- (void)prepareForReuse;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)totalAlpha;
- (void)applyAlpha;
- (void)popAlpha;
- (void)pushAlpha:(double)arg1;
- (id)initWithParentContext:(id)arg1;

@end

@interface DKContextTransform : NSObject
{
    long long _type;	// 8 = 0x8
    double _rotation;	// 16 = 0x10
    struct CGPoint _translation;	// 24 = 0x18
}

@property(nonatomic) struct CGPoint translation; // @synthesize translation=_translation;
@property(nonatomic) double rotation; // @synthesize rotation=_rotation;
@property(nonatomic) long long type; // @synthesize type=_type;
- (id)description;
- (void)invert;

@end

@interface DKDistortionTransform : NSObject <NSCoding, NSCopying>
{
    struct CGPoint m_q[4];	// 8 = 0x8
    BOOL m_inverted;	// 72 = 0x48
}

+ (id)transformWithInitialRect:(struct CGRect)arg1;
- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)transformBezierPath:(id)arg1 inRect:(struct CGRect)arg2;
- (id)transformBezierPath:(id)arg1;
- (struct CGPoint)transformPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2;
- (void)invert;
- (void)differentialPerspectiveBy:(double)arg1;
- (void)shearVerticallyBy:(double)arg1;
- (void)shearHorizontallyBy:(double)arg1;
- (void)offsetByX:(double)arg1 byY:(double)arg2;
- (struct CGRect)bounds;
- (void)getEnvelopePoints:(struct CGPoint *)arg1;
- (void)setEnvelopePoints:(struct CGPoint *)arg1;
- (id)initWithEnvelope:(struct CGPoint *)arg1;
- (id)initWithRect:(struct CGRect)arg1;

@end

@interface DataProtocol : NSURLProtocol
{
}

+ (id)dataFromLink:(id)arg1 type:(id *)arg2 encoding:(id *)arg3;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)canInitWithRequest:(id)arg1;
- (void)stopLoading;
- (void)startLoading;

@end

@interface ECASLClient : NSObject
{
    struct __aslclient *client;	// 8 = 0x8
    struct __aslmsg *msg;	// 16 = 0x10
}

+ (id)sharedInstance;
@property(nonatomic) struct __aslmsg *msg; // @synthesize msg;
@property(nonatomic) struct __aslclient *client; // @synthesize client;
- (void)error:(id)arg1;
- (void)log:(id)arg1;
- (void)logAtLevel:(int)arg1 withFormat:(id)arg2;
- (void)logAtLevel:(int)arg1 withFormat:(id)arg2 args:(struct __va_list_tag [1])arg3;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface ECAssertion : NSObject
{
}

+ (id)assertObject:(id)arg1 isOfClass:(Class)arg2;
+ (void)failAssertion:(const char *)arg1;

@end

@interface ECDebugMenu : NSMenu
{
}

- (void)awakeFromNib;

@end

@interface ECErrorAndMessage : NSObject
{
    NSString *_message;	// 8 = 0x8
    NSError *_error;	// 16 = 0x10
}

@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
- (void).cxx_destruct;
- (id)description;

@end

@interface ECErrorPresenterHandler : ECLogHandler
{
}

- (void)wasDisabledForChannel:(id)arg1;
- (void)wasEnabledForChannel:(id)arg1;
- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (id)init;

@end

@interface ECErrorReporter : NSObject
{
}

+ (void)reportError:(id)arg1 message:(id)arg2;
+ (void)reportStatus:(int)arg1 message:(id)arg2;
+ (void)reportResult:(BOOL)arg1 message:(id)arg2;
+ (void)reportResult:(BOOL)arg1 error:(id)arg2 message:(id)arg3;
+ (BOOL)checkStatus:(int)arg1;
+ (void)reportError:(id)arg1 format:(id)arg2 arguments:(struct __va_list_tag [1])arg3 assertInDebug:(BOOL)arg4;

@end

@interface ECLogChannel : NSObject
{
    BOOL enabled;	// 8 = 0x8
    BOOL setup;	// 9 = 0x9
    NSString *name;	// 16 = 0x10
    NSMutableSet *handlers;	// 24 = 0x18
    int context;	// 32 = 0x20
    NSNumber *level;	// 40 = 0x28
}

+ (id)cleanName:(const char *)arg1;
@property(nonatomic) BOOL setup; // @synthesize setup;
@property(retain, nonatomic) NSString *name; // @synthesize name;
@property(retain, nonatomic) NSNumber *level; // @synthesize level;
@property(retain, nonatomic) NSMutableSet *handlers; // @synthesize handlers;
@property(nonatomic) BOOL enabled; // @synthesize enabled;
@property(nonatomic) int context; // @synthesize context;
- (void).cxx_destruct;
- (void)selectHandlerWithIndex:(unsigned long long)arg1;
- (BOOL)tickHandlerWithIndex:(unsigned long long)arg1;
- (void)selectFlagWithIndex:(unsigned long long)arg1;
- (BOOL)tickFlagWithIndex:(unsigned long long)arg1;
- (id)stringFromContext:(CDStruct_5b5d1a5d *)arg1;
- (id)fileFromContext:(CDStruct_5b5d1a5d *)arg1;
- (BOOL)showContext:(int)arg1;
- (long long)caseInsensitiveCompare:(id)arg1;
- (BOOL)isHandlerEnabled:(id)arg1;
- (void)disableHandler:(id)arg1;
- (void)enableHandler:(id)arg1;
- (void)disable;
- (void)enable;
- (id)initWithName:(id)arg1;

@end

@interface ECLogHandler : NSObject
{
    NSString *name;	// 8 = 0x8
}

@property(retain, nonatomic) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (void)wasDisabledForChannel:(id)arg1;
- (void)wasEnabledForChannel:(id)arg1;
- (id)simpleOutputStringForChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (long long)caseInsensitiveCompare:(id)arg1;
- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;

@end

@interface ECLogHandlerASL : ECLogHandler
{
    struct __aslclient *aslClient;	// 16 = 0x10
    NSMutableDictionary *aslMsgs;	// 24 = 0x18
}

@property(retain, nonatomic) NSMutableDictionary *aslMsgs; // @synthesize aslMsgs;
@property(nonatomic) struct __aslclient *aslClient; // @synthesize aslClient;
- (void).cxx_destruct;
- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (void)dealloc;
- (id)init;

@end

@interface ECLogHandlerFile : ECLogHandler
{
    NSMutableDictionary *files;	// 16 = 0x10
    NSURL *logFolder;	// 24 = 0x18
}

@property(retain, nonatomic) NSURL *logFolder; // @synthesize logFolder;
@property(retain, nonatomic) NSMutableDictionary *files; // @synthesize files;
- (void).cxx_destruct;
- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (void)logString:(id)arg1 forChannel:(id)arg2;
- (id)logFileForChannel:(id)arg1;
- (id)init;

@end

@interface ECLogHandlerNSLog : ECLogHandler
{
}

- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (id)init;

@end

@interface ECLogHandlerStderr : ECLogHandler
{
}

- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (id)init;

@end

@interface ECLogHandlerStdout : ECLogHandler
{
}

- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (id)init;

@end

@interface ECLogManager : NSObject
{
    NSMutableDictionary *_channels;	// 8 = 0x8
    NSMutableDictionary *_handlers;	// 16 = 0x10
    NSMutableArray *_defaultHandlers;	// 24 = 0x18
    NSMutableDictionary *_settings;	// 32 = 0x20
    int _defaultContextFlags;	// 40 = 0x28
    NSArray *_handlersSorted;	// 48 = 0x30
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *defaultHandlers; // @synthesize defaultHandlers=_defaultHandlers;
@property(retain, nonatomic) NSMutableDictionary *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) NSArray *handlersSorted; // @synthesize handlersSorted=_handlersSorted;
@property(retain, nonatomic) NSMutableDictionary *handlers; // @synthesize handlers=_handlers;
@property(nonatomic) int defaultContextFlags; // @synthesize defaultContextFlags=_defaultContextFlags;
@property(retain, nonatomic) NSMutableDictionary *channels; // @synthesize channels=_channels;
- (void).cxx_destruct;
- (void)handler:(id)arg1 setDefault:(BOOL)arg2;
- (BOOL)handlerIsDefault:(id)arg1;
- (id)handlersSortedByName;
- (unsigned long long)handlerCount;
- (id)handlerNameForIndex:(unsigned long long)arg1;
- (id)handlerForIndex:(unsigned long long)arg1;
- (unsigned long long)contextFlagCount;
- (int)contextFlagValueForIndex:(unsigned long long)arg1;
- (id)contextFlagNameForIndex:(unsigned long long)arg1;
- (id)channelsSortedByName;
- (void)resetAllSettings;
- (void)resetAllChannels;
- (void)resetChannel:(id)arg1;
- (void)disableAllChannels;
- (void)enableAllChannels;
- (void)logFromChannel:(id)arg1 withObject:(id)arg2 arguments:(struct __va_list_tag [1])arg3 context:(CDStruct_5b5d1a5d *)arg4;
- (id)optionsSettings;
- (void)saveChannelSettings;
- (void)loadChannelSettings;
- (void)loadSettings;
- (id)defaultSettings;
- (void)shutdown;
- (void)startup;
- (id)init;
- (void)registerHandlers;
- (id)registerChannel:(id)arg1;
- (void)applySettings:(id)arg1 toChannel:(id)arg2;
- (void)postUpdateNotification;
- (id)registerChannelWithName:(id)arg1 options:(id)arg2;
- (id)registerChannelWithRawName:(const char *)arg1 options:(id)arg2;

@end

@interface ECLogManagerMac : ECLogManager
{
}

- (void)assertNow:(id)arg1;
- (void)crashNow:(id)arg1;
- (void)saveSettings:(id)arg1;
- (void)shutdown;
- (void)startup;
- (id)installDebugSubmenuWithTitle:(id)arg1 class:(Class)arg2;
- (id)debugMenuItem;

@end

@interface ECLoggingMenu : ECDebugMenu
{
    ECLogManager *mLogManager;	// 56 = 0x38
}

- (void).cxx_destruct;
- (void)revealSettings;
- (void)revealLogFiles;
- (id)logFolder;
- (BOOL)validateMenuItem:(id)arg1;
- (void)channelsChanged:(id)arg1;
- (void)defaultHandlerSelected:(id)arg1;
- (void)resetSelected:(id)arg1;
- (void)handlerSelected:(id)arg1;
- (void)channelSelected:(id)arg1;
- (void)contextMenuSelected:(id)arg1;
- (void)channelMenuSelected:(id)arg1;
- (void)buildMenu;
- (id)buildDefaultHandlersMenu;
- (id)buildMenuForChannel:(id)arg1;
- (void)setup;
- (void)dealloc;
- (id)initWithTitle:(id)arg1;
- (void)awakeFromNib;

@end

@interface ECOptionsMenu : ECDebugMenu
{
    NSDictionary *_options;	// 56 = 0x38
}

@property(retain, nonatomic) NSDictionary *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (BOOL)validateMenuItem:(id)arg1;
- (void)optionSelected:(id)arg1;
- (void)buildMenuWithOptions:(id)arg1;
- (void)buildMenu;
- (void)setupAsRootMenu;
- (void)dealloc;
- (void)awakeFromNib;

@end

@interface EPSConverter : NSObject
{
    CDUnknownBlockType _progressBlock;	// 8 = 0x8
}

@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
- (void).cxx_destruct;
- (void)converterReleased;
- (void)converterMessage:(id)arg1;
- (void)converterProgress;
- (void)endPageNumber:(unsigned long long)arg1 info:(id)arg2;
- (void)beginPageNumber:(unsigned long long)arg1 info:(id)arg2;
- (void)endDocumentSucceeded:(_Bool)arg1;
- (void)beginDocument;
- (BOOL)convertEPSWithProvider:(struct CGDataProvider *)arg1 consumer:(struct CGDataConsumer *)arg2;
- (id)convertEPSAtURL:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (id)convertEPSData:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)convertEPSAtURL:(id)arg1 toURL:(id)arg2 progressBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface EPSParser : NSObject <PDFParser>
{
    PDFParser *_parser;	// 8 = 0x8
}

@property(retain, nonatomic) PDFParser *parser; // @synthesize parser=_parser;
- (void).cxx_destruct;
- (void)debugConvertedFile:(id)arg1;
- (id)name;
- (void)parseWithProgress:(CDUnknownBlockType)arg1;
- (unsigned long long)pageCount;
- (void)loadDocumentFromData:(id)arg1;
- (void)loadDocumentFromURL:(id)arg1;
- (id)initWithScanner:(id)arg1;

@end

@interface FBBezierContour : NSObject <NSCopying>
{
    NSMutableArray *_overlaps;	// 8 = 0x8
    NSMutableArray *_edges;	// 16 = 0x10
    NSBezierPath *_bezPathCache;	// 24 = 0x18
    struct CGRect _bounds;	// 32 = 0x20
    struct CGRect _boundingRect;	// 64 = 0x40
    int _inside;	// 96 = 0x60
}

+ (id)bezierContourWithCurve:(id)arg1;
@property(nonatomic) int inside; // @synthesize inside=_inside;
@property(readonly, nonatomic) NSArray *edges; // @synthesize edges=_edges;
- (void).cxx_destruct;
- (id)debugPathForWindingRuleContainmentAtEdge:(id)arg1 parameter:(double)arg2 point:(struct CGPoint)arg3 withTransform:(struct CGAffineTransform)arg4 andSizeTransform:(struct CGAffineTransform)arg5;
- (id)debugPathForWindingRuleContainmentWithTransform:(struct CGAffineTransform)arg1 andSizeTransform:(struct CGAffineTransform)arg2;
- (id)debugPathForJointsWithTransform:(struct CGAffineTransform)arg1 andSizeTransform:(struct CGAffineTransform)arg2;
- (id)debugPathForIntersectionType:(long long)arg1 withTransform:(struct CGAffineTransform)arg2 andSizeTransform:(struct CGAffineTransform)arg3;
- (id)description;
- (id)closestLocationToPoint:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)doesOverlapContainParameter:(double)arg1 onEdge:(id)arg2;
- (BOOL)doesOverlapContainCrossing:(id)arg1;
- (void)forEachEdgeOverlapDo:(CDUnknownBlockType)arg1;
- (BOOL)isEquivalent:(id)arg1;
- (void)removeAllOverlaps;
- (void)addOverlap:(id)arg1;
- (void)addSelfIntersectingContoursToArray:(id)arg1 originalContour:(id)arg2;
@property(readonly, nonatomic) NSArray *selfIntersectingContours;
@property(readonly, nonatomic) NSArray *intersectingContours;
- (id)debugPathForContainmentOfCrossing:(id)arg1 transform:(struct CGAffineTransform)arg2;
- (BOOL)containsCrossingUsingNonZeroWindingRule:(id)arg1;
- (long long)adjustWindingCount:(long long)arg1 forIntersection:(id)arg2;
- (id)crossingContainmentRay:(struct CGPoint)arg1;
- (BOOL)intersection:(id)arg1 isReallyTheSameAs:(id)arg2;
- (BOOL)containsPointUsingNonZeroWindingRule:(struct CGPoint)arg1;
- (BOOL)containsUsingNonZeroWindingRulePoint:(struct CGPoint)arg1 onEdge:(id)arg2 atParameter:(double)arg3;
- (BOOL)intersection:(id)arg1 isReallyTheSameAsCurve:(id)arg2 atParameter:(double)arg3;
- (long long)adjustWindingCount:(long long)arg1 onEdge:(id)arg2 atParameter:(double)arg3;
- (BOOL)isInflectionPointOnEdge:(id)arg1 atParameter:(double)arg2;
- (BOOL)markSelfCrossingsOnEdge:(id)arg1 startParameter:(double)arg2 stopParameter:(double)arg3 isEntry:(BOOL)arg4 withBlock:(CDUnknownBlockType)arg5;
- (void)markSelfCrossingsAsEntryOrExit;
- (BOOL)isCrossing:(id)arg1 betweenStartEdge:(id)arg2 parameter:(double)arg3 andCrossing:(id)arg4;
- (BOOL)crossesOwnContour:(id)arg1;
- (id)contourMadeClockwiseIfNecessary;
- (int)direction;
- (id)reversedContour;
@property(readonly, nonatomic) BOOL isClosed;
- (void)close;
- (id)bezierPathFromEdge:(id)arg1 toEdge:(id)arg2;
- (id)bezierPath;
- (BOOL)contourAndSelfIntersectingContoursContainPoint:(struct CGPoint)arg1;
- (BOOL)markCrossingsOnEdge:(id)arg1 startParameter:(double)arg2 stopParameter:(double)arg3 otherContours:(id)arg4 isEntry:(BOOL)arg5;
- (void)markCrossingsAsEntryOrExitWithContour:(id)arg1 markInside:(BOOL)arg2;
- (void)startingEdge:(id *)arg1 parameter:(double *)arg2 point:(struct CGPoint *)arg3 skipHorizontals:(BOOL)arg4 skipInflectionPoints:(BOOL)arg5;
- (struct CGPoint)testPointForContainment;
- (id)startEdgeSkipHorizontals:(BOOL)arg1 skipInflectionPoints:(BOOL)arg2;
- (id)startEdge;
- (void)intersectionsWithRay:(id)arg1 withBlock:(CDUnknownBlockType)arg2 callDepth:(unsigned long long)arg3;
- (unsigned long long)numberOfIntersectionsWithRay:(id)arg1 callDepth:(unsigned long long)arg2;
- (BOOL)containsPoint:(struct CGPoint)arg1 callDepth:(unsigned long long)arg2;
@property(readonly, nonatomic) BOOL isEmpty;
@property(readonly, nonatomic) struct CGPoint firstPoint;
@property(readonly, nonatomic) struct CGRect boundingRect;
@property(readonly, nonatomic) struct CGRect bounds;
- (void)addReverseCurveFrom:(id)arg1 to:(id)arg2;
- (void)addReverseCurve:(id)arg1;
- (void)addCurveFrom:(id)arg1 to:(id)arg2;
- (void)addCurve:(id)arg1;
@property(readonly, nonatomic) NSMutableArray *overlaps_;
- (id)init;

@end

@interface FBBezierCurve : NSObject
{
    struct FBBezierCurveData _data;	// 8 = 0x8
    NSMutableArray *_crossings;	// 160 = 0xa0
    FBBezierContour *_contour;	// 168 = 0xa8
    unsigned long long _index;	// 176 = 0xb0
    BOOL _startShared;	// 184 = 0xb8
}

+ (id)bezierCurveWithBezierCurveData:(struct FBBezierCurveData)arg1;
+ (id)bezierCurveWithEndPoint1:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3 endPoint2:(struct CGPoint)arg4;
+ (id)bezierCurveWithLineStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2;
+ (id)bezierCurvesFromBezierPath:(id)arg1;
@property(readonly, nonatomic) struct FBBezierCurveData data; // @synthesize data=_data;
@property(nonatomic, getter=isStartShared) BOOL startShared; // @synthesize startShared=_startShared;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(nonatomic) __weak FBBezierContour *contour; // @synthesize contour=_contour;
- (void).cxx_destruct;
- (void)sortCrossings;
- (BOOL)isNext:(id)arg1;
- (BOOL)crossesEdge:(id)arg1 atIntersectRange:(id)arg2;
- (BOOL)crossesEdge:(id)arg1 atIntersection:(id)arg2;
- (BOOL)hasCrossingsUsingNonself:(BOOL)arg1;
- (id)lastCrossingUsingNonself:(BOOL)arg1;
- (id)firstCrossingUsingNonself:(BOOL)arg1;
@property(readonly, nonatomic) FBEdgeCrossing *lastCrossing;
@property(readonly, nonatomic) FBEdgeCrossing *firstCrossing;
- (void)selfIntersectingEdgesWithBlock:(CDUnknownBlockType)arg1;
- (void)intersectingEdgesWithBlock:(CDUnknownBlockType)arg1;
- (id)previousCrossing:(id)arg1;
- (id)nextCrossing:(id)arg1;
- (void)crossingsCopyWithBlock:(CDUnknownBlockType)arg1;
- (void)crossingsWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) BOOL hasCrossings;
@property(readonly, nonatomic) FBBezierCurve *previousNonpointNonHorizontalLine;
@property(readonly, nonatomic) FBBezierCurve *nextNonpointNonHorizontalLine;
@property(readonly, nonatomic) FBBezierCurve *previousNonpoint;
@property(readonly, nonatomic) FBBezierCurve *nextNonpoint;
@property(readonly, nonatomic) FBBezierCurve *previous;
@property(readonly, nonatomic) FBBezierCurve *next;
- (void)removeCrossingsInOverlap;
- (void)removeAllCrossings;
- (void)removeCrossing:(id)arg1;
- (void)addCrossing:(id)arg1;
- (id)description;
- (id)clone;
@property(readonly, nonatomic) NSMutableArray *crossings_;
- (id)bezierPath;
- (struct CGPoint)tangentFromLeftOffset:(double)arg1;
- (struct CGPoint)tangentFromRightOffset:(double)arg1;
- (struct CGPoint)pointFromLeftOffset:(double)arg1;
- (struct CGPoint)pointFromRightOffset:(double)arg1;
@property(readonly, nonatomic) struct CGRect boundingRect;
@property(readonly, nonatomic) struct CGRect bounds;
- (struct FBBezierCurveLocation)closestLocationToPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) BOOL isPointOrHorizontalLine;
@property(readonly, nonatomic) BOOL isHorizontalLine;
@property(readonly, nonatomic) BOOL looksLikeLine;
@property(readonly, nonatomic) BOOL isEndHorizontal;
@property(readonly, nonatomic) BOOL isStartHorizontal;
@property(readonly, nonatomic, getter=isPoint) BOOL point;
- (double)lengthAtParameter:(double)arg1;
- (double)length;
- (double)refineParameter:(double)arg1 forPoint:(struct CGPoint)arg2;
- (struct CGPoint)pointAtParameter:(double)arg1 leftBezierCurve:(id *)arg2 rightBezierCurve:(id *)arg3;
- (id)reversedCurve;
- (void)splitSubcurvesWithRange:(struct FBRange)arg1 left:(id *)arg2 middle:(id *)arg3 right:(id *)arg4;
- (id)subcurveWithRange:(struct FBRange)arg1;
- (void)intersectionsWithBezierCurve:(id)arg1 overlapRange:(id *)arg2 withBlock:(CDUnknownBlockType)arg3;
- (BOOL)doesHaveIntersectionsWithBezierCurve:(id)arg1;
- (BOOL)mightIntersectWith:(id)arg1;
- (void)checkForLine;
- (BOOL)isEqual:(id)arg1;
- (id)initWithLineStartPoint:(struct CGPoint)arg1 endPoint:(struct CGPoint)arg2 contour:(id)arg3;
- (id)initWithEndPoint1:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3 endPoint2:(struct CGPoint)arg4 contour:(id)arg5;
- (id)initWithBezierCurveData:(struct FBBezierCurveData)arg1;
@property(readonly, nonatomic) BOOL isStraightLine;
@property(readonly, nonatomic) struct CGPoint endPoint2;
@property(readonly, nonatomic) struct CGPoint controlPoint2;
@property(readonly, nonatomic) struct CGPoint controlPoint1;
@property(readonly, nonatomic) struct CGPoint endPoint1;

@end

@interface FBBezierGraph : NSObject
{
    NSMutableArray *_contours;	// 8 = 0x8
    struct CGRect _bounds;	// 16 = 0x10
}

+ (id)bezierGraph;
+ (id)bezierGraphWithBezierPath:(id)arg1;
@property(readonly, nonatomic) NSArray *contours; // @synthesize contours=_contours;
- (void).cxx_destruct;
- (id)description;
- (void)debugFindCurvesThatShouldIntersectWith:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)debuggingInsertIntersectionsWithBezierGraph:(id)arg1;
- (void)debuggingInsertCrossingsForFillConversion;
- (void)debuggingInsertCrossingsWithBezierGraph:(id)arg1 markInside:(BOOL)arg2 markOtherInside:(BOOL)arg3;
- (void)debuggingInsertCrossingsForDifferenceWithBezierGraph:(id)arg1;
- (void)debuggingInsertCrossingsForIntersectWithBezierGraph:(id)arg1;
- (void)debuggingInsertCrossingsForUnionWithBezierGraph:(id)arg1;
- (id)nonselfIntersectingContours;
- (id)nonintersectingContours;
- (void)addContour:(id)arg1;
- (void)removeOverlaps;
- (void)removeCrossings;
- (id)bezierGraphFromNonselfIntersections:(BOOL)arg1;
- (id)firstUnprocessedCrossing:(BOOL)arg1;
- (void)markAllCrossingsAsUnprocessed;
- (void)removeCrossings:(id)arg1 forContours:(id)arg2;
- (void)removeContoursThatDontContain:(id)arg1;
- (void)removeContourCrossings:(id)arg1 thatDontAppearIn:(id)arg2;
- (id)contoursFromCrossings:(id)arg1;
- (BOOL)eliminateContainers:(id)arg1 thatDontContainContour:(id)arg2 usingRay:(id)arg3;
- (unsigned long long)numberOfTimesContour:(id)arg1 appearsInCrossings:(id)arg2;
- (BOOL)findCrossingsOnContainers:(id)arg1 onRay:(id)arg2 beforeMinimum:(struct CGPoint)arg3 afterMaximum:(struct CGPoint)arg4 crossingsBefore:(id)arg5 crossingsAfter:(id)arg6;
- (BOOL)findBoundsOfContour:(id)arg1 onRay:(id)arg2 minimum:(struct CGPoint *)arg3 maximum:(struct CGPoint *)arg4;
- (BOOL)containsContour:(id)arg1;
- (id)debugPathForJointsOfContour:(id)arg1;
- (id)debugPathForContainmentOfContour:(id)arg1 transform:(struct CGAffineTransform)arg2;
- (id)debugPathForContainmentOfContour:(id)arg1;
- (id)closestCrossingToPoint:(struct CGPoint)arg1;
- (id)closestLocationToPoint:(struct CGPoint)arg1;
- (int)contourInsides:(id)arg1;
@property(readonly, nonatomic) struct CGRect bounds;
- (void)insertSelfCrossings;
- (void)insertContourSelfCrossings;
- (BOOL)isIntersection:(id)arg1 atJoinOfEdge:(id)arg2 andEdge:(id)arg3;
- (void)removeDuplicateCrossings;
- (void)removeCrossingsInOverlaps;
- (void)cleanupCrossingsWithBezierGraph:(id)arg1;
- (void)insertCrossingsWithBezierGraph:(id)arg1;
- (id)bezierPathWithClass:(Class)arg1;
- (id)bezierPath;
- (id)xorWithBezierGraph:(id)arg1;
- (void)markSelfCrossingsAsEntryOrExit;
- (void)markCrossingsAsEntryOrExitWithBezierGraph:(id)arg1 markInside:(BOOL)arg2;
- (void)differenceEquivalentNonintersectingContours:(id)arg1 withContours:(id)arg2 results:(id)arg3;
- (id)differenceWithBezierGraph:(id)arg1;
- (void)intersectEquivalentNonintersectingContours:(id)arg1 withContours:(id)arg2 results:(id)arg3;
- (void)intersectNonintersectingPartsIntoGraph:(id)arg1 withGraph:(id)arg2;
- (id)intersectWithBezierGraph:(id)arg1;
- (void)unionEquivalentNonintersectingContours:(id)arg1 withContours:(id)arg2 results:(id)arg3;
- (void)unionNonintersectingPartsIntoGraph:(id)arg1 withGraph:(id)arg2;
- (id)unionWithBezierGraph:(id)arg1;
- (id)convertToEvenOddWindingRule;
- (id)init;
- (id)initWithBezierPath:(id)arg1;

@end

@interface FBBezierIntersectRange : NSObject
{
    FBBezierCurve *_curve1LeftBezier;	// 8 = 0x8
    FBBezierCurve *_curve1MiddleBezier;	// 16 = 0x10
    FBBezierCurve *_curve1RightBezier;	// 24 = 0x18
    BOOL _needToComputeCurve1;	// 32 = 0x20
    FBBezierCurve *_curve2LeftBezier;	// 40 = 0x28
    FBBezierCurve *_curve2MiddleBezier;	// 48 = 0x30
    FBBezierCurve *_curve2RightBezier;	// 56 = 0x38
    BOOL _needToComputeCurve2;	// 64 = 0x40
    BOOL _reversed;	// 65 = 0x41
    FBBezierCurve *_curve1;	// 72 = 0x48
    FBBezierCurve *_curve2;	// 80 = 0x50
    struct FBRange _parameterRange1;	// 88 = 0x58
    struct FBRange _parameterRange2;	// 104 = 0x68
}

+ (id)intersectRangeWithCurve1:(id)arg1 parameterRange1:(struct FBRange)arg2 curve2:(id)arg3 parameterRange2:(struct FBRange)arg4 reversed:(BOOL)arg5;
@property(readonly, nonatomic) BOOL reversed; // @synthesize reversed=_reversed;
@property(readonly, nonatomic) struct FBRange parameterRange2; // @synthesize parameterRange2=_parameterRange2;
@property(readonly, nonatomic) FBBezierCurve *curve2; // @synthesize curve2=_curve2;
@property(readonly, nonatomic) struct FBRange parameterRange1; // @synthesize parameterRange1=_parameterRange1;
@property(readonly, nonatomic) FBBezierCurve *curve1; // @synthesize curve1=_curve1;
- (void).cxx_destruct;
- (id)description;
- (void)clearCache;
- (void)merge:(id)arg1;
- (id)flip;
@property(readonly, nonatomic) FBBezierIntersection *middleIntersection;
@property(readonly, nonatomic, getter=isAtStopOfCurve2) BOOL atStopOfCurve2;
@property(readonly, nonatomic, getter=isAtStartOfCurve2) BOOL atStartOfCurve2;
@property(readonly, nonatomic, getter=isAtStopOfCurve1) BOOL atStopOfCurve1;
@property(readonly, nonatomic, getter=isAtStartOfCurve1) BOOL atStartOfCurve1;
- (void)computeCurve2;
- (void)computeCurve1;
@property(readonly, nonatomic) FBBezierCurve *curve2RightBezier;
@property(readonly, nonatomic) FBBezierCurve *curve2OverlappingBezier;
@property(readonly, nonatomic) FBBezierCurve *curve2LeftBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1RightBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1OverlappingBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1LeftBezier;
- (id)initWithCurve1:(id)arg1 parameterRange1:(struct FBRange)arg2 curve2:(id)arg3 parameterRange2:(struct FBRange)arg4 reversed:(BOOL)arg5;

@end

@interface FBBezierIntersection : NSObject
{
    struct CGPoint _location;	// 8 = 0x8
    FBBezierCurve *_curve1LeftBezier;	// 24 = 0x18
    FBBezierCurve *_curve1RightBezier;	// 32 = 0x20
    FBBezierCurve *_curve2LeftBezier;	// 40 = 0x28
    FBBezierCurve *_curve2RightBezier;	// 48 = 0x30
    BOOL _tangent;	// 56 = 0x38
    BOOL _needToComputeCurve1;	// 57 = 0x39
    BOOL _needToComputeCurve2;	// 58 = 0x3a
    FBBezierCurve *_curve1;	// 64 = 0x40
    double _parameter1;	// 72 = 0x48
    FBBezierCurve *_curve2;	// 80 = 0x50
    double _parameter2;	// 88 = 0x58
}

+ (id)intersectionWithCurve1:(id)arg1 parameter1:(double)arg2 curve2:(id)arg3 parameter2:(double)arg4;
@property(readonly, nonatomic) double parameter2; // @synthesize parameter2=_parameter2;
@property(readonly, nonatomic) FBBezierCurve *curve2; // @synthesize curve2=_curve2;
@property(readonly, nonatomic) double parameter1; // @synthesize parameter1=_parameter1;
@property(readonly, nonatomic) FBBezierCurve *curve1; // @synthesize curve1=_curve1;
- (void).cxx_destruct;
- (id)description;
- (void)enumerateAliasesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateAliasesOfCurve:(id)arg1 atParameter:(double)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)computeCurve2;
- (void)computeCurve1;
@property(readonly, nonatomic, getter=isAtEndPointOfCurve) BOOL atEndPointOfCurve;
@property(readonly, nonatomic, getter=isAtEndPointOfCurve2) BOOL atEndPointOfCurve2;
@property(readonly, nonatomic, getter=isAtStopOfCurve2) BOOL atStopOfCurve2;
@property(readonly, nonatomic, getter=isAtStartOfCurve2) BOOL atStartOfCurve2;
@property(readonly, nonatomic, getter=isAtEndPointOfCurve1) BOOL atEndPointOfCurve1;
@property(readonly, nonatomic, getter=isAtStopOfCurve1) BOOL atStopOfCurve1;
@property(readonly, nonatomic, getter=isAtStartOfCurve1) BOOL atStartOfCurve1;
- (double)curve2Threshold;
- (double)curve1Threshold;
- (double)curve2ExactThreshold;
- (double)curve1ExactThreshold;
- (double)curve2ThresholdWithWeight:(double)arg1 maximum:(double)arg2;
- (double)curve1ThresholdWithWeight:(double)arg1 maximum:(double)arg2;
@property(readonly, nonatomic) BOOL isAtExactStopOfCurve2;
@property(readonly, nonatomic) BOOL isAtExactStartOfCurve2;
@property(readonly, nonatomic) BOOL isAtExactStopOfCurve1;
@property(readonly, nonatomic) BOOL isAtExactStartOfCurve1;
@property(readonly, nonatomic) FBBezierCurve *curve2RightBezier;
@property(readonly, nonatomic) FBBezierCurve *curve2LeftBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1RightBezier;
@property(readonly, nonatomic) FBBezierCurve *curve1LeftBezier;
- (long long)curve2WindingCount;
- (long long)curve1WindingCount;
- (struct CGPoint)curve2Direction;
- (struct CGPoint)curve1Direction;
@property(readonly, nonatomic, getter=isTangent) BOOL tangent;
@property(readonly, nonatomic) struct CGPoint location;
- (id)initWithCurve1:(id)arg1 parameter1:(double)arg2 curve2:(id)arg3 parameter2:(double)arg4;

@end

@interface FBBezierOperationChain : NSObject
{
    NSMutableArray *_operands;	// 8 = 0x8
}

- (void).cxx_destruct;
- (void)enumerateWithBlock:(CDUnknownBlockType)arg1;
- (void)saveWithName:(id)arg1;
- (id)archive;
- (void)appendBezierPath:(id)arg1 withOperation:(int)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithBezierPath:(id)arg1;
- (id)init;

@end

@interface FBBezierOperationChainOperand : NSObject
{
    int _operation;	// 8 = 0x8
    NSBezierPath *_path;	// 16 = 0x10
}

+ (id)operandWithMomento:(id)arg1;
+ (id)operandWithOperation:(int)arg1 path:(id)arg2;
@property(readonly, nonatomic) NSBezierPath *path; // @synthesize path=_path;
@property(readonly, nonatomic) int operation; // @synthesize operation=_operation;
- (void).cxx_destruct;
- (id)momento;
- (id)initWithMomento:(id)arg1;
- (id)initWithOperation:(int)arg1 path:(id)arg2;

@end

@interface FBContourOverlap : NSObject
{
    NSMutableArray *_runs;	// 8 = 0x8
}

+ (id)contourOverlap;
- (void).cxx_destruct;
- (id)description;
- (BOOL)isBetweenContour:(id)arg1 andContour:(id)arg2;
@property(readonly, nonatomic) FBBezierContour *contour2;
@property(readonly, nonatomic) FBBezierContour *contour1;
- (BOOL)isEmpty;
- (BOOL)isComplete;
- (void)reset;
- (void)runsWithBlock:(CDUnknownBlockType)arg1;
- (BOOL)doesContainParameter:(double)arg1 onEdge:(id)arg2;
- (BOOL)doesContainCrossing:(id)arg1;
- (void)addOverlap:(id)arg1 forEdge1:(id)arg2 edge2:(id)arg3;
@property(readonly, nonatomic) NSMutableArray *runs_;

@end

@interface FBCurveLocation : NSObject
{
    FBBezierGraph *_graph;	// 8 = 0x8
    FBBezierContour *_contour;	// 16 = 0x10
    FBBezierCurve *_edge;	// 24 = 0x18
    double _parameter;	// 32 = 0x20
    double _distance;	// 40 = 0x28
}

+ (id)curveLocationWithEdge:(id)arg1 parameter:(double)arg2 distance:(double)arg3;
@property(readonly, nonatomic) double distance; // @synthesize distance=_distance;
@property(readonly, nonatomic) double parameter; // @synthesize parameter=_parameter;
@property(readonly, nonatomic) FBBezierCurve *edge; // @synthesize edge=_edge;
@property(retain, nonatomic) FBBezierContour *contour; // @synthesize contour=_contour;
@property(retain, nonatomic) FBBezierGraph *graph; // @synthesize graph=_graph;
- (void).cxx_destruct;
- (id)initWithEdge:(id)arg1 parameter:(double)arg2 distance:(double)arg3;

@end

@interface FBEdgeCrossing : NSObject
{
    BOOL _entry;	// 8 = 0x8
    BOOL _processed;	// 9 = 0x9
    BOOL _selfCrossing;	// 10 = 0xa
    BOOL _fromCrossingOverlap;	// 11 = 0xb
    BOOL _suspicious;	// 12 = 0xc
    FBBezierCurve *_edge;	// 16 = 0x10
    FBEdgeCrossing *_counterpart;	// 24 = 0x18
    unsigned long long _index;	// 32 = 0x20
    FBBezierIntersection *_intersection;	// 40 = 0x28
}

+ (id)crossingWithIntersection:(id)arg1;
@property(readonly, nonatomic) FBBezierIntersection *intersection; // @synthesize intersection=_intersection;
@property(nonatomic, getter=isSuspicious) BOOL suspicious; // @synthesize suspicious=_suspicious;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(nonatomic) BOOL fromCrossingOverlap; // @synthesize fromCrossingOverlap=_fromCrossingOverlap;
@property(nonatomic, getter=isSelfCrossing) BOOL selfCrossing; // @synthesize selfCrossing=_selfCrossing;
@property(nonatomic, getter=isProcessed) BOOL processed; // @synthesize processed=_processed;
@property(nonatomic, getter=isEntry) BOOL entry; // @synthesize entry=_entry;
@property(nonatomic) __weak FBEdgeCrossing *counterpart; // @synthesize counterpart=_counterpart;
@property(nonatomic) __weak FBBezierCurve *edge; // @synthesize edge=_edge;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic, getter=isAtEnd) BOOL atEnd;
@property(readonly, nonatomic, getter=isAtStart) BOOL atStart;
@property(readonly, nonatomic) FBBezierCurve *rightCurve;
@property(readonly, nonatomic) FBBezierCurve *leftCurve;
@property(readonly, nonatomic) FBBezierCurve *curve;
@property(readonly, nonatomic) struct CGPoint location;
@property(readonly, nonatomic) double parameter;
- (id)previousUsingNonself:(BOOL)arg1;
- (id)nextUsingNonself:(BOOL)arg1;
@property(readonly, nonatomic) FBEdgeCrossing *previous;
@property(readonly, nonatomic) FBEdgeCrossing *next;
@property(readonly, nonatomic) double order;
- (void)removeFromEdge;
- (id)initWithIntersection:(id)arg1;

@end

@interface FBEdgeOverlap : NSObject
{
    FBBezierIntersectRange *_range;	// 8 = 0x8
    FBBezierCurve *_edge1;	// 16 = 0x10
    FBBezierCurve *_edge2;	// 24 = 0x18
}

+ (id)overlapWithRange:(id)arg1 edge1:(id)arg2 edge2:(id)arg3;
@property(readonly, nonatomic) FBBezierCurve *edge2; // @synthesize edge2=_edge2;
@property(readonly, nonatomic) FBBezierCurve *edge1; // @synthesize edge1=_edge1;
@property(readonly, nonatomic) FBBezierIntersectRange *range; // @synthesize range=_range;
- (void).cxx_destruct;
- (id)description;
- (BOOL)doesContainParameter:(double)arg1 onEdge:(id)arg2 startExtends:(BOOL)arg3 endExtends:(BOOL)arg4;
- (id)middleIntersection;
- (void)addMiddleCrossing;
- (BOOL)fitsAfter:(id)arg1;
- (BOOL)fitsBefore:(id)arg1;
- (id)initWithRange:(id)arg1 edge1:(id)arg2 edge2:(id)arg3;

@end

@interface FBEdgeOverlapRun : NSObject
{
    NSMutableArray *_overlaps;	// 8 = 0x8
}

+ (id)overlapRun;
@property(readonly, nonatomic) NSArray *overlaps; // @synthesize overlaps=_overlaps;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) FBBezierContour *contour2;
@property(readonly, nonatomic) FBBezierContour *contour1;
- (id)middleIntersection;
- (void)addCrossings;
- (BOOL)isCrossingUsingNonZeroWindingRule;
- (BOOL)isCrossingWithCallDepth:(unsigned long long)arg1;
- (BOOL)isCrossing;
- (BOOL)isCrossingWithTangentsOnly;
- (BOOL)doesContainParameter:(double)arg1 onEdge:(id)arg2;
- (BOOL)doesContainCrossing:(id)arg1;
- (BOOL)isComplete;
- (BOOL)insertOverlap:(id)arg1;
- (id)init;

@end

@interface FBTangentIterator : NSObject
{
    double _leftBaseOffset;	// 8 = 0x8
    double _rightBaseOffset;	// 16 = 0x10
    FBBezierCurve *_leftCurve;	// 24 = 0x18
    FBBezierCurve *_rightCurve;	// 32 = 0x20
    double _offset;	// 40 = 0x28
    double _offsetStep;	// 48 = 0x30
    double _offsetMaximum;	// 56 = 0x38
}

+ (id)tangentIteratorWithIntersection:(id)arg1 onCurve:(id)arg2;
@property(nonatomic) double offsetMaximum; // @synthesize offsetMaximum=_offsetMaximum;
@property(nonatomic) double offsetStep; // @synthesize offsetStep=_offsetStep;
@property(nonatomic) double offset; // @synthesize offset=_offset;
@property(retain, nonatomic) FBBezierCurve *rightCurve; // @synthesize rightCurve=_rightCurve;
@property(retain, nonatomic) FBBezierCurve *leftCurve; // @synthesize leftCurve=_leftCurve;
- (void).cxx_destruct;
- (void)updateCurves;
@property(readonly, nonatomic) double rightOffset;
@property(readonly, nonatomic) double leftOffset;
- (BOOL)next:(struct CGPoint [2])arg1;
- (void)sync:(id)arg1;
- (void)commonInit;
- (id)initWithIntersection:(id)arg1 onCurve:(id)arg2;

@end

@interface GKAxis : GKObjectEnum
{
}

+ (id)axisWithType:(long long)arg1;
+ (id)verticalAxis;
+ (id)horizontalAxis;
- (id)flippedAxis;
- (void)flip;
- (BOOL)isVertical;
- (BOOL)isHorizontal;

// Remaining properties
@property long long type; // @dynamic type;

@end

@interface GKAxisPosition : GKObjectEnum
{
}

+ (id)positionWithType:(long long)arg1;
+ (id)positionMax;
+ (id)positionMid;
+ (id)positionMin;

// Remaining properties
@property long long type; // @dynamic type;

@end

@interface GKCorner : GKObjectEnum
{
}

+ (id)cornersSatisfyingMask:(unsigned long long)arg1;
+ (id)cornersSatisfyingPredicate:(CDUnknownBlockType)arg1;
+ (id)allCorners;
+ (id)firstCornerSatisfyingPredicate:(CDUnknownBlockType)arg1;
+ (void)enumerateCornersInBlock:(CDUnknownBlockType)arg1;
+ (id)cornerWithType:(long long)arg1;
- (unsigned long long)rectEdgesMask;
- (id)stringRepresentation;
- (BOOL)satisfiesMask:(unsigned long long)arg1;
- (unsigned long long)maskValue;
- (BOOL)isInMidVertical;
- (BOOL)isInMidHorizontal;
- (BOOL)isInMid;
- (BOOL)isInCorner;
- (id)flipByAxisMask:(unsigned long long)arg1;
- (id)cornerByRotatingByDegrees:(long long)arg1;
- (id)cornerByRotating45DegreesCounterClockwise;
- (id)cornerByFlipping;
- (id)flip;

// Remaining properties
@property long long type; // @dynamic type;

@end

@interface GKEdge : GKObjectEnum
{
}

+ (id)edgeWithType:(unsigned long long)arg1;
- (void)flip;

// Remaining properties
@property unsigned long long type; // @dynamic type;

@end

@interface GKLine : NSObject
{
    GKAxis *_axis;	// 8 = 0x8
    double _position;	// 16 = 0x10
}

+ (id)sortLines:(id)arg1 byDistanceToValue:(double)arg2;
+ (id)lineOnAxis:(id)arg1 position:(double)arg2;
@property(nonatomic) double position; // @synthesize position=_position;
@property(copy, nonatomic) GKAxis *axis; // @synthesize axis=_axis;
- (void).cxx_destruct;
- (BOOL)snapToPosition:(double)arg1 margin:(double)arg2;
- (BOOL)snapToRect:(id)arg1 margin:(double)arg2;

@end

@interface GKObjectEnum : NSObject <NSCopying>
{
    long long type;	// 8 = 0x8
}

- (id)description;
- (id)stringRepresentation;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setType:(long long)arg1;
- (long long)type;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(long long)arg1;

@end

@interface GKOffset : NSObject <NSCopying>
{
    struct CGSize offset;	// 8 = 0x8
}

+ (id)offsetFromPoint:(id)arg1 toPoint:(id)arg2;
+ (id)offsetWithPoint:(struct CGPoint)arg1;
+ (id)offsetWithSize:(struct CGSize)arg1;
+ (id)offsetWithValue:(double)arg1;
@property struct CGSize offset; // @synthesize offset;
- (id)description;
- (BOOL)isSmallerThanOffset:(id)arg1;
@property struct CGPoint point; // @dynamic point;
@property double yOffset; // @dynamic yOffset;
@property double xOffset; // @dynamic xOffset;
- (id)invert;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSize:(struct CGSize)arg1;

@end

@interface GKPoint : NSObject <NSCopying>
{
    struct CGPoint point;	// 8 = 0x8
}

+ (id)pointWithX:(double)arg1 y:(double)arg2;
+ (id)pointWithPoint:(struct CGPoint)arg1;
@property struct CGPoint point; // @synthesize point;
- (id)description;
- (void)setPosition:(double)arg1 forAxis:(id)arg2;
- (double)positionForAxis:(id)arg1;
- (id)snapToLines:(id)arg1 withMargin:(double)arg2;
- (id)snapToPoint:(id)arg1 withMargin:(double)arg2;
- (id)snapToRect:(id)arg1 withMargin:(double)arg2;
- (id)offsetToPoint:(id)arg1;
- (double)distanceToPoint:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property double y; // @dynamic y;
@property double x; // @dynamic x;
- (id)initWithPoint:(struct CGPoint)arg1;

@end

@interface GKRect : NSObject <NSCopying>
{
    struct CGRect _rect;	// 8 = 0x8
}

+ (id)rectWithUnionOfGKRects:(id)arg1;
+ (struct CGRect)NSRectValueFromObject:(id)arg1;
+ (id)safeRectWithUnionOfRects:(id)arg1;
+ (id)rectWithUnionOfRects:(id)arg1;
+ (id)rectWithRect:(struct CGRect)arg1;
+ (long long)compareRect:(id)arg1 andRect:(id)arg2 forAxis:(id)arg3;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(nonatomic) struct CGSize size; // @dynamic size;
@property(nonatomic) struct CGPoint origin; // @dynamic origin;
- (void)scaleBy:(double)arg1;
- (void)normalise;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) double height; // @dynamic height;
@property(nonatomic) double width; // @dynamic width;
@property(nonatomic) double y; // @dynamic y;
@property(nonatomic) double x; // @dynamic x;
- (BOOL)intersectsWithRect:(id)arg1;
- (void)unionWith:(id)arg1;
- (id)initWithRect:(struct CGRect)arg1;
- (id)setSize:(double)arg1 forAxis:(id)arg2;
- (id)setMax:(double)arg1 forAxis:(id)arg2;
- (id)setMid:(double)arg1 forAxis:(id)arg2;
- (id)setMin:(double)arg1 forAxis:(id)arg2;
- (double)sizeForAxis:(id)arg1;
- (double)maxForAxis:(id)arg1;
- (double)midForAxis:(id)arg1;
- (double)minForAxis:(id)arg1;
- (id)unionWithRect:(id)arg1;
- (void)intersectWithRect:(id)arg1;
- (BOOL)intersectsRect:(id)arg1;
- (BOOL)isContainedInRect:(id)arg1;
- (BOOL)containsRect:(id)arg1;
- (id)distanceFromCornerToMid:(id)arg1;
- (id)snapToRects:(id)arg1 withMargin:(double)arg2;
- (id)closestCornerForPoint:(id)arg1 marginCallback:(CDUnknownBlockType)arg2;
- (id)closestCornerForPoint:(id)arg1 withMargin:(double)arg2 satisfyingMask:(unsigned long long)arg3;
- (id)closestCornerForPoint:(id)arg1 withMargin:(double)arg2;
- (id)resizeByPuttingCorner:(id)arg1 atPoint:(id)arg2;
- (id)moveCorner:(id)arg1 toPoint:(id)arg2;
- (id)pointsForCorners:(id)arg1;
- (id)pointForCorner:(id)arg1;
- (double)valueForEdge:(id)arg1;
- (void)resizeMaxYTo:(double)arg1;
- (void)resizeMinYTo:(double)arg1;
- (void)resizeMaxXTo:(double)arg1;
- (void)resizeMinXTo:(double)arg1;
@property(nonatomic) struct CGPoint mid; // @dynamic mid;
@property double maxY; // @dynamic maxY;
@property(nonatomic) double midY; // @dynamic midY;
@property double minY; // @dynamic minY;
@property double maxX; // @dynamic maxX;
@property(nonatomic) double midX; // @dynamic midX;
@property double minX; // @dynamic minX;
- (id)moveBy:(struct CGSize)arg1;
- (id)insetXBy:(double)arg1 yBy:(double)arg2;
- (id)insetBy:(double)arg1;
- (id)expandXBy:(double)arg1 yBy:(double)arg2;
- (id)expandBy:(double)arg1;
- (id)moveToPoint:(id)arg1 withOffset:(id)arg2;
- (id)innerOffsetOfPoint:(id)arg1;
- (BOOL)containsPoint:(id)arg1 withInsetMargin:(double)arg2;
- (BOOL)containsPoint:(id)arg1;
- (void)translateFromRect:(id)arg1 toRect:(id)arg2;
- (id)absoluteRectInsideRect:(id)arg1;
- (id)relativeRectInsideRect:(id)arg1;

@end

@interface JRFeedbackController : NSWindowController
{
    NSTextView *textView;	// 80 = 0x50
    NSButton *includeHardwareDetailsCheckbox;	// 88 = 0x58
    NSTextField *nameTextField;	// 96 = 0x60
    NSTextField *emailAddressComboBox;	// 104 = 0x68
    NSProgressIndicator *progress;	// 112 = 0x70
    NSSegmentedControl *segmentedControl;	// 120 = 0x78
    NSButton *cancelButton;	// 128 = 0x80
    NSButton *sendButton;	// 136 = 0x88
    int currentSection;	// 144 = 0x90
    BOOL includeContactInfo;	// 148 = 0x94
}

+ (id)postURL;
+ (void)showFeedbackWithBugDetails:(id)arg1;
+ (void)showFeedback;
- (void).cxx_destruct;
- (void)showWindow:(id)arg1;
- (void)setTextViewStringTo:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)displayAlertMessage:(id)arg1 withInformativeText:(id)arg2 andAlertStyle:(unsigned long long)arg3;
- (void)alertDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)closeFeedback;
- (void)postFeedback:(id)arg1;
- (void)system_profilerThread:(id)arg1;
- (void)submitAction:(id)arg1;
- (void)switchSectionAction:(id)arg1;
- (void)visitOnlineSupport:(id)arg1;
- (void)setIncludeContactInfo:(BOOL)arg1;
- (BOOL)includeContactInfo;
- (void)windowDidLoad;
- (id)init;

@end

@interface KBDelayedPopUpButton : NSButton
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface KBDelayedPopUpButtonCell : NSButtonCell
{
    BOOL delayMenu;	// 120 = 0x78
}

- (void)setDelayMenu:(BOOL)arg1;
- (BOOL)delayMenu;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)showMenuForEvent:(id)arg1 controlView:(id)arg2 cellFrame:(struct CGRect)arg3;
- (struct CGPoint)menuPositionForFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (id)arrowBezierInRect:(struct CGRect)arg1;
- (id)initTextCell:(id)arg1;

@end

@interface KBPopUpToolbarItem : NSToolbarItem
{
    NSImage *smallImage;	// 152 = 0x98
    NSImage *normalImage;	// 160 = 0xa0
}

@property(retain, nonatomic) NSImage *normalImage; // @synthesize normalImage;
@property(retain, nonatomic) NSImage *smallImage; // @synthesize smallImage;
- (void).cxx_destruct;
- (void)setDelayMenu:(BOOL)arg1;
- (BOOL)delayMenu;
- (void)validate;
- (id)toolTip;
- (void)setToolTip:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (id)menu;
- (void)setMenu:(id)arg1;
- (id)popupCell;
- (id)menuButtonWithSize:(unsigned long long)arg1;
- (id)initWithItemIdentifier:(id)arg1 size:(unsigned long long)arg2;

@end

@interface MSAbsoluteRect : GKRect
{
    void *rectObservationInfo;	// 8 = 0x8
    MSLayer *_layer;	// 16 = 0x10
    NSBezierPath *_cachedTransformedBounds;	// 24 = 0x18
    struct CGPoint _absP1;	// 32 = 0x20
    struct CGPoint _absP2;	// 48 = 0x30
    struct CGPoint _absP3;	// 64 = 0x40
    struct CGPoint _absP4;	// 80 = 0x50
    struct CGRect _cachedAbsoluteRect;	// 96 = 0x60
}

@property(nonatomic) struct CGRect cachedAbsoluteRect; // @synthesize cachedAbsoluteRect=_cachedAbsoluteRect;
@property(nonatomic) struct CGPoint absP4; // @synthesize absP4=_absP4;
@property(nonatomic) struct CGPoint absP3; // @synthesize absP3=_absP3;
@property(nonatomic) struct CGPoint absP2; // @synthesize absP2=_absP2;
@property(nonatomic) struct CGPoint absP1; // @synthesize absP1=_absP1;
@property(retain, nonatomic) NSBezierPath *cachedTransformedBounds; // @synthesize cachedTransformedBounds=_cachedTransformedBounds;
@property(nonatomic) __weak MSLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
- (void)dealloc;
- (void)setNilValueForKey:(id)arg1;
@property(nonatomic) double rulerY; // @dynamic rulerY;
@property(nonatomic) double rulerX; // @dynamic rulerX;
- (id)parentRoot;
- (void)setRect:(struct CGRect)arg1;
- (struct CGRect)rect;
- (void)setHeight:(double)arg1;
- (double)height;
- (void)setWidth:(double)arg1;
- (double)width;
- (double)y;
- (void)moveInAbsoluteCoordinatesBy:(struct CGPoint)arg1;
- (void)setY:(double)arg1;
- (void)setX:(double)arg1;
- (double)x;
- (id)GKRect;
- (BOOL)boundsContainsPoint:(struct CGPoint)arg1;
- (void)calculateAbsolutePoints;
- (struct CGRect)absoluteRect;
- (void)clearPositionCaches;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void *)observationInfo;
- (void)setObservationInfo:(void *)arg1;
- (id)initWithLayer:(id)arg1;

@end

@interface MSActionValidation : NSObject
{
    NSMutableArray *supportedHandlers;	// 8 = 0x8
    NSMutableArray *unsupportedHandlers;	// 16 = 0x10
    NSMutableArray *supportedLayers;	// 24 = 0x18
    NSMutableArray *unsupportedLayers;	// 32 = 0x20
    unsigned long long _layerCountComparison;	// 40 = 0x28
    unsigned long long _layerCount;	// 48 = 0x30
    id <MSBasicDelegate> _delegate;	// 56 = 0x38
    NSString *_currentHandlerKey;	// 64 = 0x40
}

@property(copy, nonatomic) NSString *currentHandlerKey; // @synthesize currentHandlerKey=_currentHandlerKey;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long layerCount; // @synthesize layerCount=_layerCount;
@property(nonatomic) unsigned long long layerCountComparison; // @synthesize layerCountComparison=_layerCountComparison;
- (void).cxx_destruct;
- (void)dealloc;
- (id)or;
- (id)doesNotSupportLayers:(id)arg1;
- (id)requiresLayers:(id)arg1;
- (id)requiresNormalHandler;
- (id)handler:(id)arg1;
- (id)layerCountAtLeast:(unsigned long long)arg1;
- (BOOL)unsupportedHandlersIsValid;
- (BOOL)supportedHandlersIsValid;
- (BOOL)layerIsUnsupported:(id)arg1;
- (BOOL)layerIsSupported:(id)arg1;
- (BOOL)selectedLayersIsValid;
- (BOOL)layerCountIsValid;
- (BOOL)validateWithDelegate:(id)arg1 handler:(id)arg2;
- (id)init;

@end

@interface MSActionsController : NSObject
{
    NSMutableDictionary *actions;	// 8 = 0x8
    NSString *actionNameForActiveToolbarItem;	// 16 = 0x10
}

@property(copy, nonatomic) NSString *actionNameForActiveToolbarItem; // @synthesize actionNameForActiveToolbarItem;
- (void).cxx_destruct;
- (void)dealloc;
- (id)actions;
- (id)actionWithName:(id)arg1;
- (id)allActions;
- (void)createActionForDocument:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)init;
- (id)actionClassNames;

@end

@interface MSAdaptableColor : NSColor
{
}

- (id)initWithCoder:(id)arg1;

@end

@interface MSAlignCenterAction : MSBaseAlignAction
{
}

- (void)performAction:(id)arg1;
- (void)alignCenter:(id)arg1;

@end

@interface MSAlignJustifiedAction : MSBaseAlignAction
{
}

- (void)performAction:(id)arg1;
- (void)alignJustified:(id)arg1;

@end

@interface MSAlignLeftAction : MSBaseAlignAction
{
}

- (void)performAction:(id)arg1;
- (void)alignLeft:(id)arg1;

@end

@interface MSAlignRightAction : MSBaseAlignAction
{
}

- (void)performAction:(id)arg1;
- (void)alignRight:(id)arg1;

@end

@interface MSAlignmentBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSAlternatingView : NSView
{
    NSView *otherView;	// 152 = 0x98
    BOOL didDrag;	// 160 = 0xa0
    BOOL isInside;	// 161 = 0xa1
    BOOL isDown;	// 162 = 0xa2
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)buttonImage;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)awakeFromNib;
- (void)mouseUp:(id)arg1;
- (BOOL)shouldSwapColorModeForEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface MSAngularGradientEventHandler : MSGradientEventHandler
{
}

- (long long)addStopAtPosition:(struct CGPoint)arg1;
- (BOOL)canInsertPointAtMouse:(struct CGPoint)arg1;
- (id)handleLinesPath;
- (double)positionForStop:(struct CGPoint)arg1;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (struct CGPoint)basePointAtIndex:(unsigned long long)arg1;
- (id)bounds;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (void)repairGradientIfNecessary;

@end

@interface MSArchivedColor : NSObject <NSCoding>
{
    double r;	// 8 = 0x8
    double g;	// 16 = 0x10
    double b;	// 24 = 0x18
    double a;	// 32 = 0x20
}

+ (id)archivedColor:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MSArchiver : NSKeyedArchiver
{
    BOOL _archiveObjectIDs;	// 144 = 0x90
    NSMutableSet *_archivedImages;	// 152 = 0x98
}

+ (BOOL)archiveRootObject:(id)arg1 withObjectIDs:(BOOL)arg2 toURL:(id)arg3;
+ (id)archivedDataWithHeaderAndRootObject:(id)arg1 withObjectIDs:(BOOL)arg2;
+ (id)archivedDataWithRootObject:(id)arg1 withObjectIDs:(BOOL)arg2;
@property(retain, nonatomic) NSMutableSet *archivedImages; // @synthesize archivedImages=_archivedImages;
@property(nonatomic) BOOL archiveObjectIDs; // @synthesize archiveObjectIDs=_archiveObjectIDs;
- (void).cxx_destruct;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;

@end

@interface MSArray : MSModelObject <NSFastEnumeration>
{
    NSMutableArray *array;	// 8 = 0x8
    id <MSArrayDelegate> _delegate;	// 16 = 0x10
}

+ (id)dataArrayWithArray:(id)arg1;
+ (id)dataArray;
+ (id)array;
@property(nonatomic) __weak id <MSArrayDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSArray *array; // @synthesize array;
- (void).cxx_destruct;
- (id)description;
- (id)filteredArrayUsingBlock:(CDUnknownBlockType)arg1;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (BOOL)hasDefaultValues;
- (void)breakParentConnection;
- (void)breakParentConnectionForObject:(id)arg1;
- (void)dealloc;
- (id)treeAsDictionary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)map:(CDUnknownBlockType)arg1;
- (void)each:(CDUnknownBlockType)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)insertObject:(id)arg1 afterObject:(id)arg2;
- (void)insertObject:(id)arg1 beforeObject:(id)arg2;
- (id)detachAllObjects;
- (void)removeAllObjects;
- (void)removeObjectsInArray:(id)arg1;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)debugUndoInsertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replaceContentsWithArray:(id)arg1;
- (id)undoInvocation;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (id)firstObjectSatisfyingTest:(CDUnknownBlockType)arg1;
- (BOOL)containsObject:(id)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (BOOL)isValidIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (unsigned long long)count;
- (id)objectAtIndexOrNil:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)lastObject;
- (id)firstObject;
- (void)setArray:(id)arg1;
- (void)setAsParentOnChildren;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (BOOL)isEqualForSync:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)fillInEmptyObjects;
- (void)initEmptyObject;
- (id)initWithArray:(id)arg1 lightweight:(BOOL)arg2;
- (id)initWithArray:(id)arg1;
- (BOOL)shouldConvertArrayPropertyWithName:(id)arg1;

@end

@interface MSArtboard : _MSArtboard
{
}

+ (id)artboardFromSlice:(id)arg1;

@end

@interface MSArtboardCanvasRenderer : NSObject
{
}

+ (id)artboards:(id)arg1 visibleInTileRect:(struct CGRect)arg2 zoomValue:(double)arg3;
+ (void)drawOutlinesForArtboards:(id)arg1 rect:(struct CGRect)arg2 zoomValue:(double)arg3;
+ (void)drawArtboardOutlines:(id)arg1 inRect:(struct CGRect)arg2 zoomValue:(double)arg3;

@end

@interface MSArtboardGroup : _MSArtboardGroup <MSRootLayer, MSLayerWithBackgroundColour>
{
    id <MSSliceLayerWatcher> _sliceWatcher;	// 56 = 0x38
}

@property(nonatomic) __weak id <MSSliceLayerWatcher> sliceWatcher; // @synthesize sliceWatcher=_sliceWatcher;
- (void).cxx_destruct;
- (BOOL)canRotate;
- (id)otherArtboardUnderArtboard;
- (void)moveToEmptyLocation;
- (void)removeFromParent;
- (void)resizeRoot;
- (id)parentRoot;
- (id)parentArtboard;
- (id)slice;
- (void)markLayerDirtyOfType:(unsigned long long)arg1 margins:(struct CGSize)arg2;
- (struct CGRect)rectByAccountingForStyleSize:(struct CGRect)arg1;
@property(nonatomic) struct CGPoint rulerBase; // @dynamic rulerBase;
- (BOOL)isLocked;
- (void)setIsLocked:(BOOL)arg1;
- (double)rotation;
- (BOOL)isOpen;
- (BOOL)canBeTransformed;
- (BOOL)enableAutomaticScaling;
- (id)inspectorViewControllerNames;
- (BOOL)hasClickThrough;
- (id)layersBelowPoint:(struct CGPoint)arg1 forceClickThrough:(BOOL)arg2 keepLockedLayers:(BOOL)arg3;
- (void)setName:(id)arg1;
- (id)defaultName;
- (BOOL)hitTestInNameLabel:(struct CGPoint)arg1;
- (BOOL)hitTest:(struct CGPoint)arg1;
- (id)defaultArtboardStyle;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (void)initEmptyObject;
- (void)migratePropertiesFromV24OrEarlierWithCoder:(id)arg1;
- (void)migratePropertiesFromV36OrEarlierWithCoder:(id)arg1;
- (void)migratePropertiesFromV28OrEarlierWithCoder:(id)arg1;
- (void)migratePropertiesFromV21OrEarlierWithCoder:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (Class)rendererClass;

// Remaining properties
@property(copy, nonatomic) MSSimpleGrid *grid;
@property(nonatomic) BOOL hasBackgroundColor;
@property(copy, nonatomic) MSRulerData *horizontalRulerData;
@property(copy, nonatomic) MSLayoutGrid *layout;
@property(copy, nonatomic) MSRulerData *verticalRulerData;

@end

@interface MSArtboardGroupRenderer : MSLayerGroupRenderer
{
}

+ (BOOL)shouldDrawArtboardBackground:(id)arg1 context:(id)arg2;
+ (void)renderSubLayersOfGroup:(id)arg1 context:(id)arg2;
+ (BOOL)shouldDrawLayer:(id)arg1 context:(id)arg2;

@end

@interface MSArtboardPresetCell : NSTextFieldCell
{
    BOOL _isSelected;	// 84 = 0x54
    struct CGSize _presetSize;	// 88 = 0x58
}

@property(nonatomic) BOOL isSelected; // @synthesize isSelected=_isSelected;
@property(nonatomic) struct CGSize presetSize; // @synthesize presetSize=_presetSize;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSArtboardPresetOutlineView : NSOutlineView
{
}

- (void)drawHeaderInRect:(struct CGRect)arg1;
- (id)menuForEvent:(id)arg1;
- (BOOL)itemIsHeader:(id)arg1;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;

@end

@interface MSArtboardPreviewWindowController : CHSingletonWindowController <NSWindowDelegate>
{
    NSImageView *_previewView;	// 80 = 0x50
    NSTextField *_noArtboardField;	// 88 = 0x58
    NSTimer *_refreshTimer;	// 96 = 0x60
}

@property(retain, nonatomic) NSTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(nonatomic) __weak NSTextField *noArtboardField; // @synthesize noArtboardField=_noArtboardField;
@property(nonatomic) __weak NSImageView *previewView; // @synthesize previewView=_previewView;
- (void).cxx_destruct;
- (void)dealloc;
- (id)currentDocument;
- (id)currentArtboard;
- (struct CGRect)fitRectOnScreen:(struct CGRect)arg1;
- (void)setWindowSize:(struct CGSize)arg1;
- (id)artboardSlice;
- (void)generatePreviewWithCallback:(CDUnknownBlockType)arg1;
- (struct CGSize)windowSizeForImage:(id)arg1;
- (void)loadPreview;
- (void)displayCurrentArtboardPreview;
- (void)refreshTimerAction:(id)arg1;
- (void)scheduleTimer;
- (void)awakeFromNib;

@end

@interface MSArtisticStroke : _MSArtisticStroke
{
}

- (double)maximumStrength;
- (id)artisticBezierPathFromPath:(id)arg1 withStrokeWidth:(double)arg2;
- (id)artisticBezierPathFromPath:(id)arg1 atSide:(long long)arg2 withStrokeWidth:(double)arg3;
- (double)distanceOnSide:(long long)arg1 atPosition:(double)arg2;
- (id)pathBySubdividingAtHandles:(id)arg1;
- (id)addHandleAtPosition:(double)arg1;
- (void)addHandle:(id)arg1;
- (void)removeHandleAtIndex:(unsigned long long)arg1;
- (void)sortHandles;
- (void)removeHandle:(id)arg1;
- (BOOL)isActive;
- (void)simplify;
- (BOOL)hasDefaultValues;
- (id)defaultHandlesArray;
- (void)fillInEmptyObjects;

@end

@interface MSArtisticStrokeHandle : _MSArtisticStrokeHandle
{
}

+ (id)strokeHandleAtPosition:(double)arg1 strength:(double)arg2;
- (BOOL)isDummy;
- (id)description;
- (long long)compare:(id)arg1;
- (double)valueForSide:(long long)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;

@end

@interface MSBackgroundBlurRenderer : NSObject
{
    MSRenderingContext *_context;	// 8 = 0x8
    MSShapeGroup *_layer;	// 16 = 0x10
    BCBezierPath *_path;	// 24 = 0x18
}

+ (void)blurBackgroundBehindLayer:(id)arg1 path:(id)arg2 context:(id)arg3;
@property(retain, nonatomic) BCBezierPath *path; // @synthesize path=_path;
@property(retain, nonatomic) MSShapeGroup *layer; // @synthesize layer=_layer;
@property(retain, nonatomic) MSRenderingContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (id)blur;
- (id)clampImage:(id)arg1;
- (void)renderCanvasImageInRect:(struct CGRect)arg1;
- (id)canvasImageWithContext:(id)arg1;
- (struct CGRect)absoluteRectForLayer:(id)arg1 context:(id)arg2;
- (void)clearBackgroundBehindBlur;
- (void)blurBackgroundWithContext:(id)arg1;

@end

@interface MSBackgroundBlurRendererDelegate : NSObject <DKContextDelegate>
{
    BOOL _stopDrawing;	// 8 = 0x8
    double _zoomValue;	// 16 = 0x10
    MSLayer *_untilLayer;	// 24 = 0x18
}

+ (id)rendererWithZoomValue:(double)arg1 untilLayer:(id)arg2;
@property(nonatomic) BOOL stopDrawing; // @synthesize stopDrawing=_stopDrawing;
@property(retain, nonatomic) MSLayer *untilLayer; // @synthesize untilLayer=_untilLayer;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
- (void).cxx_destruct;
- (BOOL)rendererNeedsToDrawRect:(struct CGRect)arg1;
- (BOOL)rendererShouldInterruptRendering;
- (BOOL)rendererShouldSkipDrawingLayer:(id)arg1;
- (BOOL)rendererShouldForceDrawingLayer:(id)arg1;

@end

@interface MSBaseAction : NSResponder <NSMenuDelegate>
{
    MSDocument *_document;	// 16 = 0x10
    MSActionsController *_controller;	// 24 = 0x18
    id <MSBasicDelegate> _delegate;	// 32 = 0x20
    MSActionValidation *_actionValidation;	// 40 = 0x28
}

+ (id)actionForDocument:(id)arg1;
@property(retain, nonatomic) MSActionValidation *actionValidation; // @synthesize actionValidation=_actionValidation;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak MSActionsController *controller; // @synthesize controller=_controller;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (id)validation;
- (BOOL)isActive;
- (BOOL)showInToolbar;
- (id)image;
- (id)smallImage;
- (BOOL)hasSubMenu;
- (id)children;
- (BOOL)containsActionWithName:(id)arg1;
- (BOOL)validate;
- (BOOL)validateItem:(id)arg1;
- (id)tooltip;
- (unsigned short)shortcutCharacter;
- (id)label;
- (id)imageName;
- (id)identifier;
- (void)performAction:(id)arg1;
- (SEL)selector;
- (BOOL)dynamicTitle;
- (BOOL)isSelectable;
- (id)undoManager;
- (void)refreshViewsWithMask:(unsigned long long)arg1;
- (id)contentDrawView;
- (id)currentPage;
- (id)setCurrentHandlerKey:(id)arg1;
- (id)toggleHandlerKey:(id)arg1;
- (id)currentHandler;
- (id)currentHandlerKey;
- (id)selectedLayers;
- (id)initWithDocument:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)dynamicallyChangeTitleForItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)menu;
- (id)menuItem;
- (id)menuItemForMenu:(id)arg1;
- (id)toolbarLabel;
- (id)toolbarItemWithSize:(unsigned long long)arg1;
- (id)imageForToolbarSize:(unsigned long long)arg1;
- (BOOL)validateToolbarItem:(id)arg1;

@end

@interface MSBaseAlignAction : MSBaseAction
{
}

- (BOOL)validate;

@end

@interface MSBaseBooleanAction : MSBaseAction
{
}

- (id)tooltip;
- (void)resetSubPathsBooleanOperationsTo:(long long)arg1;
- (void)fixTransformForSelectedLayers;
- (void)booleanOperation:(long long)arg1;
- (id)validation;
- (BOOL)hasShapePartsSelected;
- (BOOL)validate;

@end

@interface MSBaseFlipAction : MSBaseAction
{
}

- (id)validation;
- (BOOL)validate;

@end

@interface MSBaseGrid : _MSBaseGrid
{
}

+ (void)initialize;
- (id)horizontalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (id)verticalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (void)drawInRect:(struct CGRect)arg1 baseLine:(struct CGPoint)arg2 atZoom:(double)arg3;
- (BOOL)shouldDraw;
- (void)setIsEnabled:(BOOL)arg1;

@end

@interface MSBaseLayerRenderer : NSObject
{
}

+ (void)drawCachedImage:(id)arg1 layer:(id)arg2 context:(id)arg3;
+ (void)doDrawLayer:(id)arg1 context:(id)arg2;
+ (void)didDrawLayer:(id)arg1 context:(id)arg2;
+ (void)willDrawLayer:(id)arg1 context:(id)arg2;
+ (BOOL)shouldDrawLayer:(id)arg1 context:(id)arg2;
+ (void)_drawLayer:(id)arg1 context:(id)arg2;
+ (Class)rendererForLayer:(id)arg1;
+ (void)drawLayer:(id)arg1 context:(id)arg2;
+ (void)forceRendering:(CDUnknownBlockType)arg1;

@end

@interface MSBaseMoveAction : MSBaseAction
{
}

- (id)tooltip;
- (id)validation;
- (BOOL)validate;

@end

@interface MSBaseMoveBackwardAction : MSBaseMoveAction
{
}

- (BOOL)validate;

@end

@interface MSBaseMoveForwardAction : MSBaseMoveAction
{
}

- (BOOL)validate;

@end

@interface MSBaseRenderTile : CALayer
{
}

- (BOOL)layer:(id)arg1 shouldInheritContentsScale:(double)arg2 fromWindow:(id)arg3;
- (id)init;

@end

@interface MSBaseRenderer : NSObject
{
}

- (void)render;

@end

@interface MSBaseShapeAction : MSBaseAction
{
}

+ (id)insertShapeLayer:(id)arg1 identifier:(id)arg2 document:(id)arg3;
- (id)label;
- (id)insertShape;
- (id)shapeForInsertion;
- (void)performAction:(id)arg1;
- (id)tooltip;
- (BOOL)isSelectable;
- (id)recipeName;

@end

@interface MSBaseView : NSView
{
    id <MSBaseViewDelegate> delegate;	// 152 = 0x98
    MSEventHandlerManager *eventHandlerManager;	// 160 = 0xa0
}

@property(retain, nonatomic) MSEventHandlerManager *eventHandlerManager; // @synthesize eventHandlerManager;
@property(nonatomic) __weak id delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)setViewPort:(id)arg1;
- (id)viewPort;
- (void)setOutletsToNil;
- (void)didUndoNotification:(id)arg1;
- (void)willUndoNotification:(id)arg1;
- (void)userDefaultsDidChange:(id)arg1;
@property(nonatomic) struct CGPoint scrollOrigin; // @dynamic scrollOrigin;
@property(nonatomic) double zoomValue; // @dynamic zoomValue;
- (BOOL)isFlipped;
- (void)initialize;
- (void)dealloc;
- (void)removeFromSuperview;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MSBezierBuilder : NSObject
{
    struct CGRect rect;	// 8 = 0x8
    NSArray *points;	// 40 = 0x28
    BOOL pathShouldClose;	// 48 = 0x30
}

+ (id)bezierPathFromPoint:(id)arg1 toPoint:(id)arg2 inRect:(struct CGRect)arg3;
+ (id)bezierPathWithPoints:(id)arg1 inRect:(struct CGRect)arg2 shouldClose:(BOOL)arg3;
+ (void)setCornerRadiusScale:(double)arg1;
@property(nonatomic) BOOL pathShouldClose; // @synthesize pathShouldClose;
@property(retain, nonatomic) NSArray *points; // @synthesize points;
@property(nonatomic) struct CGRect rect; // @synthesize rect;
- (void).cxx_destruct;
- (void)extendPath:(id)arg1 toPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
- (void)appendCurveFromPoint:(id)arg1 toPoint:(id)arg2 toBezierPath:(id)arg3;
- (id)bezierPathFromCurvePoint:(id)arg1 toPoint:(id)arg2;
- (id)_bezierPath;
- (id)bezierPath;
- (BOOL)isStraightLine;

@end

@interface MSBezierInterpreter : NSObject
{
    NSBezierPath *bezierPath;	// 8 = 0x8
    struct CGRect rect;	// 16 = 0x10
    BOOL pathIsClosed;	// 48 = 0x30
}

+ (id)pointsFromBezierPath:(id)arg1 inRect:(struct CGRect)arg2;
@property(nonatomic) BOOL pathIsClosed; // @synthesize pathIsClosed;
@property(nonatomic) struct CGRect rect; // @synthesize rect;
@property(retain, nonatomic) NSBezierPath *bezierPath; // @synthesize bezierPath;
- (void).cxx_destruct;
- (id)points;

@end

@interface MSBezierPathFactory : NSObject
{
}

+ (id)bezierPathWithRect:(struct CGRect)arg1;
+ (void)initialize;

@end

@interface MSBezierRounding : NSObject
{
}

+ (id)roundBezierPath:(id)arg1;

@end

@interface MSBitmapBackedRendering : NSObject
{
}

+ (void)renderLayer:(id)arg1 inRect:(struct CGRect)arg2 baseContext:(id)arg3;
+ (id)basicImageForLayer:(id)arg1 context:(id)arg2;
+ (id)CIContextWithContextRef:(struct CGContext *)arg1 colorSpace:(id)arg2;
+ (id)renderEffectsFromLayer:(id)arg1 context:(id)arg2;
+ (id)imageToCacheForLayer:(id)arg1 context:(id)arg2;

@end

@interface MSBitmapEditEventHandler : MSEventHandler <MSModeModePickerDelegate, BCPopoverDelegate, MSColorInspectorDelegate>
{
    long long _currentMode;	// 128 = 0x80
    NSBezierPath *_accumulatedSelection;	// 136 = 0x88
    MSModePickerView *_pickerView;	// 144 = 0x90
    NSButton *_rectSelectionButton;	// 152 = 0x98
    NSButton *_magicWandButton;	// 160 = 0xa0
    NSColorSpace *_colorSpace;	// 168 = 0xa8
    MSBitmapRectangleEditor *_rectangleEditor;	// 176 = 0xb0
    MSBitmapMagicWandEditor *_magicWandEditor;	// 184 = 0xb8
    BCPopover *_popover;	// 192 = 0xc0
    NSBitmapImageRep *_backupImageRep;	// 200 = 0xc8
    NSCursor *_currentCursor;	// 208 = 0xd0
}

@property(retain, nonatomic) NSCursor *currentCursor; // @synthesize currentCursor=_currentCursor;
@property(retain, nonatomic) NSBitmapImageRep *backupImageRep; // @synthesize backupImageRep=_backupImageRep;
@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) MSBitmapMagicWandEditor *magicWandEditor; // @synthesize magicWandEditor=_magicWandEditor;
@property(retain, nonatomic) MSBitmapRectangleEditor *rectangleEditor; // @synthesize rectangleEditor=_rectangleEditor;
@property(retain, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(retain, nonatomic) NSButton *magicWandButton; // @synthesize magicWandButton=_magicWandButton;
@property(retain, nonatomic) NSButton *rectSelectionButton; // @synthesize rectSelectionButton=_rectSelectionButton;
@property(retain, nonatomic) MSModePickerView *pickerView; // @synthesize pickerView=_pickerView;
@property(retain, nonatomic) NSBezierPath *accumulatedSelection; // @synthesize accumulatedSelection=_accumulatedSelection;
@property(nonatomic) long long currentMode; // @synthesize currentMode=_currentMode;
- (void).cxx_destruct;
- (BOOL)shouldHideExportBar;
- (id)crossHairCursorRemove;
- (id)crossHairCursorAdd;
- (id)crossHairCursor;
- (id)magicWandCursorRemove;
- (id)magicWandCursorAdd;
- (id)magicWandCursor;
- (BOOL)inspectorShouldShowLayerSpecificProperties;
- (unsigned long long)inspectorLocation;
- (id)nibName;
- (struct CGPoint)centerPointForZooming;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (void)markImageAsEdited;
- (id)bitmapLayer;
- (id)coordinateTransformMatrix;
- (void)drawInRect:(struct CGRect)arg1;
- (BOOL)shouldDrawLayerSelection;
- (id)selectionBezierForFlippingCoordinates;
- (struct CGRect)imageBounds;
- (struct CGSize)imageSize;
- (void)fillSelectionWithColor:(id)arg1 blending:(unsigned long long)arg2;
- (void)fillSelectionWithColor:(id)arg1;
- (id)imageFromSelectedArea;
- (void)duplicate:(id)arg1;
- (void)paste:(id)arg1;
- (struct CGRect)rectFromBitmapToLayerCoordinates:(struct CGRect)arg1;
- (id)bitmapLayerFromSelectedArea;
- (void)copy:(id)arg1;
- (BOOL)rectHasBeenCropped:(struct CGRect)arg1 fromImage:(id)arg2;
- (void)cropLayerFrame;
- (void)clearAreaUnderSelection;
- (void)cut:(id)arg1;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)selectLayerBelowPoint:(struct CGPoint)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (void)flagsChanged:(id)arg1;
- (BOOL)mouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)finishEditing:(id)arg1;
- (void)vectorizeAction:(id)arg1;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)popoverWillClose:(id)arg1;
- (void)colorMagnifierAction:(id)arg1;
- (void)colorizeAction:(id)arg1;
- (void)makeNewBackupImage;
- (void)cropAction:(id)arg1;
- (void)setImage:(id)arg1 forBitmapLayer:(id)arg2;
- (void)invertAction:(id)arg1;
- (void)magicWandAction:(id)arg1;
- (void)rectSelectionAction:(id)arg1;
- (void)pickerViewChanged:(id)arg1;
- (id)pickerView:(id)arg1 labelForMode:(long long)arg2;
- (void)handlerWillLoseFocus;
- (id)toolbarIdentifier;
- (void)validateButtons;
- (void)awakeFromNib;
- (void)handlerGotFocus;

@end

@interface MSBitmapEditor : NSObject
{
    MSBitmapEditEventHandler *_eventHandler;	// 8 = 0x8
}

@property(nonatomic) __weak MSBitmapEditEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
- (void).cxx_destruct;
- (struct CGRect)imageBounds;
- (struct CGSize)imageSize;
- (double)zoomValue;
- (void)drawMarchingAntsForPath:(id)arg1;
- (struct CGPoint)pointInBitmapLayer:(struct CGPoint)arg1;
- (struct CGRect)rectFromBitmapToLayerCoordinates:(struct CGRect)arg1;
- (void)refreshRectInBitmapCoordinates:(struct CGRect)arg1;
@property(retain, nonatomic) NSBezierPath *accumulatedSelection; // @dynamic accumulatedSelection;
@property(readonly, nonatomic) MSBitmapLayer *bitmapLayer; // @dynamic bitmapLayer;
- (void)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseDragged:(struct CGPoint)arg1;
- (void)mouseDown:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)draw;

@end

@interface MSBitmapEventHandler : MSPointsEventHandler
{
    MSPointArray *points;	// 160 = 0xa0
}

@property(retain, nonatomic) MSPointArray *points; // @synthesize points;
- (void).cxx_destruct;
- (BOOL)shouldDrawLayerSelection;
- (id)imageName;
- (void)drawDotAtPoint:(struct CGPoint)arg1 index:(long long)arg2 selected:(BOOL)arg3;
- (void)drawHandleLines;
- (BOOL)useSnaps;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (struct CGRect)clippingMask;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;

@end

@interface MSBitmapLayer : _MSBitmapLayer
{
    BOOL _lightweightTreatAsAlpha;	// 56 = 0x38
}

@property(nonatomic) BOOL lightweightTreatAsAlpha; // @synthesize lightweightTreatAsAlpha=_lightweightTreatAsAlpha;
- (BOOL)treatAsAlpha;
- (void)reduceImageSize;
- (struct CGSize)minimumSize;
- (id)handlerName;
- (void)prepareObjectCopy:(id)arg1;
- (id)defaultName;
- (void)encodeWithCoder:(id)arg1;
- (void)initEmptyObject;
- (void)setRawImage:(id)arg1 name:(id)arg2 convertColourspace:(BOOL)arg3 collection:(id)arg4;
- (void)fillInEmptyObjects;
- (void)initObjectWithCoder:(id)arg1;
- (id)initWithImage:(id)arg1 parentFrame:(id)arg2 name:(id)arg3;
- (void)drawPreviewInRect:(struct CGRect)arg1 honourSelected:(BOOL)arg2;
- (void)migratePropertiesFromV32OrEarlierWithCoder:(id)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (Class)rendererClass;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;

@end

@interface MSBitmapLayerRenderer : MSBaseLayerRenderer
{
}

+ (void)doDrawLayer:(id)arg1 context:(id)arg2;

@end

@interface MSBitmapLayerSection : MSLayerSection
{
}

@end

@interface MSBitmapMagicWandEditor : MSBitmapEditor
{
    BOOL _didDrag;	// 8 = 0x8
    NSBitmapImageRep *_mask;	// 16 = 0x10
    NSBitmapImageRep *_cachedBitSafeRep;	// 24 = 0x18
    NSOperationQueue *_queue;	// 32 = 0x20
    struct CGPoint _mouseDownPoint;	// 40 = 0x28
    struct CGPoint _mouseEndPoint;	// 56 = 0x38
}

@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) BOOL didDrag; // @synthesize didDrag=_didDrag;
@property(retain, nonatomic) NSBitmapImageRep *cachedBitSafeRep; // @synthesize cachedBitSafeRep=_cachedBitSafeRep;
@property(retain, nonatomic) NSBitmapImageRep *mask; // @synthesize mask=_mask;
@property(nonatomic) struct CGPoint mouseEndPoint; // @synthesize mouseEndPoint=_mouseEndPoint;
@property(nonatomic) struct CGPoint mouseDownPoint; // @synthesize mouseDownPoint=_mouseDownPoint;
- (void).cxx_destruct;
- (BOOL)isValidRect:(struct CGRect)arg1;
- (void)drawOvals;
- (void)drawMask;
- (void)draw;
- (void)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (double)tolerance;
- (void)magicWandWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)mouseDragged:(struct CGPoint)arg1;
- (void)mouseDown:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)init;

@end

@interface MSBitmapRectangleEditor : MSBitmapEditor
{
    BOOL _didDrag;	// 8 = 0x8
    long long _dragMode;	// 16 = 0x10
    NSBezierPath *_selectionBeforeDrag;	// 24 = 0x18
    struct CGPoint _mouseDownPoint;	// 32 = 0x20
    struct CGPoint _mouseEndPoint;	// 48 = 0x30
}

@property(retain, nonatomic) NSBezierPath *selectionBeforeDrag; // @synthesize selectionBeforeDrag=_selectionBeforeDrag;
@property(nonatomic) struct CGPoint mouseEndPoint; // @synthesize mouseEndPoint=_mouseEndPoint;
@property(nonatomic) struct CGPoint mouseDownPoint; // @synthesize mouseDownPoint=_mouseDownPoint;
@property(nonatomic) BOOL didDrag; // @synthesize didDrag=_didDrag;
@property(nonatomic) long long dragMode; // @synthesize dragMode=_dragMode;
- (void).cxx_destruct;
- (struct CGRect)rectFromDraggingPoints;
- (void)draw;
- (void)resetDraggingPoints;
- (void)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseDragged:(struct CGPoint)arg1;
- (void)mouseDown:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)init;

@end

@interface MSBlockAnimation : CABasicAnimation
{
    BOOL executed;	// 20 = 0x14
    CDUnknownBlockType block;	// 24 = 0x18
}

- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface MSBlueButtonCell : NSButtonCell
{
}

- (id)colorForTitle;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSBlurInspectorViewController : MSStylePartInspectorViewController <NSMenuDelegate>
{
    NSView *gaussianBlurView;	// 112 = 0x70
    NSView *motionBlurView;	// 120 = 0x78
    NSView *zoomBlurView;	// 128 = 0x80
    NSButton *editButton;	// 136 = 0x88
    NSMenuItem *backgroundBlurMenuItem;	// 144 = 0x90
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)handlerFocusDidChange:(id)arg1;
- (void)blurPopUpAction:(id)arg1;
- (void)editZoomCenter:(id)arg1;
- (id)layers;
- (void)menuNeedsUpdate:(id)arg1;
- (id)views;
- (void)reloadInspectorStack:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSBlurPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)correctedTitle:(id)arg1;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSBooleanMenuAction : MSBaseAction
{
}

- (id)imageName;
- (id)label;
- (id)tooltip;
- (id)children;

@end

@interface MSBorderInspectorViewController : MSStylePartInspectorViewController
{
    NSPopUpButton *positionPopUp;	// 112 = 0x70
    MSColorPreviewButton *colorButton;	// 120 = 0x78
    MSUpDownTextField *_thicknessField;	// 128 = 0x80
}

@property(retain, nonatomic) MSUpDownTextField *thicknessField; // @synthesize thicknessField=_thicknessField;
- (void).cxx_destruct;
- (id)lineShapes;
- (void)borderThicknessChanged:(id)arg1;
- (void)enableAction:(id)arg1;
- (id)layers;
- (BOOL)canDrawInnerOrOuterBorders;
- (id)positionPopUpToolTip;
- (void)setStyleParts:(id)arg1;
- (void)prepare;
- (id)init;

@end

@interface MSBorderOptionsInspectorViewController : MSStylePartInspectorViewController <BCPopoverContentController>
{
    NSPopUpButton *startDecorationButton;	// 112 = 0x70
    NSPopUpButton *endDecorationButton;	// 120 = 0x78
    NSTextField *dashField1;	// 128 = 0x80
    NSTextField *dashField2;	// 136 = 0x88
    NSTextField *dashField3;	// 144 = 0x90
    NSTextField *dashField4;	// 152 = 0x98
    NSArray *_layers;	// 160 = 0xa0
    NSSegmentedControl *_capSegmentedControl;	// 168 = 0xa8
    NSSegmentedControl *_joinSegmentedControl;	// 176 = 0xb0
}

@property(retain, nonatomic) NSSegmentedControl *joinSegmentedControl; // @synthesize joinSegmentedControl=_joinSegmentedControl;
@property(retain, nonatomic) NSSegmentedControl *capSegmentedControl; // @synthesize capSegmentedControl=_capSegmentedControl;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (id)decorationForArrowType:(unsigned long long)arg1;
- (void)fillDashPlaceholderFields;
- (void)fillDashFields;
- (void)dashPatternAction:(id)arg1;
- (void)joinAction:(id)arg1;
- (void)capAction:(id)arg1;
- (void)evaluateCapJoinButtons;
- (void)prepareDecorationButtons;
- (void)endDecorationAction:(id)arg1;
- (void)startDecorationAction:(id)arg1;
- (void)flipDecoration:(id)arg1;
- (void)removeDecorationForLayer:(id)arg1 atPosition:(long long)arg2;
- (void)reloadData;

@end

@interface MSBorderStyleCollection : MSStylePartCollection
{
}

- (id)stylePartForInserting;

@end

@interface MSBottomGradientView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSCanvasActions : MSBaseAction
{
}

- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)centerLayersInCanvas:(id)arg1;
- (void)actualSize:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)zoomToSelection:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)delete:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)pasteHere:(id)arg1;
- (void)pasteInPlace:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;

@end

@interface MSCenteredPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)correctedTitle:(id)arg1;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSClippingMaskAction : MSBaseAction
{
}

- (void)performAction:(id)arg1;
- (void)clippingMask:(id)arg1;
- (BOOL)validate;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface MSClippingMaskModeAction : MSBaseAction
{
}

- (void)performAction:(id)arg1;
- (void)clippingMaskMode:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validate;

@end

@interface MSCollectionView : NSCollectionView
{
}

- (void)drawColumns;
- (void)drawRows;
- (void)drawRect:(struct CGRect)arg1;
- (id)newItemForRepresentedObject:(id)arg1;

@end

@interface MSColor : _MSColor
{
}

+ (void)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 fromHexValue:(id)arg4;
+ (id)colorWithHex:(id)arg1 alpha:(double)arg2;
+ (id)hexValueForRed:(double)arg1 green:(double)arg2 blue:(double)arg3;
+ (id)exportingColorSpace;
+ (id)screenColorSpace;
+ (id)colorWithNSColor:(id)arg1;
+ (id)safeNSColor:(id)arg1;
+ (id)colorWithLegacyNSColor:(id)arg1;
+ (id)availableRGBColorSpaces;
+ (id)colorWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
+ (id)blackColor;
+ (id)whiteColor;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (void)setForcedColorSpace:(id)arg1;
+ (id)colorWithRGBADictionary:(id)arg1;
+ (id)colorFromSVGColor:(id)arg1;
+ (id)colorWithSVGString:(id)arg1;
- (id)treeAsDictionary;
- (BOOL)isBlack;
- (BOOL)isWhite;
- (BOOL)fuzzyIsEqual:(id)arg1;
- (id)stringValueWithAlpha:(BOOL)arg1 alphaMultiplication:(double)arg2;
- (id)stringValueWithAlpha:(BOOL)arg1;
- (id)hexValue;
@property(readonly, nonatomic) double brightness; // @dynamic brightness;
@property(readonly, nonatomic) double saturation; // @dynamic saturation;
@property(readonly, nonatomic) double hue; // @dynamic hue;
- (id)HSBColor;
- (id)description;
- (void)setNSColor:(id)arg1;
- (id)NSColorWithColorSpace:(id)arg1;
- (id)replacementObjectForCoder:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)RGBADictionary;
- (id)NSColorForContext:(id)arg1;
- (id)svgRepresentation;

@end

@interface MSColorArchivingFactory : NSObject
{
}

+ (id)colorForEncodingColor:(id)arg1;

@end

@interface MSColorControlsInspectorViewController : MSStylePartInspectorViewController
{
}

@end

@interface MSColorFactory : MSFactory
{
}

+ (id)filename;
- (void)addColor:(id)arg1;
- (void)setColors:(id)arg1;
- (id)colors;

@end

@interface MSColorInspector : NSViewController <MSColorInspectorSectionDelegate, MSModeModePickerDelegate, BCPopoverContentController>
{
    BCHSBColorPicker *colorPicker;	// 104 = 0x68
    NSView *emptyTopView;	// 112 = 0x70
    NSView *colorPickerView;	// 120 = 0x78
    BCColorListView *colorListView;	// 128 = 0x80
    NSView *shadowBlendingView;	// 136 = 0x88
    NSView *borderBlendingOpacityView;	// 144 = 0x90
    NSArray *_styleParts;	// 152 = 0x98
    id <MSColorInspectorDelegate> _delegate;	// 160 = 0xa0
    BCPopover *_popover;	// 168 = 0xa8
    MSModePickerView *_borderColorTypePicker;	// 176 = 0xb0
    MSModePickerView *_fillColorTypePicker;	// 184 = 0xb8
    MSColorInspectorSectionColor *_colorSection;	// 192 = 0xc0
    MSColorInspectorSectionGradient *_gradientSection;	// 200 = 0xc8
    MSColorInspectorSectionPattern *_patternSection;	// 208 = 0xd0
    MSColorInspectorSectionNoise *_noiseSection;	// 216 = 0xd8
    MSEventHandlerManager *_handlerManager;	// 224 = 0xe0
}

@property(retain, nonatomic) MSEventHandlerManager *handlerManager; // @synthesize handlerManager=_handlerManager;
@property(retain, nonatomic) MSColorInspectorSectionNoise *noiseSection; // @synthesize noiseSection=_noiseSection;
@property(retain, nonatomic) MSColorInspectorSectionPattern *patternSection; // @synthesize patternSection=_patternSection;
@property(retain, nonatomic) MSColorInspectorSectionGradient *gradientSection; // @synthesize gradientSection=_gradientSection;
@property(retain, nonatomic) MSColorInspectorSectionColor *colorSection; // @synthesize colorSection=_colorSection;
@property(nonatomic) __weak MSModePickerView *fillColorTypePicker; // @synthesize fillColorTypePicker=_fillColorTypePicker;
@property(nonatomic) __weak MSModePickerView *borderColorTypePicker; // @synthesize borderColorTypePicker=_borderColorTypePicker;
@property(nonatomic) __weak BCPopover *popover; // @synthesize popover=_popover;
@property(nonatomic) __weak id <MSColorInspectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *styleParts; // @synthesize styleParts=_styleParts;
- (void).cxx_destruct;
- (void)setActionsToNil;
- (void)colorMagnifierAction:(id)arg1;
- (void)pickerViewChanged:(id)arg1;
- (void)notifyCurrentViewOfFocus;
- (id)pickerView:(id)arg1 labelForMode:(long long)arg2;
- (id)filteredStyleParts:(id)arg1;
- (void)close:(id)arg1;
- (void)refreshAction:(id)arg1;
- (void)colorChangedTo:(id)arg1;
- (void)colorPickerAction:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)popoverWillClose;
- (void)setMaximumAvailableHeight:(long long)arg1;
- (void)validateEnableButtons;
- (id)viewControllers;
- (id)currentSection;
- (long long)initialColorTypePickerMode;
- (void)fixFirstResponder;
- (BOOL)shouldHideTopTabBar;
- (void)stack;
- (BOOL)stylePartIsGradient:(id)arg1;
- (void)findCommonColors;
- (void)prepareForDisplay;
- (void)setInitialColor:(id)arg1;
- (void)applyBackgroundArrowColor;
- (void)awakeFromNib;
- (id)nibName;
- (void)dealloc;
- (id)currentModePicker;
- (void)colorDidChangeTo:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)initWithSender:(id)arg1 handlerManager:(id)arg2;

@end

@interface MSColorInspectorSection : CHViewController <MSPresetPickerViewDelegate>
{
    id <MSColorInspectorSectionDelegate> _delegate;	// 104 = 0x68
    NSArray *_styleParts;	// 112 = 0x70
    MSPresetPickerView *_presetPicker;	// 120 = 0x78
    NSScrollView *_presetPickerScrollView;	// 128 = 0x80
    MSEventHandlerManager *_handlerManager;	// 136 = 0x88
}

@property(retain, nonatomic) MSEventHandlerManager *handlerManager; // @synthesize handlerManager=_handlerManager;
@property(retain, nonatomic) NSScrollView *presetPickerScrollView; // @synthesize presetPickerScrollView=_presetPickerScrollView;
@property(retain, nonatomic) MSPresetPickerView *presetPicker; // @synthesize presetPicker=_presetPicker;
@property(copy, nonatomic) NSArray *styleParts; // @synthesize styleParts=_styleParts;
@property(nonatomic) __weak id <MSColorInspectorSectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)shouldShowAddPresetButton:(id)arg1;
- (id)viewsWithColorPickerView:(id)arg1;
- (id)factory;
- (void)refreshAction:(id)arg1;
- (void)dealloc;
- (BOOL)pickerView:(id)arg1 didDragPresetAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)pickerView:(id)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)pickerView:(id)arg1 removePresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(id)arg1;
- (void)drawContentForCellInPickerView:(id)arg1 atIndex:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (unsigned long long)numberOfPresetsInPickerView:(id)arg1;
- (void)sectionGotFocus;
- (void)colorPanelDidChangeColorTo:(id)arg1;
- (void)colorPickerChangedTo:(id)arg1;
- (void)popoverWillClose;
- (void)validate;
- (BOOL)isEnabled;
- (long long)fillType;
- (void)reloadPresetPicker;
- (id)init;

@end

@interface MSColorInspectorSectionColor : MSColorInspectorSection
{
    MSColor *_pickedColor;	// 104 = 0x68
    MSColorFactory *_factory;	// 112 = 0x70
}

@property(retain, nonatomic) MSColorFactory *factory; // @synthesize factory=_factory;
@property(retain, nonatomic) MSColor *pickedColor; // @synthesize pickedColor=_pickedColor;
- (void).cxx_destruct;
- (void)dealloc;
- (void)pickerView:(id)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(id)arg1;
- (void)drawContentForCellInPickerView:(id)arg1 atIndex:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (void)colorPickerChangedTo:(id)arg1;
- (BOOL)hasAdvancedSettingsNib;
- (long long)fillType;
- (void)validate;
- (void)setStyleParts:(id)arg1;
- (void)highlightCurrentColor;
- (void)reloadPresetPicker;
- (id)viewsWithColorPickerView:(id)arg1;
- (id)init;

@end

@interface MSColorInspectorSectionGradient : MSColorInspectorSection <MSGradientEventHandlerDelegate, MSGradientBarViewDelegate>
{
    NSPopUpButton *gradientTypeButton;	// 104 = 0x68
    NSButton *smoothOpacityButton;	// 112 = 0x70
    MSGradientBarView *gradientBarView;	// 120 = 0x78
    MSGradientEventHandler *gradientHandler;	// 128 = 0x80
    NSButton *_rotateLeftButton;	// 136 = 0x88
    NSButton *_rotateRightButton;	// 144 = 0x90
    MSGradientFactory *_factory;	// 152 = 0x98
}

@property(retain, nonatomic) MSGradientFactory *factory; // @synthesize factory=_factory;
@property(retain, nonatomic) NSButton *rotateRightButton; // @synthesize rotateRightButton=_rotateRightButton;
@property(retain, nonatomic) NSButton *rotateLeftButton; // @synthesize rotateLeftButton=_rotateLeftButton;
@property(retain, nonatomic) MSGradientEventHandler *gradientHandler; // @synthesize gradientHandler;
- (void).cxx_destruct;
- (void)dealloc;
- (void)closeGradientHandler;
- (void)popoverWillClose;
- (id)gradients;
- (id)rotateTransformForGradient:(id)arg1 angle:(double)arg2;
- (void)rotateGradientsByAngle:(double)arg1;
- (void)rotateRightAction:(id)arg1;
- (void)rotateLeftAction:(id)arg1;
- (void)refreshAction:(id)arg1;
- (void)drawGradient:(id)arg1 inRect:(struct CGRect)arg2;
- (void)updateOtherGradientsToReflectChanges;
- (void)gradientHandlerDidChangeGradient:(id)arg1;
- (void)gradientHandlerWillLoseFocus:(id)arg1;
- (void)gradientHandlerDidChangeCurrentPoint:(id)arg1;
- (void)colorPickerChangedTo:(id)arg1;
- (void)switchToGradientHandler;
- (void)pickerView:(id)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)pickerView:(id)arg1 removePresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(id)arg1;
- (void)drawContentForCellInPickerView:(id)arg1 atIndex:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (void)gradientBarAction:(id)arg1;
- (long long)fillType;
- (void)switchToGradientHandlerIfNecessary;
- (void)validate;
- (id)viewsWithColorPickerView:(id)arg1;
- (void)gradientBarChanged:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSColorInspectorSectionNoise : MSColorInspectorSection
{
}

- (void)refreshAction:(id)arg1;
- (id)viewsWithColorPickerView:(id)arg1;

@end

@interface MSColorInspectorSectionPattern : MSColorInspectorSection
{
    NSImageView *patternWell;	// 104 = 0x68
    NSButton *choosePatternButton;	// 112 = 0x70
    NSPopUpButton *patternTilButton;	// 120 = 0x78
}

- (void).cxx_destruct;
- (void)updatePatternWellImage;
- (id)factory;
- (BOOL)pickerViewSupportsDragDrop:(id)arg1;
- (void)pickerView:(id)arg1 didPickPresetAtIndex:(unsigned long long)arg2;
- (void)pickerView:(id)arg1 removePresetAtIndex:(unsigned long long)arg2;
- (void)addPresetForPickerView:(id)arg1;
- (void)drawContentForCellInPickerView:(id)arg1 atIndex:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (void)patternWellAction:(id)arg1;
- (void)choosePatternImage:(id)arg1;
- (void)validate;
- (long long)fillType;
- (void)enableSectionButtonAction:(id)arg1;
- (id)viewsWithColorPickerView:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSColorModePickerCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSColorPickerBackgroundView : NSView
{
}

- (id)subViewsForResponderFixer;

@end

@interface MSColorPreviewButton : NSButton
{
    MSStyleBasicFill *_basicFill;	// 176 = 0xb0
    NSColor *_color;	// 184 = 0xb8
    id _dragOwner;	// 192 = 0xc0
    struct CGRect _colorFrame;	// 200 = 0xc8
}

@property(nonatomic) __weak id dragOwner; // @synthesize dragOwner=_dragOwner;
@property(nonatomic) struct CGRect colorFrame; // @synthesize colorFrame=_colorFrame;
@property(copy, nonatomic) NSColor *color; // @synthesize color=_color;
@property(retain, nonatomic) MSStyleBasicFill *basicFill; // @synthesize basicFill=_basicFill;
- (void).cxx_destruct;
- (void)dealloc;
- (void)drawNoiseFillInRect:(struct CGRect)arg1;
- (void)drawPatternFillInRect:(struct CGRect)arg1;
- (void)drawGradientFillInRect:(struct CGRect)arg1;
- (void)drawColorFillInRect:(struct CGRect)arg1;
- (void)drawBasicFilInRect:(struct CGRect)arg1;
- (void)drawBasicFillInRect:(struct CGRect)arg1;
- (id)fillColor;
- (id)innerBorderColor;
- (id)borderColor;
- (BOOL)fillIsPattern;
- (BOOL)isFlipped;
- (void)drawButton;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface MSCommand : NSObject
{
}

+ (id)runWithArguments:(CDUnknownBlockType)arg1;
- (id)run;

@end

@interface MSContentDrawView : MSBaseView <MSBasicDelegate, MSTileRemoveCollector>
{
    NSEvent *lastEvent;	// 168 = 0xa8
    struct CGPoint mouseBeforePinch;	// 176 = 0xb0
    BOOL handToolIsActive;	// 192 = 0xc0
    struct CGPoint handToolOriginalPoint;	// 200 = 0xc8
    struct CGPoint handToolOriginalScrollOrigin;	// 216 = 0xd8
    BOOL zoomToolIsActive;	// 232 = 0xe8
    BOOL zoomToolActivatedByKey;	// 233 = 0xe9
    struct CGPoint zoomToolStartPoint;	// 240 = 0xf0
    struct CGPoint zoomToolEndPoint;	// 256 = 0x100
    MSRulerView *horizontalRuler;	// 272 = 0x110
    MSRulerView *verticalRuler;	// 280 = 0x118
    BOOL didMouseDown;	// 288 = 0x120
    BOOL hasDraggedOutsideInitialPadding;	// 289 = 0x121
    struct CGPoint mouseDownPoint;	// 296 = 0x128
    BOOL _userDidMagnify;	// 312 = 0x138
    BOOL _shouldHideOverlayControls;	// 313 = 0x139
    BOOL _lastActualZoomScrollOriginSaved;	// 314 = 0x13a
    MSDocument *_document;	// 320 = 0x140
    CALayer *_masterTileLayer;	// 328 = 0x148
    MSTilePlacer *_layerTiler;	// 336 = 0x150
    long long _animatingZoomCounter;	// 344 = 0x158
    double _zoomDeltaDuringPinch;	// 352 = 0x160
    double _zoomValueAfterAnimating;	// 360 = 0x168
    NSTimer *_refreshTimer;	// 368 = 0x170
    double _refreshDelay;	// 376 = 0x178
    NSMutableArray *_collectors;	// 384 = 0x180
    NSTimer *_scrollCleanupTimer;	// 392 = 0x188
    MSViewPort *_viewPortBeforeZoomOut;	// 400 = 0x190
    struct CGPoint _lastActualZoomScrollOrigin;	// 408 = 0x198
    struct CGRect _dirtyContentRect;	// 424 = 0x1a8
    struct CGRect _dirtyOverlayRect;	// 456 = 0x1c8
}

@property(retain, nonatomic) MSViewPort *viewPortBeforeZoomOut; // @synthesize viewPortBeforeZoomOut=_viewPortBeforeZoomOut;
@property(retain, nonatomic) NSTimer *scrollCleanupTimer; // @synthesize scrollCleanupTimer=_scrollCleanupTimer;
@property(retain, nonatomic) NSMutableArray *collectors; // @synthesize collectors=_collectors;
@property(nonatomic) double refreshDelay; // @synthesize refreshDelay=_refreshDelay;
@property(nonatomic) struct CGRect dirtyOverlayRect; // @synthesize dirtyOverlayRect=_dirtyOverlayRect;
@property(nonatomic) struct CGRect dirtyContentRect; // @synthesize dirtyContentRect=_dirtyContentRect;
@property(retain, nonatomic) NSTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(nonatomic) BOOL lastActualZoomScrollOriginSaved; // @synthesize lastActualZoomScrollOriginSaved=_lastActualZoomScrollOriginSaved;
@property(nonatomic) struct CGPoint lastActualZoomScrollOrigin; // @synthesize lastActualZoomScrollOrigin=_lastActualZoomScrollOrigin;
@property(nonatomic) double zoomValueAfterAnimating; // @synthesize zoomValueAfterAnimating=_zoomValueAfterAnimating;
@property(nonatomic) double zoomDeltaDuringPinch; // @synthesize zoomDeltaDuringPinch=_zoomDeltaDuringPinch;
@property(nonatomic) long long animatingZoomCounter; // @synthesize animatingZoomCounter=_animatingZoomCounter;
@property(nonatomic) BOOL shouldHideOverlayControls; // @synthesize shouldHideOverlayControls=_shouldHideOverlayControls;
@property(retain, nonatomic) MSTilePlacer *layerTiler; // @synthesize layerTiler=_layerTiler;
@property(retain, nonatomic) CALayer *masterTileLayer; // @synthesize masterTileLayer=_masterTileLayer;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
@property(readonly, nonatomic) BOOL zoomToolIsActive; // @synthesize zoomToolIsActive;
@property(nonatomic) __weak MSRulerView *verticalRuler; // @synthesize verticalRuler;
@property(nonatomic) __weak MSRulerView *horizontalRuler; // @synthesize horizontalRuler;
- (void).cxx_destruct;
- (void)dealloc;
- (void)layerPositionPossiblyChanged;
- (void)ignoreNextKeyDownEventUntilModifiersChange;
- (void)refresh;
- (void)windowDidResize:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)smartMagnifyWithEvent:(id)arg1;
- (BOOL)canDrawConcurrently;
- (void)currentHandlerChanged;
- (void)setDelegate:(id)arg1;
- (void)setOutletsToNil;
- (void)didUndoNotification:(id)arg1;
- (void)willUndoNotification:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)selectToolbarItemWithIdentifier:(id)arg1;
- (void)refreshViewsWithMask:(unsigned long long)arg1;
- (void)reloadLayerList;
- (id)defaultHandler;
- (id)undoManager;
- (id)pages;
- (id)currentPage;
- (id)currentView;
- (id)selectedLayers;
- (void)flagsChanged:(id)arg1;
- (id)setCurrentHandlerKey:(id)arg1;
- (id)currentHandlerKey;
- (void)toggleHandlerKey:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)resetCursorRects;
- (void)addLayer:(id)arg1;
- (void)changeFont:(id)arg1;
- (BOOL)isOpaque;
- (void)setLastEvent:(id)arg1;
- (id)lastEvent;
- (void)refreshOfType:(unsigned long long)arg1 rect:(struct CGRect)arg2;
- (void)didFinishAnimatingZoom;
- (void)willStartAnimatingZoom;
- (struct CGRect)visibleContentRect;
- (void)setViewPort:(id)arg1;
- (void)animateToViewPort:(id)arg1;
- (void)animateScrollOriginToPoint:(struct CGPoint)arg1;
- (struct CGPoint)currentMidPointFromScrollOrigin:(struct CGPoint)arg1 zoomValue:(double)arg2;
- (struct CGPoint)currentMidPoint;
- (void)actualSizeWithoutAnimating;
- (void)actualSize;
- (double)currentZoomValueAccountingForAnimation;
- (double)zoomValueAfterZoomOut;
- (void)zoomOut;
- (double)zoomValueAfterZoomIn;
- (void)setZoomValueCenteredInCanvas:(double)arg1;
- (void)refreshOverlays;
- (void)animatedZoomDidEndAtMidPoint:(struct CGPoint)arg1;
- (void)animateToZoom:(double)arg1 fromPoint:(struct CGPoint)arg2;
- (void)animateToZoom:(double)arg1;
- (void)zoomIn;
- (id)menuForEvent:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)performActionWithName:(id)arg1;
- (BOOL)interpretKeyEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)calculateMouseBeforePinch:(BOOL)arg1;
- (void)setZoomValueByOnlyScalingTiles:(double)arg1 fromMouseLocation:(BOOL)arg2;
- (void)magnifyWithEvent:(id)arg1;
- (void)reloadAllTiles;
- (void)displayPropertiesDidChange;
- (void)resetMasterTileLayer;
- (struct CGPoint)scrollOriginAfterMagnify;
- (BOOL)userDidMagnify;
- (void)tileRemoveCollectorDidFinish:(id)arg1;
- (void)animationDidFinishAtZoomValue:(double)arg1 scrollOrigin:(struct CGPoint)arg2;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesBeganWithEvent:(id)arg1;
- (BOOL)acceptsTouchEvents;
- (void)scrollCleanupTimer:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (id)viewPortForZoomToFitRect:(id)arg1;
- (void)zoomToFitRect:(id)arg1;
- (id)totalRectForLayers:(id)arg1;
- (void)zoomToSelection;
- (void)centerSelectionInVisibleArea;
- (void)centerLayersInCanvas;
- (void)centerRect:(id)arg1 animated:(BOOL)arg2;
- (void)centerRect:(id)arg1;
- (void)centerSelection;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)doMouseDraggedEvent:(id)arg1;
- (void)mouseDraggedOutsideCanvas;
- (BOOL)isPointOutsideCanvas:(struct CGPoint)arg1;
- (void)mouseDragged:(id)arg1;
- (void)endRefreshCoalescing;
- (void)beginRefreshCoalescing;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (id)grid;
- (void)placeScrollOriginInTopLeft;
- (BOOL)group:(id)arg1 containsLayerOfType:(Class)arg2;
- (void)centerInBounds;
- (void)refreshTiles;
- (void)scheduleRefreshTiles;
- (void)baseRefreshOfType:(unsigned long long)arg1 rect:(struct CGRect)arg2;
- (void)setZoomValue:(double)arg1;
- (void)setScrollOrigin:(struct CGPoint)arg1 moveTiles:(BOOL)arg2;
- (void)prepareTile:(id)arg1;
- (id)newMasterTileLayer;
- (void)enableLayerBackedDrawing;
- (void)pixelGridDidChange;
- (void)screenDidChange:(id)arg1;
- (void)awakeFromNib;
- (long long)tag;
- (void)initialize;
- (void)handToolMouseUp;
- (void)handToolMouseDragged:(id)arg1;
- (void)handToolMouseDown:(id)arg1;
- (void)endHandToolMode;
- (void)beginHandToolMode;
- (void)drawZoomTool;
- (BOOL)shouldZoomIntoRect;
- (void)zoomToolMouseUp:(id)arg1;
- (struct CGRect)zoomRect;
- (void)applyZoomCursor;
- (void)zoomToolMouseDragged:(id)arg1;
- (void)zoomTooMouseMoved;
- (void)zoomToolMouseDown:(id)arg1;
- (void)zoomToolFlagsChanged;
- (struct CGPoint)zoomPointFromEvent:(id)arg1;
- (void)endZoomToolMode;
- (void)beginZoomToolMode;

@end

@interface MSContentTile : MSBaseRenderTile
{
}

- (void)enableDebugInnerFrame;

@end

@interface MSContentTileRefreshCollector : NSObject
{
    BOOL isCoalescingRefreshes;	// 8 = 0x8
    BOOL isFirstRefresh;	// 9 = 0x9
    struct CGRect refreshRect;	// 16 = 0x10
    MSContentTile *_contentTile;	// 48 = 0x30
}

@property(retain, nonatomic) MSContentTile *contentTile; // @synthesize contentTile=_contentTile;
- (void).cxx_destruct;
- (void)endRefreshCoalescing;
- (void)beginRefreshCoalescing;
- (void)coalesceRefreshRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInRect:(id)arg1;

@end

@interface MSCreateSharedLayerStyleAction : MSBaseAction
{
}

- (id)toolbarLabel;
- (id)imageName;
- (id)label;
- (id)sharedObjectContainer;
- (struct MSModelObject *)sharedObjectInstance;
- (id)displayNameForNewSharedObject;
- (BOOL)hasRawGroups;
- (BOOL)validate;
- (void)performAction:(id)arg1;
- (void)createSharedLayerStyle:(id)arg1;
- (id)firstLayer;
- (void)createSharedObjectFromSelectedLayer;

@end

@interface MSCreateSymbolAction : MSBaseAction
{
}

- (void)refreshUI;
- (void)isolateSymbolAction:(id)arg1;
- (BOOL)willIsolate;
- (void)toggleCreateSymbolOrIsolate:(id)arg1;
- (id)layerSymbols;
- (id)toolbarLabel;
- (id)imageName;
- (void)renameSymbolInInspector;
- (void)prepareGroupForSymbol:(id)arg1;
- (void)moveSlicesOutOfGroup:(id)arg1;
- (id)groupForCreatingSymbolsFromLayers:(id)arg1;
- (BOOL)unHideLayersIfNecessary:(id)arg1;
- (void)performAction:(id)arg1;
- (BOOL)validate;
- (BOOL)validateMenuItem:(id)arg1;
- (void)createSymbolAction:(id)arg1;

@end

@interface MSCurvePoint : _MSCurvePoint <NSCoding, NSCopying>
{
}

+ (id)pointWithPoint:(struct CGPoint)arg1 curveTo:(struct CGPoint)arg2 curveFrom:(struct CGPoint)arg3;
+ (id)pointWithPoint:(struct CGPoint)arg1;
+ (id)point;
- (void)prepareForRemoval;
- (void)multiplyBy:(double)arg1;
- (void)movePointTo:(struct CGPoint)arg1;
- (void)moveCurveFromTo:(struct CGPoint)arg1 rect:(struct CGRect)arg2 flags:(long long)arg3;
- (void)moveCurveToTo:(struct CGPoint)arg1 rect:(struct CGRect)arg2 flags:(long long)arg3;
- (void)inferCurveMode;
- (BOOL)isRounded;
- (void)changeCurveModeTo:(long long)arg1;
- (Class)currentBehaviour;
- (id)initWithPoint:(struct CGPoint)arg1 curveTo:(struct CGPoint)arg2 curveFrom:(struct CGPoint)arg3;
- (id)initWithPoint:(struct CGPoint)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)migratePropertiesFromV35OrEarlierWithCoder:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;

// Remaining properties
@property(nonatomic) double cornerRadius;
@property(nonatomic) struct CGPoint curveFrom;
@property(nonatomic) long long curveMode;
@property(nonatomic) struct CGPoint curveTo;
@property(nonatomic) BOOL hasCurveFrom;
@property(nonatomic) BOOL hasCurveTo;
@property(nonatomic) struct CGPoint point;

@end

@interface MSCurvePointAsymmetricBehaviour : MSCurvePointBehaviour
{
}

+ (void)curveToChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)curveFromChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)behaviourDidGetAssignedToPoint:(id)arg1 previousMode:(long long)arg2;

@end

@interface MSCurvePointBehaviour : NSObject
{
}

+ (void)curveToChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)curveFromChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)behaviourDidGetAssignedToPoint:(id)arg1 previousMode:(long long)arg2;

@end

@interface MSCurvePointDisconnectedBehaviour : MSCurvePointBehaviour
{
}

+ (void)curveToChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)curveFromChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)behaviourDidGetAssignedToPoint:(id)arg1 previousMode:(long long)arg2;

@end

@interface MSCurvePointMirroredBehaviour : MSCurvePointBehaviour
{
}

+ (void)curveToChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)curveFromChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)behaviourDidGetAssignedToPoint:(id)arg1 previousMode:(long long)arg2;

@end

@interface MSCurvePointStraightBehaviour : MSCurvePointBehaviour
{
}

+ (void)curveToChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)curveFromChangedInPoint:(id)arg1 frame:(struct CGRect)arg2 flags:(long long)arg3;
+ (void)behaviourDidGetAssignedToPoint:(id)arg1 previousMode:(long long)arg2;

@end

@interface MSCustomShapeLayer : _MSCustomShapeLayer
{
}

- (void)resetPointsBasedOnUserInteraction;
- (void)setNilValueForKey:(id)arg1;
- (id)defaultStyle;
- (id)inspectorViewControllerNames;
- (BOOL)shouldResetPointsOnResize;
- (void)rectSizeDidChange:(id)arg1;
- (void)initEmptyObject;

@end

@interface MSCustomShapeSection : MSLayerSection
{
    NSString *nibName;	// 112 = 0x70
}

- (void).cxx_destruct;
- (void)userAction:(id)arg1;
- (id)nibName;

@end

@interface MSDebugStressTestRendering : NSObject
{
    MSDocument *_document;	// 8 = 0x8
}

+ (void)stressTestDocument:(id)arg1;
@property(retain, nonatomic) MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (id)findRandomParent;
- (id)findRandomLayer;
- (void)runInBackground;
- (void)run;

@end

@interface MSDecoration : _MSDecoration
{
}

+ (id)decorationFromURL:(id)arg1;
+ (id)decorationWithName:(id)arg1;
- (id)_decorationForBezierPath:(id)arg1;
- (id)decorationForBezierPath:(id)arg1;
- (double)positionOnPath;
- (void)initLegacyWithCoder:(id)arg1;

@end

@interface MSDefaultArchive : CHSingletonObject
{
    MSVersionedArchive *_archive;	// 8 = 0x8
}

@property(retain, nonatomic) MSVersionedArchive *archive; // @synthesize archive=_archive;
- (void).cxx_destruct;
- (void)setDefaultObject:(id)arg1;
- (id)newObject;
- (id)defaultObject;
- (Class)defaultClass;
- (id)oldDefaultsName;
- (id)filename;

@end

@interface MSDefaultGrid : MSDefaultArchive
{
}

+ (void)setDefaultGrid:(id)arg1;
+ (id)defaultGrid;
- (Class)defaultClass;
- (id)setting;
- (id)filename;

@end

@interface MSDefaultLayoutGrid : MSDefaultArchive
{
}

+ (void)setDefaultLayout:(id)arg1;
+ (id)defaultLayout;
- (Class)defaultClass;
- (id)setting;
- (id)filename;

@end

@interface MSDefaultStyle : MSDefaultArchive
{
}

+ (void)setDefaultStyle:(id)arg1;
+ (id)defaultStyle;
- (id)newObject;
- (Class)defaultClass;
- (id)oldDefaultsName;
- (id)filename;

@end

@interface MSDefaultTextStyle : MSDefaultArchive
{
}

+ (void)setDefaultTextStyle:(id)arg1;
+ (id)defaultTextStyle;
+ (void)recordTextStyleForLayer:(id)arg1;
- (Class)defaultClass;
- (id)filename;

@end

@interface MSDifferenceAction : MSBaseBooleanAction
{
}

- (void)performAction:(id)arg1;
- (void)booleanDifference:(id)arg1;

@end

@interface MSDisplayMessageTextField : NSTextField
{
}

+ (Class)cellClass;

@end

@interface MSDisplayMessageTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSDistributeAction : MSBaseAction
{
}

- (void)clearCachesIfNecessary:(id)arg1;
- (void)distributeLayers:(id)arg1 withSpace:(long long)arg2 forAxis:(id)arg3;
- (long long)calculateRequiredSpaceBetweenLayers:(id)arg1 forAxis:(id)arg2;
- (id)layersSortedForAxis:(id)arg1;
- (void)distributeAlongAxis:(id)arg1;
- (id)validation;

@end

@interface MSDistributeHorizontallyAction : MSDistributeAction
{
}

- (void)performAction:(id)arg1;
- (void)distributeHorizontally:(id)arg1;

@end

@interface MSDistributeVerticallyAction : MSDistributeAction
{
}

- (void)performAction:(id)arg1;
- (void)distributeVertically:(id)arg1;

@end

@interface MSDocument : NSDocument <NSMenuDelegate, NSToolbarDelegate, NSWindowDelegate, MSDrawViewContentDelegate, MSBasicDelegate, MSBaseViewDelegate, MSDocumentDataDelegate, MSPageDelegate>
{
    MSDocumentData *documentData;	// 104 = 0x68
    MSActionsController *actionsController;	// 112 = 0x70
    MSInspectorController *inspectorController;	// 120 = 0x78
    MSToolbarConstructor *toolbarConstructor;	// 128 = 0x80
    MSEventHandlerManager *eventHandlerManager;	// 136 = 0x88
    MSLayerListViewController *layerListController;	// 144 = 0x90
    BOOL _hasOpenedImageFile;	// 152 = 0x98
    MSRulerView *_horizontalRuler;	// 160 = 0xa0
    MSRulerView *_verticalRuler;	// 168 = 0xa8
    NSView *_rulerCornerView;	// 176 = 0xb0
    MSContentDrawView *_contentDrawView;	// 184 = 0xb8
    NSSplitView *_splitView;	// 192 = 0xc0
    NSWindow *_documentWindow;	// 200 = 0xc8
    MSSplitViewDelegate *_splitViewController;	// 208 = 0xd0
    NSView *_inspectorPlaceholderView;	// 216 = 0xd8
    MSIOSRefreshCollector *_refreshCollector;	// 224 = 0xe0
    MSFontList *_fontList;	// 232 = 0xe8
    NSArray *_selectedLayers;	// 240 = 0xf0
    NSDictionary *_collectedSharedObjects;	// 248 = 0xf8
    NSTimer *_collectedSharedObjectsTimer;	// 256 = 0x100
}

+ (BOOL)autosavesInPlace;
+ (id)currentDocument;
+ (BOOL)isNativeType:(id)arg1;
+ (id)writableTypes;
+ (id)readableTypes;
@property(nonatomic) BOOL hasOpenedImageFile; // @synthesize hasOpenedImageFile=_hasOpenedImageFile;
@property(retain, nonatomic) NSTimer *collectedSharedObjectsTimer; // @synthesize collectedSharedObjectsTimer=_collectedSharedObjectsTimer;
@property(retain, nonatomic) NSDictionary *collectedSharedObjects; // @synthesize collectedSharedObjects=_collectedSharedObjects;
@property(copy, nonatomic) NSArray *selectedLayers; // @synthesize selectedLayers=_selectedLayers;
@property(retain, nonatomic) MSFontList *fontList; // @synthesize fontList=_fontList;
@property(readonly, nonatomic) MSIOSRefreshCollector *refreshCollector; // @synthesize refreshCollector=_refreshCollector;
@property(nonatomic) __weak NSView *inspectorPlaceholderView; // @synthesize inspectorPlaceholderView=_inspectorPlaceholderView;
@property(nonatomic) __weak MSSplitViewDelegate *splitViewController; // @synthesize splitViewController=_splitViewController;
@property(retain, nonatomic) NSWindow *documentWindow; // @synthesize documentWindow=_documentWindow;
@property(nonatomic) __weak NSSplitView *splitView; // @synthesize splitView=_splitView;
@property(nonatomic) __weak MSContentDrawView *contentDrawView; // @synthesize contentDrawView=_contentDrawView;
@property(nonatomic) __weak NSView *rulerCornerView; // @synthesize rulerCornerView=_rulerCornerView;
@property(nonatomic) __weak MSRulerView *verticalRuler; // @synthesize verticalRuler=_verticalRuler;
@property(nonatomic) __weak MSRulerView *horizontalRuler; // @synthesize horizontalRuler=_horizontalRuler;
@property(readonly, nonatomic) MSEventHandlerManager *eventHandlerManager; // @synthesize eventHandlerManager;
@property(retain, nonatomic) MSDocumentData *documentData; // @synthesize documentData;
@property(retain, nonatomic) MSToolbarConstructor *toolbarConstructor; // @synthesize toolbarConstructor;
@property(readonly, nonatomic) MSLayerListViewController *layerListController; // @synthesize layerListController;
@property(readonly, nonatomic) MSInspectorController *inspectorController; // @synthesize inspectorController;
@property(readonly, nonatomic) MSActionsController *actionsController; // @synthesize actionsController;
- (void).cxx_destruct;
- (void)debugCountObject:(id)arg1 counts:(id)arg2;
- (void)debugCountObjects:(id)arg1;
- (void)logBuggyBezierPaths;
- (void)determineCurrentArtboard;
- (void)layerSelectionDidChange;
- (void)collectRefreshRect:(struct CGRect)arg1 page:(id)arg2;
- (void)layerTreeLayoutDidChange;
- (void)willRemovePage:(id)arg1;
- (void)didAddPage:(id)arg1;
- (void)didAddArtboard:(id)arg1 toPage:(id)arg2;
- (void)willRemoveArtboard:(id)arg1 fromPage:(id)arg2;
- (void)didUpdateDetailsForArtboard:(id)arg1;
- (void)didUpdateDetailsForPage:(id)arg1;
- (void)currentArtboardDidChange;
- (void)collapseGroupsInLayerList:(id)arg1;
- (void)sliceDidChangeVisibility:(id)arg1;
- (void)changeTextLayerFont:(id)arg1;
- (void)debugStressTestRendering:(id)arg1;
- (void)layerPositionPossiblyChanged;
- (void)startBackgroundCaching;
- (id)addBlankPage;
- (void)reduceImageSize:(id)arg1;
- (void)toggleClickThrough:(id)arg1;
- (void)findLayer:(id)arg1;
- (void)showCurrentArtboardPreview:(id)arg1;
- (void)redoAction:(id)arg1;
- (void)undoAction:(id)arg1;
- (void)toggleLayersAndInspectorVisibility:(id)arg1;
- (void)toggleInspectorVisibility:(id)arg1;
- (void)toggleLayerListVisibility:(id)arg1;
- (void)renameLayer:(id)arg1;
- (void)windowDidExitVersionBrowser:(id)arg1;
- (void)windowDidEnterVersionBrowser:(id)arg1;
- (void)colorMagnifierAction:(id)arg1;
- (BOOL)currentPopoverHandlesColorMagnifier;
- (void)copyCSSAttributes:(id)arg1;
- (id)pages;
- (id)layersSharingStyle:(id)arg1;
- (id)layerStyles;
- (void)removePage:(id)arg1;
- (void)setCurrentPage:(id)arg1;
- (id)artboards;
- (id)grid;
- (id)document;
- (void)pasteStyle:(id)arg1;
- (void)copyStyle:(id)arg1;
- (void)layoutSettings:(id)arg1;
- (void)gridSettings:(id)arg1;
- (void)setStyleAsDefault:(id)arg1;
- (void)returnToDefaultHandler:(id)arg1;
- (id)defaultHandler;
- (id)setCurrentHandlerKey:(id)arg1;
- (id)toggleHandlerKey:(id)arg1;
- (void)reloadInspector;
- (void)reloadLayerList;
- (void)refreshViewsWithMask:(unsigned long long)arg1;
- (void)refreshOfType:(unsigned long long)arg1 rect:(struct CGRect)arg2;
- (id)rootDelegate;
- (void)deleteArtboards:(id)arg1;
- (void)closePath:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)currentVerticalRulerData;
- (id)currentHorizontalRulerData;
- (void)zoomValueDidChange;
- (void)syncSharedObjects:(id)arg1;
- (void)documentData:(id)arg1 syncSharedObject:(id)arg2;
- (void)documentData:(id)arg1 didChangeToPage:(id)arg2;
- (BOOL)inspectorIsMain;
- (void)selectToolbarItemWithIdentifier:(id)arg1;
- (id)closestVisibleIdentifierInToolbarForIdentifier:(id)arg1;
- (void)reversePath:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (id)currentHandlerKey;
- (id)currentHandler;
- (void)enableInteractionFrom:(id)arg1;
- (void)toggleSliceInteraction:(id)arg1;
- (void)toggleLayerInteraction:(id)arg1;
- (void)toggleLayerHighlight:(id)arg1;
- (void)toggleSelection:(id)arg1;
- (void)lockLayer:(id)arg1;
- (void)toggleArtboardShadow:(id)arg1;
- (void)togglePixelLines:(id)arg1;
- (void)toggleAlignmentGuides:(id)arg1;
- (void)validateMenuItemTitle:(id)arg1;
- (BOOL)validateItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)layerWouldOverlapExistingLayer:(id)arg1 inGroup:(id)arg2;
- (void)offsetLayerIfNecessary:(id)arg1 forInsertingInGroup:(id)arg2;
- (void)addLayer:(id)arg1 changeName:(BOOL)arg2;
- (void)addLayer:(id)arg1;
- (id)findCurrentArtboardGroup;
- (void)coalescedDetermineArtboardNotification:(id)arg1;
- (void)putSelectionBackInCanvasIfPossible;
- (void)coalescedSelectionDidChangeNotification:(id)arg1;
- (id)findSelectedLayers;
- (id)currentPage;
- (void)exportPDFBook:(id)arg1;
- (void)exportSliceLayers:(id)arg1;
- (id)allExportableLayers;
- (void)exportEnabledSliceLayers:(id)arg1;
- (void)export:(id)arg1;
- (id)selectedLayersOfClass:(Class)arg1;
- (void)returnToNormalHandler;
- (void)currentHandlerChanged;
@property(nonatomic) double zoomValue; // @dynamic zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin; // @dynamic scrollOrigin;
- (id)fileWrapperOfType:(id)arg1 error:(id *)arg2;
- (BOOL)shouldCancelAutoSave;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (BOOL)documentBundleContainsSVNFolders;
- (BOOL)canAsynchronouslyWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3;
- (id)windowNibName;
- (id)toolbar;
- (BOOL)shouldCreateToolbar;
- (void)windowControllerDidLoadNib:(id)arg1;
- (void)loadLayerListPanel;
- (void)loadInspectorPanel;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)awakeFromNib;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)wireDocumentDataToUI;
- (id)currentView;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (void)windowWillClose:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (id)window;
- (void)dealloc;
- (void)close;
- (void)setDelegatesToNil;
- (id)actionWithName:(id)arg1;
- (id)actions;
- (void)createActions;
- (id)init;
- (id)cleanFilenameFor:(id)arg1;
- (void)enableMaskForView:(id)arg1;
- (id)disableMaskForView:(id)arg1;
- (struct CGRect)rectForExport:(id)arg1;
- (id)subviewsForView:(id)arg1;
- (BOOL)viewShouldBeTraversed:(id)arg1;
- (BOOL)viewHasSubviews:(id)arg1;
- (BOOL)viewCanHaveMask:(id)arg1;
- (id)maskBoundsFor:(id)arg1;
- (id)coordinatesFor:(id)arg1;
- (id)extractMetadataFrom:(id)arg1;
- (BOOL)viewIsArtboard:(id)arg1;
- (BOOL)viewShouldBeIgnored:(id)arg1;
- (BOOL)viewShouldBeExtracted:(id)arg1;
- (void)exportAssetsForView:(id)arg1 inFolder:(id)arg2;
- (id)toJSON:(id)arg1;
- (id)getViews;
- (void)saveStructureToJSONJS:(id)arg1 toPath:(id)arg2;
- (void)saveStructureToJSON:(id)arg1 toPath:(id)arg2;
- (id)checkForErrors;
- (id)tmpFolder;
- (void)saveFileFromString:(id)arg1 toPath:(id)arg2;
- (void)makeFolder:(id)arg1;
- (id)exportFramer;
- (void)alignLayers:(id)arg1 toValue:(id)arg2 forKey:(id)arg3;
- (id)alignmentRectForLayers:(id)arg1;
- (void)alignToKey:(id)arg1;
- (void)alignLayersBottom:(id)arg1;
- (void)alignLayersMiddle:(id)arg1;
- (void)alignLayersTop:(id)arg1;
- (void)alignLayersRight:(id)arg1;
- (void)alignLayersCenter:(id)arg1;
- (void)alignLayersLeft:(id)arg1;
- (void)displayMessage:(id)arg1;
- (void)showMessage:(id)arg1;
- (void)stopAccessingFolderToken:(id)arg1;
- (id)startAccessingFolder:(id)arg1 tokenName:(id)arg2;
- (id)dataForRequest:(id)arg1 ofType:(id)arg2;
- (void)saveSlice:(id)arg1 toFile:(id)arg2;
- (id)sliceForArtboardOrSlice:(id)arg1;
- (void)saveArtboardOrSlice:(id)arg1 toFile:(id)arg2;
- (id)sliceForRect:(id)arg1;
- (id)askForUserInput:(id)arg1 ofType:(long long)arg2 initialValue:(id)arg3;
- (id)askForUserInput:(id)arg1 initialValue:(id)arg2;
- (BOOL)askToOpenDocumentRepairingMetadata;
- (BOOL)askToOpenDocumentWithMissingFonts:(id)arg1;
- (void)alertDocumentIsWrongSize;
- (void)alertDocumentIsTooNew;
- (void)resetImportedDocument:(id)arg1;
- (BOOL)readImageFromPath:(id)arg1 error:(id *)arg2;
- (id)addImageLayerFromPath:(id)arg1 toGroup:(id)arg2 fitPixels:(BOOL)arg3 error:(id *)arg4;
- (BOOL)readFromFileWrapper:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readEPSFromURL:(id)arg1;
- (BOOL)readPDFFromURL:(id)arg1;
- (BOOL)readSVGFromURL:(id)arg1;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface MSDocumentColorFinder : NSObject
{
}

+ (id)commonColorsForBasicFill:(id)arg1;
+ (id)commonColorsForStyle:(id)arg1;
+ (id)commonColorsForTextLayer:(id)arg1;
+ (id)commonColorsForGroup:(id)arg1;
+ (id)commonColorsForPage:(id)arg1;
+ (id)commonColorsForPages:(id)arg1;
+ (id)sortColorsByUsage:(id)arg1;
+ (id)flexibleColors:(id)arg1;
+ (void)findColorsInPages:(id)arg1 maxAmount:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (void)findColorsInPages:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface MSDocumentController : NSDocumentController
{
}

- (void)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface MSDocumentData : _MSDocumentData <MSArrayDelegate>
{
    NSUndoManager *_undoManager;	// 8 = 0x8
    id <MSDocumentDataDelegate> _delegate;	// 16 = 0x10
}

+ (id)documentDataFromData:(id)arg1 version:(long long)arg2 error:(id *)arg3;
+ (id)documentDataFromWrapper:(id)arg1 data:(id)arg2 version:(long long)arg3 error:(id *)arg4;
@property(nonatomic) __weak id <MSDocumentDataDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
- (void).cxx_destruct;
- (void)setEnableSliceInteraction:(BOOL)arg1;
- (void)setEnableLayerInteraction:(BOOL)arg1;
- (id)imagesInUse;
- (void)removeDeletedSharedObjectsInstances;
- (id)rootLayersIncludingSymbols:(BOOL)arg1;
- (id)sharedObjectContainer:(unsigned long long)arg1;
- (id)layersSharingStyle:(id)arg1;
- (id)layersSatisfyingTest:(CDUnknownBlockType)arg1;
- (void)layerTreeLayoutDidChange;
- (void)deselectAllLayers;
- (id)selectedLayers;
- (id)pagesArray;
- (BOOL)documentIsEmpty;
- (struct MSModelObject *)sharedObjectOfType:(unsigned long long)arg1 fromLayer:(id)arg2;
- (void)sharedTextStyleDidChange:(id)arg1;
- (void)sharedLayerStyleDidChange:(id)arg1;
- (void)symbolGroupDidChange:(id)arg1;
- (id)standardNameForLayer:(id)arg1;
- (void)dataArray:(id)arg1 didRemoveObject:(id)arg2;
- (void)dataArray:(id)arg1 willRemoveObject:(id)arg2;
- (void)dataArray:(id)arg1 didAddObject:(id)arg2;
- (id)nameForNewPage;
- (id)addBlankPage;
- (void)addPage:(id)arg1;
- (void)removePage:(id)arg1;
@property(retain, nonatomic) MSPage *currentPage; // @dynamic currentPage;
- (void)setCurrentPageIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *allPages; // @dynamic allPages;
- (void)dealloc;
- (id)documentData;
- (void)encodeWithCoder:(id)arg1;
- (void)objectDidInit;
- (id)defaultPagesArray;
- (BOOL)shouldConvertArrayPropertyWithName:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (id)usedFontNames;
- (id)usedFonts;
- (void)restoreImageForLayer:(id)arg1 imageCollection:(id)arg2 imageFiles:(id)arg3;
- (void)restoreImagesForLayers:(id)arg1 imageCollection:(id)arg2 imageFiles:(id)arg3;
- (void)restoreImagesForLayers:(id)arg1 imageCollection:(id)arg2;
- (void)restoreImagesForLayers:(id)arg1 images:(id)arg2;
- (void)relinkBitmapLayers:(id)arg1 images:(id)arg2;
- (id)bitmapsNeedingRelinkingInLayers:(id)arg1;
- (id)bitmapsNeedingRelinkingInSymbols;
- (void)loadImagesFromWrapper:(id)arg1;

@end

@interface MSDocumentError : NSError
{
}

+ (id)errorWithCode:(unsigned long long)arg1;

@end

@interface MSDocumentSaver : MSCommand
{
    MSDocument *_document;	// 8 = 0x8
}

@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (id)fileWrapper;
- (id)run;

@end

@interface MSDocumentWindow : NSWindow
{
}

- (BOOL)closePopovers;
- (BOOL)shouldDismissPopover:(id)arg1 event:(id)arg2;
- (void)sendEvent:(id)arg1;

@end

@interface MSDocumentWrapper : NSObject
{
    NSFileWrapper *_wrapper;	// 8 = 0x8
    NSString *_type;	// 16 = 0x10
    NSDictionary *_metadata;	// 24 = 0x18
}

@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSFileWrapper *wrapper; // @synthesize wrapper=_wrapper;
- (void).cxx_destruct;
- (void)repair;
- (id)fileWrapperForDocumentData:(id)arg1 url:(id)arg2;
- (id)wrappersForDocumentData:(id)arg1 url:(id)arg2;
- (long long)version;
- (long long)metadataVersion;
- (long long)standaloneVersion;
- (id)data;
- (unsigned long long)dataSize;
- (id)dataFile;
- (id)readDataWithError:(id *)arg1;
- (id)validate;
- (id)missingFonts;
- (BOOL)isValidType;
- (id)initWithDocumentData:(id)arg1 url:(id)arg2;
- (id)initWithWrapper:(id)arg1 type:(id)arg2;
- (id)initWithURL:(id)arg1;

@end

@interface MSDotDrawing : NSObject
{
}

+ (void)resetZoomValue;
+ (void)setZoomValue:(double)arg1;
+ (void)drawShadowForHover:(BOOL)arg1 inBlock:(CDUnknownBlockType)arg2;
+ (id)gradient;
+ (id)shadowForHover:(BOOL)arg1;
+ (void)drawBezier:(id)arg1;
+ (void)drawRectAtPoint:(struct CGPoint)arg1;
+ (void)drawAtPoint:(struct CGPoint)arg1 isSelected:(BOOL)arg2 color:(id)arg3;
+ (void)drawAtPoint:(struct CGPoint)arg1 ofType:(long long)arg2 isSelected:(BOOL)arg3 isHovering:(BOOL)arg4;
+ (void)drawAtPoint:(struct CGPoint)arg1 ofType:(long long)arg2 isSelected:(BOOL)arg3 isHovering:(BOOL)arg4 transformStruct:(struct _CHTransformStruct)arg5;
+ (double)dotSizeForType:(long long)arg1;
+ (void)load;

@end

@interface MSDragRectEventHandler : MSEventHandler
{
    struct CGPoint _fromPoint;	// 128 = 0x80
    struct CGPoint _toPoint;	// 144 = 0x90
    BOOL _handToolActive;	// 160 = 0xa0
    MSNormalEventData *eventData;	// 168 = 0xa8
}

- (void).cxx_destruct;
- (BOOL)shouldHideExportBar;
- (BOOL)shouldDrawLayerSelection;
- (void)flagsChanged:(id)arg1;
- (id)layerSnapper;
- (void)drawHeight:(double)arg1 ofRect:(id)arg2 attributes:(id)arg3;
- (void)drawWidth:(double)arg1 ofRect:(id)arg2 attributes:(id)arg3;
- (void)drawRectMeasurements;
- (void)prepareGraphicsContext;
- (void)drawRectPreview;
- (void)drawInRect:(struct CGRect)arg1;
- (id)currentGroup;
- (BOOL)handlesHandToolItself;
- (void)keyUp:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)refresh;
- (id)rectForInserting;
- (id)performActionWithRect:(id)arg1;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (struct CGPoint)alignMouseToGrid:(struct CGPoint)arg1;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSDrawingInfo : NSObject
{
    BOOL _isDragging;	// 8 = 0x8
}

+ (id)sharedController;
@property(nonatomic) BOOL isDragging; // @synthesize isDragging=_isDragging;

@end

@interface MSDummyDocument : NSDocument
{
}

+ (id)readableTypes;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface MSDuplicateOffsetTracker : NSObject
{
    long long multiplier;	// 8 = 0x8
}

- (double)offset;
- (void)increment;
- (void)resetToInitialOffset;
- (void)reset;

@end

@interface MSEditAction : MSBaseAction
{
}

- (id)tooltip;
- (BOOL)isSelectable;
- (void)performAction:(id)arg1;
- (void)edit:(id)arg1;
- (id)validation;

@end

@interface MSEditArtboardPresetBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;

@end

@interface MSEditArtboardPresetViewController : NSViewController
{
    BOOL _canCancel;	// 104 = 0x68
    NSMutableDictionary *_preset;	// 112 = 0x70
    CDUnknownBlockType _completionBlock;	// 120 = 0x78
    NSTextField *_nameField;	// 128 = 0x80
    NSButton *_cancelButton;	// 136 = 0x88
    CDUnknownBlockType _cancelBlock;	// 144 = 0x90
}

@property(copy, nonatomic) CDUnknownBlockType cancelBlock; // @synthesize cancelBlock=_cancelBlock;
@property(nonatomic) BOOL canCancel; // @synthesize canCancel=_canCancel;
@property(retain, nonatomic) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) NSTextField *nameField; // @synthesize nameField=_nameField;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSMutableDictionary *preset; // @synthesize preset=_preset;
- (void).cxx_destruct;
- (void)close;
- (void)cancel:(id)arg1;
- (void)done:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSEditingShapeDrawing : NSObject
{
    MSShapePathLayer *shape;	// 8 = 0x8
    MSSelectionPathCollection *selectedPoints;	// 16 = 0x10
    MSSelectionPath *hoveringPoint;	// 24 = 0x18
    struct CGRect dirtyRect;	// 32 = 0x20
    struct CGPoint scrollOrigin;	// 64 = 0x40
    double zoomValue;	// 80 = 0x50
    long long hoveringBeforeIndex;	// 88 = 0x58
}

@property(nonatomic) long long hoveringBeforeIndex; // @synthesize hoveringBeforeIndex;
@property(nonatomic) double zoomValue; // @synthesize zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin;
@property(nonatomic) struct CGRect dirtyRect; // @synthesize dirtyRect;
@property(retain, nonatomic) MSSelectionPath *hoveringPoint; // @synthesize hoveringPoint;
@property(retain, nonatomic) MSSelectionPathCollection *selectedPoints; // @synthesize selectedPoints;
@property(retain, nonatomic) MSShapePathLayer *shape; // @synthesize shape;
- (void).cxx_destruct;
- (void)drawLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 inFrame:(struct CGRect)arg3;
- (void)drawOutlinePointAtSelectionPath:(id)arg1 isSelected:(BOOL)arg2 selectionCount:(long long)arg3 transformStruct:(struct _CHTransformStruct)arg4;
- (void)drawOutlinePoints;
- (void)drawBetweenPoints;
- (void)draw;
- (id)init;

@end

@interface MSElementPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)attachPopUpWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSElementsInspectorSection : CHViewController <NSMenuDelegate>
{
    NSArray *_layers;	// 104 = 0x68
    NSButton *_layerStyleToggle;	// 112 = 0x70
    NSButton *_textStyleToggle;	// 120 = 0x78
    NSPopUpButton *_sharedObjectsPopUpButton;	// 128 = 0x80
    NSTextField *_editNameField;	// 136 = 0x88
    NSImage *_initialImage;	// 144 = 0x90
    NSTimer *_refreshTimer;	// 152 = 0x98
}

@property(retain, nonatomic) NSTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(retain, nonatomic) NSImage *initialImage; // @synthesize initialImage=_initialImage;
@property(retain, nonatomic) NSTextField *editNameField; // @synthesize editNameField=_editNameField;
@property(retain, nonatomic) NSPopUpButton *sharedObjectsPopUpButton; // @synthesize sharedObjectsPopUpButton=_sharedObjectsPopUpButton;
@property(retain, nonatomic) NSButton *textStyleToggle; // @synthesize textStyleToggle=_textStyleToggle;
@property(retain, nonatomic) NSButton *layerStyleToggle; // @synthesize layerStyleToggle=_layerStyleToggle;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)dealloc;
- (id)document;
- (void)applySharedObject:(id)arg1 toLayer:(id)arg2;
- (struct MSModelObject *)firstSharedObjectFromLayers:(unsigned long long)arg1;
- (struct MSModelObject *)sharedObjectOfType:(unsigned long long)arg1 fromLayer:(id)arg2;
- (id)sharedObjectContainerOfType:(unsigned long long)arg1;
- (BOOL)hasGroupLayers;
- (BOOL)hasOnlyTextLayers;
- (BOOL)layer:(id)arg1 conformsToType:(unsigned long long)arg2;
- (unsigned long long)sharedObjectType;
- (void)generatePreviewForMenuItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)isolateSelectedObject:(id)arg1;
- (void)applySharedObjectToSelection:(id)arg1;
- (void)renameSharedObjectAction:(id)arg1;
- (void)startRenamingSharedObject:(id)arg1;
- (void)createNewSharedObject:(id)arg1;
- (void)showManageSymbolsSheet:(id)arg1;
- (id)displayNameForType:(unsigned long long)arg1;
- (void)duplicateSymbolAction:(id)arg1;
- (void)reloadMenu;
- (unsigned long long)selectedMenuIndexForType:(unsigned long long)arg1;
- (void)updateMenuSelectionToIndex:(unsigned long long)arg1;
- (void)prepareForDisplay;
- (void)refreshTimerFired:(id)arg1;
- (void)selectedElementDidChange:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSEventHandler : CHViewController <NSDraggingDestination, MSInspectorChildController>
{
    BOOL didDrag;	// 104 = 0x68
    struct CGPoint mouseAtTimeOfMenu;	// 112 = 0x70
    MSEventHandlerManager *_manager;	// 128 = 0x80
    id <MSBasicDelegate> _delegate;	// 136 = 0x88
    MSDuplicateOffsetTracker *_offsetTracker;	// 144 = 0x90
    NSString *_pressedKeys;	// 152 = 0x98
}

+ (id)eventHandlerWithManager:(id)arg1;
@property(copy, nonatomic) NSString *pressedKeys; // @synthesize pressedKeys=_pressedKeys;
@property(retain, nonatomic) MSDuplicateOffsetTracker *offsetTracker; // @synthesize offsetTracker=_offsetTracker;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak MSEventHandlerManager *manager; // @synthesize manager=_manager;
- (void).cxx_destruct;
- (void)redo;
- (void)undo;
- (BOOL)shouldHideExportBar;
- (BOOL)inspectorShouldShowBlendingProperties;
- (BOOL)inspectorShouldShowLayerSpecificProperties;
- (BOOL)inspectorShouldShowPositions;
- (BOOL)inspectorShouldShowSharedStyles;
- (void)layerPositionPossiblyChanged;
- (void)willResignFirstResponder;
- (struct CGPoint)centerPointForZooming;
- (void)editLayer:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)editLayer:(id)arg1;
- (void)mouseExited;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (BOOL)handlesHandToolItself;
- (void)willPerformUndo;
- (struct CGRect)rulerGuidesRectAroundMouse:(struct CGPoint)arg1;
- (id)horizontalRulerGuidesForGridAlign:(struct CGPoint)arg1;
- (id)verticalRulerGuidesForGridAlign:(struct CGPoint)arg1;
- (struct CGPoint)alignMouseToGrid:(struct CGPoint)arg1;
- (void)currentPageDidChange;
- (void)layerRulerOriginChanged;
- (void)selectionDidChangeTo:(id)arg1;
- (void)zoomValueDidChange;
- (void)zoomValueWillChangeTo:(double)arg1;
- (double)zoomValue;
- (struct CGPoint)mouseInScreenCoordinates;
- (struct CGPoint)convertPointFromScreenCoordinates:(struct CGPoint)arg1 inGroup:(id)arg2;
- (struct CGPoint)mouseInScreenCoordinatesInGroup:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)imageName;
- (id)toolbarIdentifier;
- (BOOL)shouldDrawLayerSelection;
- (id)selectedLayers;
- (void)changeColor:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (id)defaultCursor;
- (void)drawHandles;
- (void)windowDidResize:(id)arg1;
- (BOOL)arrowKeyIsPressed:(unsigned short)arg1;
- (BOOL)escapeKeyIsPressed:(unsigned short)arg1;
- (BOOL)enterKeyIsPressed:(unsigned short)arg1;
- (BOOL)deleteKeyIsPressed:(unsigned short)arg1;
- (id)lastEvent;
- (id)valueForUndefinedKey:(id)arg1;
- (void)delete:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)focusOnMainWindow;
- (id)duplicateLayer:(id)arg1 toIndex:(unsigned long long)arg2 fromDrag:(BOOL)arg3;
- (id)duplicateSelectedLayersInGroup:(id)arg1 fromDrag:(BOOL)arg2;
- (id)duplicateSelectedLayers:(BOOL)arg1;
- (void)pasteHere:(id)arg1;
- (void)pasteInPlace:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)readFromPasteboard:(id)arg1 importMode:(unsigned long long)arg2;
- (void)writeLayers:(id)arg1 toPasteboard:(id)arg2;
- (void)writeToPasteboard:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (struct CGPoint)zoomPoint:(struct CGPoint)arg1;
- (id)menuForEvent:(id)arg1;
- (void)returnToDefaultHandlerByClickingOutside;
- (void)returnToDefaultHandlerWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)returnToDefaultHandler;
- (void)layerListSelectionDidChange:(id)arg1;
- (void)didUndoNotification:(id)arg1;
- (void)undoNotification:(id)arg1;
- (void)endUndo;
- (void)beginUndo;
- (id)undoManager;
- (void)selectAll:(id)arg1;
- (void)handlerWillLoseFocus;
- (void)selectToolbarItemWithIdentifier:(id)arg1;
- (void)handlerGotFocus;
- (void)keyUp:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)prepareGraphicsStateForGroup:(id)arg1 drawingBlock:(CDUnknownBlockType)arg2;
- (void)absoluteDrawInRect:(struct CGRect)arg1;
- (void)drawInRect:(struct CGRect)arg1;
- (void)viewDidScroll:(id)arg1;
- (BOOL)mouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (BOOL)mouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (void)rightMouseDown:(id)arg1;
- (BOOL)mouseMovedEvent:(id)arg1;
- (BOOL)mouseUpEvent:(id)arg1;
- (BOOL)mouseDraggedEvent:(id)arg1;
- (BOOL)mouseDownEvent:(id)arg1;
- (struct CGPoint)convertAbsolutePointFromEvent:(id)arg1;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1 toLayer:(id)arg2;
@property(nonatomic) struct CGPoint scrollOrigin; // @dynamic scrollOrigin;
- (id)currentGroup;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1;
- (void)refreshViewsWithMask:(unsigned long long)arg1;
- (id)drawView;
- (void)prepareForDisplay;
- (void)dealloc;
- (unsigned long long)inspectorLocation;
- (id)views;
- (id)view;
- (id)nibName;
- (id)initWithManager:(id)arg1;

@end

@interface MSEventHandlerAction : MSBaseAction
{
}

- (BOOL)isSelectable;
- (id)eventHandlerKey;
- (BOOL)validate;
- (BOOL)isActive;
- (void)performAction:(id)arg1;

@end

@interface MSEventHandlerManager : NSObject
{
    id _delegate;	// 8 = 0x8
    BCUndoManager *_undoManager;	// 16 = 0x10
    long long _lastMouseDownClickCount;	// 24 = 0x18
    unsigned long long _lastEventType;	// 32 = 0x20
    MSNormalEventHandler *_normalHandler;	// 40 = 0x28
    MSEventHandler *_secondHandler;	// 48 = 0x30
}

@property(retain, nonatomic) MSEventHandler *secondHandler; // @synthesize secondHandler=_secondHandler;
@property(retain, nonatomic) MSNormalEventHandler *normalHandler; // @synthesize normalHandler=_normalHandler;
@property(nonatomic) unsigned long long lastEventType; // @synthesize lastEventType=_lastEventType;
@property(nonatomic) long long lastMouseDownClickCount; // @synthesize lastMouseDownClickCount=_lastMouseDownClickCount;
@property(retain, nonatomic) BCUndoManager *undoManager; // @synthesize undoManager=_undoManager;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)recordEvent:(id)arg1;
- (void)sendMouseMovedEvent:(id)arg1;
- (void)sendMouseUpEvent:(id)arg1;
- (void)sendMouseDraggedEvent:(id)arg1;
- (void)sendMouseDownEvent:(id)arg1;
- (id)setCurrentHandler:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)setCurrentHandler:(id)arg1;
- (id)setCurrentHandlerKey:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)setCurrentHandlerKey:(id)arg1;
- (id)toggleHandlerKey:(id)arg1;
- (id)defaultHandler;
- (id)handlerForKey:(id)arg1;
- (id)currentHandlerKey;
- (id)currentHandler;
- (void)drawInRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 undoManager:(id)arg2;

@end

@interface MSEventHandlerSection : NSViewController <MSSectionProtocol>
{
    MSEventHandler *handler;	// 104 = 0x68
}

@property(retain, nonatomic) MSEventHandler *handler; // @synthesize handler;
- (void).cxx_destruct;
- (id)views;
@property(readonly, nonatomic) id <MSBasicDelegate> delegate; // @dynamic delegate;
- (id)nibNameForHandler:(id)arg1;
- (id)initWithHandler:(id)arg1;

@end

@interface MSExclusiveOrActionValidation : MSActionValidation
{
    MSActionValidation *_orValidation;	// 8 = 0x8
}

@property(retain, nonatomic) MSActionValidation *orValidation; // @synthesize orValidation=_orValidation;
- (void).cxx_destruct;
- (void)addValidation:(id)arg1;
- (BOOL)validateWithDelegate:(id)arg1 handler:(id)arg2;

@end

@interface MSExportAction : MSBaseAction
{
}

- (id)slices;
- (id)baseNameForSlice;
- (struct CGRect)rectForExportingEntirePage;
- (void)createInitialSlice;
- (void)showInspectorPanelIfNecessary;
- (BOOL)hasArtboardsWitNoExportSlizes;
- (void)performAction:(id)arg1;
- (BOOL)validate;
- (void)export:(id)arg1;

@end

@interface MSExportInspectorViewController : MSStylePartInspectorViewController
{
    NSArray *_layers;	// 112 = 0x70
    NSView *_topFillerView;	// 120 = 0x78
    NSView *_bottomLabelView;	// 128 = 0x80
    NSView *_exportButtonView;	// 136 = 0x88
    NSView *_separatorView;	// 144 = 0x90
    NSView *_separatorView2;	// 152 = 0x98
    NSView *_bigExportLabel;	// 160 = 0xa0
    NSButton *_addExportSizeButton;	// 168 = 0xa8
    NSButton *_shareButton;	// 176 = 0xb0
    NSButton *_exportButton;	// 184 = 0xb8
    NSButton *_knifeButton;	// 192 = 0xc0
    NSArray *_sizeViewControllers;	// 200 = 0xc8
    MSShareButtonHandler *_shareButtonHandler;	// 208 = 0xd0
}

@property(retain, nonatomic) MSShareButtonHandler *shareButtonHandler; // @synthesize shareButtonHandler=_shareButtonHandler;
@property(copy, nonatomic) NSArray *sizeViewControllers; // @synthesize sizeViewControllers=_sizeViewControllers;
@property(retain, nonatomic) NSButton *knifeButton; // @synthesize knifeButton=_knifeButton;
@property(retain, nonatomic) NSButton *exportButton; // @synthesize exportButton=_exportButton;
@property(retain, nonatomic) NSButton *shareButton; // @synthesize shareButton=_shareButton;
@property(retain, nonatomic) NSButton *addExportSizeButton; // @synthesize addExportSizeButton=_addExportSizeButton;
@property(retain, nonatomic) NSView *bigExportLabel; // @synthesize bigExportLabel=_bigExportLabel;
@property(retain, nonatomic) NSView *separatorView2; // @synthesize separatorView2=_separatorView2;
@property(retain, nonatomic) NSView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) NSView *exportButtonView; // @synthesize exportButtonView=_exportButtonView;
@property(retain, nonatomic) NSView *bottomLabelView; // @synthesize bottomLabelView=_bottomLabelView;
@property(retain, nonatomic) NSView *topFillerView; // @synthesize topFillerView=_topFillerView;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)dealloc;
- (void)prepareForDisplay;
- (void)exportSingleSlice:(id)arg1;
- (void)shareAction:(id)arg1;
- (id)createSliceForLayer:(id)arg1;
- (void)createSliceAction:(id)arg1;
- (void)addExportSize:(id)arg1;
- (BOOL)wantsSeparatorBetweenView:(id)arg1 andView:(id)arg2;
- (id)views;
- (id)view;
- (BOOL)hasEnabledStyle;
- (void)applyDisplayNameToExportButton;
- (void)prepare;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)awakeFromNib;

@end

@interface MSExportOptions : _MSExportOptions
{
}

- (id)addExportSize;

@end

@interface MSExportRenderer : NSObject <DKContextDelegate>
{
    BOOL _isPrinting;	// 8 = 0x8
    MSExportRequest *_request;	// 16 = 0x10
    NSColorSpace *_colorSpace;	// 24 = 0x18
    MSExportRendererView *_renderView;	// 32 = 0x20
    struct CGRect _bounds;	// 40 = 0x28
}

+ (id)exportRendererForRequest:(id)arg1 colorSpace:(id)arg2;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(retain, nonatomic) MSExportRendererView *renderView; // @synthesize renderView=_renderView;
@property(retain, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(nonatomic) BOOL isPrinting; // @synthesize isPrinting=_isPrinting;
@property(retain, nonatomic) MSExportRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)dealloc;
- (BOOL)rendererShouldInterruptRendering;
- (BOOL)rendererShouldForceDrawingLayer:(id)arg1;
- (BOOL)rendererNeedsToDrawRect:(struct CGRect)arg1;
- (BOOL)rendererShouldSkipDrawingLayer:(id)arg1;
- (id)printView;
- (void)drawRect:(struct CGRect)arg1;
- (void)preRenderGradientsForLayer:(id)arg1 context:(id)arg2;
- (void)preRenderGradientsForRootLayer:(id)arg1 context:(id)arg2;
- (void)drawSliceBackgroundIfNecessary;
- (id)bitmapImageRep;
- (id)basicBitmapImageRep;
- (void)draw;
- (id)TIFFData;
- (id)PNGData;
- (id)JPGData;
- (id)EPSData;
- (id)image;
- (id)data;
- (struct CGRect)boundsForVectorRender;
- (id)PDFData;

@end

@interface MSExportRendererView : NSView
{
    MSExportRenderer *_renderer;	// 152 = 0x98
}

@property(nonatomic) __weak MSExportRenderer *renderer; // @synthesize renderer=_renderer;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSExportRendererWithSVGSupport : MSExportRenderer
{
}

- (id)data;

@end

@interface MSExportRequest : NSObject
{
    BOOL _shouldTrim;	// 8 = 0x8
    BOOL _saveForWeb;	// 9 = 0x9
    BOOL _progressive;	// 10 = 0xa
    BOOL _compact;	// 11 = 0xb
    BOOL _includeArtboardBackground;	// 12 = 0xc
    NSString *_name;	// 16 = 0x10
    unsigned long long _options;	// 24 = 0x18
    NSSet *_includedLayerIDs;	// 32 = 0x20
    MSColor *_backgroundColor;	// 40 = 0x28
    double _scale;	// 48 = 0x30
    MSPage *_page;	// 56 = 0x38
    NSString *_format;	// 64 = 0x40
    double _compression;	// 72 = 0x48
    id _rootLayerID;	// 80 = 0x50
    struct CGRect _rect;	// 88 = 0x58
}

+ (id)requestWithRect:(struct CGRect)arg1 scale:(double)arg2;
+ (id)requestWithName:(id)arg1 rect:(struct CGRect)arg2;
@property(copy, nonatomic) id rootLayerID; // @synthesize rootLayerID=_rootLayerID;
@property(nonatomic) BOOL includeArtboardBackground; // @synthesize includeArtboardBackground=_includeArtboardBackground;
@property(nonatomic) BOOL compact; // @synthesize compact=_compact;
@property(nonatomic) BOOL progressive; // @synthesize progressive=_progressive;
@property(nonatomic) double compression; // @synthesize compression=_compression;
@property(nonatomic) BOOL saveForWeb; // @synthesize saveForWeb=_saveForWeb;
@property(copy, nonatomic) NSString *format; // @synthesize format=_format;
@property(retain, nonatomic) MSPage *page; // @synthesize page=_page;
@property(nonatomic) BOOL shouldTrim; // @synthesize shouldTrim=_shouldTrim;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(copy, nonatomic) MSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSSet *includedLayerIDs; // @synthesize includedLayerIDs=_includedLayerIDs;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (void).cxx_destruct;
- (BOOL)layerIsIncluded:(id)arg1;
- (id)init;

@end

@interface MSExportSheet : CHSheetController
{
    NSCollectionView *_collectionView;	// 80 = 0x50
    NSButton *_includeAllSlicesCheckBox;	// 88 = 0x58
    NSButton *_exportButton;	// 96 = 0x60
    NSArray *_slices;	// 104 = 0x68
    NSSet *_warningSliceIDs;	// 112 = 0x70
}

@property(retain, nonatomic) NSSet *warningSliceIDs; // @synthesize warningSliceIDs=_warningSliceIDs;
@property(retain, nonatomic) NSArray *slices; // @synthesize slices=_slices;
@property(retain, nonatomic) NSButton *exportButton; // @synthesize exportButton=_exportButton;
@property(retain, nonatomic) NSButton *includeAllSlicesCheckBox; // @synthesize includeAllSlicesCheckBox=_includeAllSlicesCheckBox;
@property(retain, nonatomic) NSCollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (id)documentData;
- (id)document;
- (void)confirm:(id)arg1;
- (id)collectionView:(id)arg1 newItemForRepresentedObject:(id)arg2;
- (void)resizeWindowToFit;
- (BOOL)hasUncheckedSlices;
- (void)includeAllCheckboxAction:(id)arg1;
- (long long)includeAllSlicesCheckBoxState;
- (void)validateIncludeAllSlicesCheckBox;
- (void)findOverlappingSlices:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSExportSheetItem : NSCollectionViewItem
{
    BOOL _showWarningLabel;	// 136 = 0x88
    MSSliceDragView *_previewView;	// 144 = 0x90
    NSTextField *_titleField;	// 152 = 0x98
    NSTextField *_subTitleField;	// 160 = 0xa0
    NSButton *_checkBox;	// 168 = 0xa8
    NSImageView *_warningView;	// 176 = 0xb0
    MSExportSheet *_exportSheet;	// 184 = 0xb8
}

@property(nonatomic) BOOL showWarningLabel; // @synthesize showWarningLabel=_showWarningLabel;
@property(nonatomic) __weak MSExportSheet *exportSheet; // @synthesize exportSheet=_exportSheet;
@property(retain, nonatomic) NSImageView *warningView; // @synthesize warningView=_warningView;
@property(retain, nonatomic) NSButton *checkBox; // @synthesize checkBox=_checkBox;
@property(retain, nonatomic) NSTextField *subTitleField; // @synthesize subTitleField=_subTitleField;
@property(retain, nonatomic) NSTextField *titleField; // @synthesize titleField=_titleField;
@property(retain, nonatomic) MSSliceDragView *previewView; // @synthesize previewView=_previewView;
- (void).cxx_destruct;
- (void)checkBoxAction:(id)arg1;
- (id)subTitle;
- (void)loadUI;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSExportSize : _MSExportSize
{
}

+ (id)defaultNameForScale:(double)arg1;
+ (id)migrateExportSizesWithName:(id)arg1 currentResolution:(long long)arg2 includeRetinaVersion:(BOOL)arg3;
+ (id)validFormats;
+ (id)sizeWithScale:(double)arg1 name:(id)arg2 format:(id)arg3;
- (id)description;
- (id)defaultName;
- (void)remove;
- (id)parentLayer;
- (id)initWithScale:(double)arg1 name:(id)arg2 format:(id)arg3;
- (BOOL)isVectorExport;

@end

@interface MSExportSizeViewController : CHViewController
{
    NSPopUpButton *_formatPopup;	// 104 = 0x68
    NSButton *_removeSizeButton;	// 112 = 0x70
    NSView *_sizeView;	// 120 = 0x78
    NSView *_scaleView;	// 128 = 0x80
    NSArray *_exportSizes;	// 136 = 0x88
    NSComboBox *_scaleField;	// 144 = 0x90
}

@property(retain, nonatomic) NSComboBox *scaleField; // @synthesize scaleField=_scaleField;
@property(retain, nonatomic) NSArray *exportSizes; // @synthesize exportSizes=_exportSizes;
@property(retain, nonatomic) NSView *scaleView; // @synthesize scaleView=_scaleView;
@property(retain, nonatomic) NSView *sizeView; // @synthesize sizeView=_sizeView;
@property(retain, nonatomic) NSButton *removeSizeButton; // @synthesize removeSizeButton=_removeSizeButton;
@property(retain, nonatomic) NSPopUpButton *formatPopup; // @synthesize formatPopup=_formatPopup;
- (void).cxx_destruct;
- (void)scaleFieldAction:(id)arg1;
- (void)formatPopupAction:(id)arg1;
- (void)removeExportSize:(id)arg1;
- (id)firstSize;
- (void)prepare;

@end

@interface MSExportStackView : MSStackView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSExportableLayerInspectorViewController : CHViewController <MSSectionProtocol, MSInspectorChildController, MSSliceLayerWatcher, MSColorInspectorDelegate, BCPopoverDelegate>
{
    MSInspectorStackView *_stackView;	// 104 = 0x68
    NSView *_currentStyleSliceTopView;	// 112 = 0x70
    NSView *_oldStyleSliceTopView;	// 120 = 0x78
    NSView *_addMoreSizesView;	// 128 = 0x80
    NSView *_standardPropertiesView;	// 136 = 0x88
    NSView *_artboardBackgroundView;	// 144 = 0x90
    NSView *_sliceBackgroundView;	// 152 = 0x98
    NSTableView *_oldSliceIncludedTable;	// 160 = 0xa0
    NSMatrix *_oldStyleIncludeMatrix;	// 168 = 0xa8
    NSButtonCell *_oldSliceIncludeAll;	// 176 = 0xb0
    NSButtonCell *_oldSliceIncludeFollowing;	// 184 = 0xb8
    NSButtonCell *_oldSliceIncludeGroup;	// 192 = 0xc0
    NSButton *_groupContentsOnlyButton;	// 200 = 0xc8
    MSColorPreviewButton *_artboardBackgroundColorButton;	// 208 = 0xd0
    MSColorPreviewButton *_sliceBackgroundColorButton;	// 216 = 0xd8
    NSView *_topFillerView;	// 224 = 0xe0
    NSView *_bottomLabelView;	// 232 = 0xe8
    NSTextField *_formatLabel;	// 240 = 0xf0
    NSArray *_layers;	// 248 = 0xf8
    MSOldStyleSliceViewDataSource *_oldStyleDataSource;	// 256 = 0x100
    NSArray *_sizeViewControllers;	// 264 = 0x108
    BCPopover *_popover;	// 272 = 0x110
    NSTimer *_refreshTimer;	// 280 = 0x118
    NSMutableArray *_sliceViews;	// 288 = 0x120
    CHFlippedView *_sliceViewContainerView;	// 296 = 0x128
}

@property(retain, nonatomic) CHFlippedView *sliceViewContainerView; // @synthesize sliceViewContainerView=_sliceViewContainerView;
@property(retain, nonatomic) NSMutableArray *sliceViews; // @synthesize sliceViews=_sliceViews;
@property(retain, nonatomic) NSTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSArray *sizeViewControllers; // @synthesize sizeViewControllers=_sizeViewControllers;
@property(retain, nonatomic) MSOldStyleSliceViewDataSource *oldStyleDataSource; // @synthesize oldStyleDataSource=_oldStyleDataSource;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(retain, nonatomic) NSTextField *formatLabel; // @synthesize formatLabel=_formatLabel;
@property(retain, nonatomic) NSView *bottomLabelView; // @synthesize bottomLabelView=_bottomLabelView;
@property(retain, nonatomic) NSView *topFillerView; // @synthesize topFillerView=_topFillerView;
@property(retain, nonatomic) MSColorPreviewButton *sliceBackgroundColorButton; // @synthesize sliceBackgroundColorButton=_sliceBackgroundColorButton;
@property(retain, nonatomic) MSColorPreviewButton *artboardBackgroundColorButton; // @synthesize artboardBackgroundColorButton=_artboardBackgroundColorButton;
@property(retain, nonatomic) NSButton *groupContentsOnlyButton; // @synthesize groupContentsOnlyButton=_groupContentsOnlyButton;
@property(retain, nonatomic) NSButtonCell *oldSliceIncludeGroup; // @synthesize oldSliceIncludeGroup=_oldSliceIncludeGroup;
@property(retain, nonatomic) NSButtonCell *oldSliceIncludeFollowing; // @synthesize oldSliceIncludeFollowing=_oldSliceIncludeFollowing;
@property(retain, nonatomic) NSButtonCell *oldSliceIncludeAll; // @synthesize oldSliceIncludeAll=_oldSliceIncludeAll;
@property(retain, nonatomic) NSMatrix *oldStyleIncludeMatrix; // @synthesize oldStyleIncludeMatrix=_oldStyleIncludeMatrix;
@property(retain, nonatomic) NSTableView *oldSliceIncludedTable; // @synthesize oldSliceIncludedTable=_oldSliceIncludedTable;
@property(retain, nonatomic) NSView *sliceBackgroundView; // @synthesize sliceBackgroundView=_sliceBackgroundView;
@property(retain, nonatomic) NSView *artboardBackgroundView; // @synthesize artboardBackgroundView=_artboardBackgroundView;
@property(retain, nonatomic) NSView *standardPropertiesView; // @synthesize standardPropertiesView=_standardPropertiesView;
@property(retain, nonatomic) NSView *addMoreSizesView; // @synthesize addMoreSizesView=_addMoreSizesView;
@property(retain, nonatomic) NSView *oldStyleSliceTopView; // @synthesize oldStyleSliceTopView=_oldStyleSliceTopView;
@property(retain, nonatomic) NSView *currentStyleSliceTopView; // @synthesize currentStyleSliceTopView=_currentStyleSliceTopView;
@property(retain, nonatomic) MSInspectorStackView *stackView; // @synthesize stackView=_stackView;
- (void).cxx_destruct;
- (BOOL)shouldHideExportBar;
- (void)refreshAction:(id)arg1;
- (id)document;
- (void)exportSingleSlice:(id)arg1;
- (void)addExportSizeAction:(id)arg1;
- (unsigned long long)selectedExportOptions:(id)arg1;
- (void)oldStyleIncludedRadioAction:(id)arg1;
- (BOOL)hasOldStyleSlices;
- (id)nibName;
- (id)viewControllers;
- (id)views;
- (BOOL)wantsSeparatorBetweenView:(id)arg1 andView:(id)arg2;
- (void)sizeSliceView;
- (void)reloadSlicesFromArray:(id)arg1;
- (void)loadSliceViews;
- (void)refreshTimerFired:(id)arg1;
- (void)scheduleSliceViewReload;
- (void)prepareForDisplay;
- (void)dealloc;
- (void)sliceLayerDidChange:(id)arg1;
- (void)selectionDidChangeTo:(id)arg1;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)viewControllerWillDisappear;
- (void)popoverWillClose:(id)arg1;
- (void)validateArtboardBackgroundButtons;
- (void)backgroundColorAction:(id)arg1;
- (void)prepareArtboardsForFill;
- (void)layerPositionPossiblyChanged;
- (void)artboardBackgroundCheckAction:(id)arg1;
- (void)groupContentsOnlyAction:(id)arg1;
- (void)exportableSizeDidChange:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSFactory : CHSingletonObject
{
    NSMutableArray *factoryObjects;	// 8 = 0x8
    MSVersionedArchive *_archive;	// 16 = 0x10
}

+ (id)filename;
+ (id)factory;
@property(retain, nonatomic) MSVersionedArchive *archive; // @synthesize archive=_archive;
- (void).cxx_destruct;
- (unsigned long long)indexOfObjectByComparingPointers:(id)arg1;
- (void)moveObjectAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)load;
- (void)save;
- (unsigned long long)count;
- (void)dealloc;
- (id)init;

@end

@interface MSFastPathBuilder : NSObject
{
    unsigned long long mWidth;	// 8 = 0x8
    unsigned long long mHeight;	// 16 = 0x10
    char *mMaskData;	// 24 = 0x18
    unsigned long long mMaskRowBytes;	// 32 = 0x20
}

+ (id)pathForMaskImage:(id)arg1;
- (void)flushPath:(id)arg1 cachedPoint2:(struct CGPoint *)arg2;
- (void)addPoint:(struct CGPoint)arg1 toPath:(id)arg2 cachedPoint1:(struct CGPoint *)arg3 cachedPoint2:(struct CGPoint *)arg4;
- (void)removeSegment:(id)arg1 fromSegmentPath:(id)arg2;
- (void)unwindOneSegmentPath:(id)arg1 intoPath:(id)arg2;
- (id)convertSegmentsIntoPath:(id)arg1;
- (struct CGPoint)pointFromValue:(id)arg1;
- (id)valueFromPoint:(struct CGPoint)arg1;
- (void)insertLineStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2 intoDictionary:(id)arg3;
- (id)buildLineSegments;
- (id)path;
- (void)dealloc;
- (id)initWithMask:(struct CGImage *)arg1;

@end

@interface MSFillAndBorderColorScreenPicker : NSObject
{
}

+ (void)setPreferredStylePartName:(id)arg1;
+ (void)changeColorForTextLayer:(id)arg1 color:(id)arg2;
+ (id)stylesForColorAdjusting:(id)arg1;
+ (void)changeColorForNormalLayer:(id)arg1 color:(id)arg2;
+ (void)applyColor:(id)arg1 toLayers:(id)arg2;
+ (void)pickColorForLayers:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface MSFillInspectorViewController : MSStylePartInspectorViewController
{
    MSColorPreviewButton *colorButton;	// 112 = 0x70
    NSTextField *opacityFieldColor;	// 120 = 0x78
    NSTextField *opacityFieldGradientOrPattern;	// 128 = 0x80
}

- (void).cxx_destruct;
- (void)opacityFieldAction:(id)arg1;
- (id)correctOpacityField;
- (void)showCorrectOpacityField;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)prepare;

@end

@interface MSFillOptionsInspectorViewController : CHViewController <BCPopoverContentController>
{
    NSArray *_layers;	// 104 = 0x68
}

@property(retain, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;

@end

@interface MSFillStyleCollection : MSStylePartCollection
{
}

- (id)gradientFillForInserting;
- (id)colorFillForInserting;
- (id)stylePartForInserting;
- (void)migratePropertiesFromV31OrEarlierWithCoder:(id)arg1;

@end

@interface MSFlatSectionBackgroundSeparatorView : MSSectionBackgroundSeparatorView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSFlattenAction : MSBaseAction
{
}

- (id)tooltip;
- (void)flattenShape:(id)arg1;
- (BOOL)shouldWarnAboutFlattening;
- (void)flattenIgnoringWarning;
- (void)doFlatten;
- (void)performAction:(id)arg1;
- (void)flatten:(id)arg1;
- (BOOL)validate;

@end

@interface MSFlattenSelectionAction : MSBaseAction
{
}

- (BOOL)validate;
- (void)flattenSelection:(id)arg1;

@end

@interface MSFlattenWarningSheet : CHSheetController
{
    CDUnknownBlockType _completionBlock;	// 80 = 0x50
}

@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (void).cxx_destruct;
- (void)confirm:(id)arg1;

@end

@interface MSFlipHorizontalAction : MSBaseFlipAction
{
}

- (void)performAction:(id)arg1;
- (void)flipHorizontal:(id)arg1;

@end

@interface MSFlipVerticalAction : MSBaseFlipAction
{
}

- (void)performAction:(id)arg1;
- (void)flipVertical:(id)arg1;

@end

@interface MSFontFamilyPickerViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource, BCPopoverContentController>
{
    CDUnknownBlockType _completionBlock;	// 104 = 0x68
    MSFontList *_fontList;	// 112 = 0x70
    NSTableView *_tableView;	// 120 = 0x78
}

@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) MSFontList *fontList; // @synthesize fontList=_fontList;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (void).cxx_destruct;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)searchFieldAction:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)doubleClickTableView:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSFontList : NSObject
{
    unsigned long long _cachingIndex;	// 8 = 0x8
    NSArray *_commonFonts;	// 16 = 0x10
    NSArray *_systemFonts;	// 24 = 0x18
    NSArray *_allFonts;	// 32 = 0x20
    NSArray *_filterFonts;	// 40 = 0x28
}

+ (void)initialize;
@property(retain, nonatomic) NSArray *filterFonts; // @synthesize filterFonts=_filterFonts;
@property(retain, nonatomic) NSArray *allFonts; // @synthesize allFonts=_allFonts;
@property(retain, nonatomic) NSArray *systemFonts; // @synthesize systemFonts=_systemFonts;
@property(retain, nonatomic) NSArray *commonFonts; // @synthesize commonFonts=_commonFonts;
- (void).cxx_destruct;
- (void)stopCachingFonts;
- (void)startCachingFonts;
- (void)clearFilter;
- (void)filter:(id)arg1;
- (id)fontForFontAtIndex:(unsigned long long)arg1;
- (id)nameOfFontAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfFonts;
- (void)findCommonFontsInDocument:(id)arg1;
- (void)findSystemFonts;
- (void)prepareList:(id)arg1;

@end

@interface MSFontNamesTableView : NSTableView
{
}

- (void)cancelOperation:(id)arg1;
- (void)keyDown:(id)arg1;

@end

@interface MSFontSizeUpDownComboBox : MSUpDownComboBox
{
}

- (double)minimumValue;

@end

@interface MSGradient : _MSGradient
{
    BOOL svgPositionIsAbsolute;	// 8 = 0x8
    double opacity;	// 16 = 0x10
}

@property(readonly, nonatomic) double opacity; // @synthesize opacity;
@property(nonatomic) BOOL svgPositionIsAbsolute; // @synthesize svgPositionIsAbsolute;
- (BOOL)hasOpacity;
- (void)setGradientType:(long long)arg1;
- (double)convertPointToPosition:(struct CGPoint)arg1;
- (void)_removeStopAtIndex:(unsigned long long)arg1;
- (void)_insertStop:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_addStop:(id)arg1;
- (void)removeStopAtIndex:(unsigned long long)arg1;
- (unsigned long long)addStopAtLength:(double)arg1;
- (long long)addStopAtPosition:(struct CGPoint)arg1;
- (void)setColor:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)colorAtIndex:(unsigned long long)arg1;
- (id)stopAtIndex:(unsigned long long)arg1;
- (void)setPoint:(struct CGPoint)arg1 atIndex:(unsigned long long)arg2;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (void)gradientPointArray:(id)arg1 replacePointAtIndex:(unsigned long long)arg2 withPoint:(struct CGPoint)arg3;
- (double)elipseLength;
- (id)points;
- (void)rotatePointsBy:(long long)arg1;
- (void)invert;
- (id)NSGradientWithColorSpace:(id)arg1;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (BOOL)canSmoothOpacity;
- (id)gradientFromStops:(id)arg1 colorSpace:(id)arg2;
- (BOOL)hasDefaultValues;
- (id)defaultStopsArray;
- (id)initBlankGradient;
- (long long)indexInPoints:(struct CGPoint *)arg1 closestToPoint:(struct CGPoint)arg2;
- (id)CSSColorStopsStringWithMasterAlpha:(double)arg1;
- (id)radialCSSGradientStringWithMasterAlpha:(double)arg1;
- (id)linearCSSGradientStringForAgent:(id)arg1 withMasterAlpha:(double)arg2;
- (id)gradientStringForAgent:(id)arg1 withMasterAlpha:(double)arg2;
- (id)CSSAttributeStringWithMasterAlpha:(double)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (float)safeDecodeFloatInCoder:(id)arg1 forKey:(id)arg2;
- (void)initLegacyWithCoder:(id)arg1;
- (id)elipseTransformInRect:(struct CGRect)arg1;
- (id)NSGradientForContext:(id)arg1;
- (void)setHasDonePreRenderingForContext:(id)arg1;
- (id)keyForContext:(id)arg1;
- (BOOL)hasDonePreRenderingForContext:(id)arg1;
- (void)drawAngularGradientInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)drawRadialFillInRect:(struct CGRect)arg1 context:(id)arg2 gradient:(id)arg3;
- (void)drawLinearFillInRect:(struct CGRect)arg1 gradient:(id)arg2;
- (void)_drawFillInRect:(struct CGRect)arg1 forBorderThickness:(double)arg2 context:(id)arg3 gradient:(id)arg4;
- (void)preRenderInRect:(struct CGRect)arg1 context:(id)arg2;
- (void)drawFillInRect:(struct CGRect)arg1 forBorderThickness:(double)arg2 context:(id)arg3;
- (id)interpolatedStartAndStopColorForStops:(id)arg1 context:(id)arg2;
- (struct CGImage *)newAngularGradientImageInRect:(struct CGRect)arg1 stops:(id)arg2 context:(id)arg3;
- (id)sortedStops;
- (id)angularGradientImageInRect:(struct CGRect)arg1 context:(id)arg2;
- (id)angularGradientImageInRect:(struct CGRect)arg1 context:(id)arg2 shouldCache:(BOOL)arg3;

// Remaining properties
@property(nonatomic) BOOL shouldSmoothenOpacity;

@end

@interface MSGradientBarView : BCColorPickerBaseView
{
    id <MSGradientBarViewDelegate> _delegate;	// 176 = 0xb0
    MSGradient *_gradient;	// 184 = 0xb8
    unsigned long long _selectedStopIndex;	// 192 = 0xc0
}

@property(nonatomic) unsigned long long selectedStopIndex; // @synthesize selectedStopIndex=_selectedStopIndex;
@property(retain, nonatomic) MSGradient *gradient; // @synthesize gradient=_gradient;
@property(nonatomic) __weak id <MSGradientBarViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)acceptsFirstResponder;
- (BOOL)canBecomeKeyView;
- (BOOL)canDoAdvancedGradientStopModifications;
- (void)centerStopBetween;
- (void)setSelectedStopToPercentage:(long long)arg1;
- (void)insertText:(id)arg1;
- (id)previousStop;
- (id)nextStop;
- (id)selectedStop;
- (void)moveSelectedStopBy:(double)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)drawSelectedMarkerInRect:(struct CGRect)arg1 color:(id)arg2;
- (void)drawContentInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (double)stopPositionForEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (unsigned long long)stopIndexForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (struct CGRect)normaliseRect:(struct CGRect)arg1;
- (struct CGRect)rectForMarkerAtIndex:(unsigned long long)arg1;
- (void)awakeFromNib;

@end

@interface MSGradientEventHandler : MSPointsEventHandler
{
    NSCursor *selectPointCursor;	// 160 = 0xa0
    NSCursor *insertPointCursor;	// 168 = 0xa8
    MSStyleBasicFill *_stylePart;	// 176 = 0xb0
    id <MSGradientEventHandlerDelegate> _gradientDelegate;	// 184 = 0xb8
}

+ (id)gradientHandlerForStylePart:(id)arg1 manager:(id)arg2;
@property(nonatomic) __weak id <MSGradientEventHandlerDelegate> gradientDelegate; // @synthesize gradientDelegate=_gradientDelegate;
@property(retain, nonatomic) MSStyleBasicFill *stylePart; // @synthesize stylePart=_stylePart;
- (void).cxx_destruct;
- (void)selectionDidChangeTo:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (void)refresh;
- (id)cursorWithDrawingBlock:(CDUnknownBlockType)arg1;
- (id)insertPointCursor;
- (id)selectPointCursor;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (void)concatTransformsForDrawSnaps;
- (BOOL)useSnaps;
- (BOOL)shouldDisplayMessageForSelectedStop;
- (id)previousStop;
- (id)nextStop;
- (id)selectedStop;
- (void)centerStopBetween;
- (void)setSelectedStopToPercentage:(long long)arg1;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)delete:(id)arg1;
- (void)setSelectedPoint:(long long)arg1;
- (BOOL)hasSelectedPoint;
- (BOOL)canInsertPointAtMouse:(struct CGPoint)arg1;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)handleLinesColor;
- (void)drawHandleLines;
- (long long)addStopAtPosition:(struct CGPoint)arg1;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (void)repairGradientIfNecessary;
- (struct CGRect)paddingRectAroundPoints;
- (void)colorMagnifierAction:(id)arg1;
- (id)gradient;
- (id)points;
- (void)drawDotAtPoint:(struct CGPoint)arg1 index:(long long)arg2 selected:(BOOL)arg3;
- (void)handlerWillLoseFocus;
- (void)returnToDefaultHandlerByClickingOutside;
- (void)handlerGotFocus;
- (void)didUndoNotification:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;

@end

@interface MSGradientFactory : MSFactory
{
}

+ (id)filename;
- (void)addGradient:(id)arg1;
@property(readonly, nonatomic) NSArray *gradients; // @dynamic gradients;

@end

@interface MSGradientPointArray : MSPointArray
{
    id _delegate;	// 16 = 0x10
}

@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)replacePointAtIndex:(unsigned long long)arg1 withPoint:(struct CGPoint)arg2;

@end

@interface MSGradientStop : _MSGradientStop
{
}

+ (id)stopWithPosition:(double)arg1 color:(id)arg2;
- (double)cappedBounds:(double)arg1;
- (void)setPosition:(double)arg1;
- (id)initWithPosition:(double)arg1 color:(id)arg2;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (id)transformDecodedObjectIfNecessary:(id)arg1 key:(id)arg2;

@end

@interface MSGraphicsContextSettings : _MSGraphicsContextSettings
{
}

+ (int)blendModeForTag:(long long)arg1;
- (id)description;
- (void)setBlendMode:(long long)arg1;
- (BOOL)shouldChangeGraphicsContext;
- (void)resetContext:(id)arg1 withOptions:(long long)arg2;
- (void)prepareContext:(id)arg1 withOptions:(long long)arg2;

@end

@interface MSGridSheet : CHSheetController <NSWindowDelegate>
{
    NSButton *_centerGridButton;	// 80 = 0x50
    MSSimpleGrid *_originalGrid;	// 88 = 0x58
    MSSimpleGrid *_grid;	// 96 = 0x60
}

@property(retain, nonatomic) MSSimpleGrid *grid; // @synthesize grid=_grid;
@property(copy, nonatomic) MSSimpleGrid *originalGrid; // @synthesize originalGrid=_originalGrid;
@property(retain, nonatomic) NSButton *centerGridButton; // @synthesize centerGridButton=_centerGridButton;
- (void).cxx_destruct;
- (void)gridChanged:(id)arg1;
- (void)setAsDefault:(id)arg1;
- (void)confirm:(id)arg1;
- (void)refreshView;
- (void)cancelAction:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSGroupAction : MSBaseAction
{
}

- (void)groupLayers:(id)arg1 asGroup:(id)arg2 inGroup:(id)arg3;
- (id)groupNameForLayers:(id)arg1;
- (id)groupLayers:(id)arg1;
- (void)performAction:(id)arg1;
- (void)group:(id)arg1;
- (id)validation;
- (id)tooltip;

@end

@interface MSGroupCloser : NSObject
{
}

+ (void)doCloseGroup:(id)arg1;
+ (BOOL)shouldCloseGroup:(id)arg1;
+ (void)tryCloseSubgroupsOfGroup:(id)arg1;
+ (void)tryCloseGroup:(id)arg1;
+ (void)closeGroupsOnPage:(id)arg1;

@end

@interface MSHideLayerAction : MSBaseAction
{
}

- (BOOL)dynamicTitle;
- (void)hideLayer:(id)arg1;
- (id)label;
- (BOOL)validate;

@end

@interface MSHoverButton : MSProButton
{
    BOOL _mouseIsHovering;	// 172 = 0xac
}

@property(nonatomic) BOOL mouseIsHovering; // @synthesize mouseIsHovering=_mouseIsHovering;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSHoverButtonCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSIOSConnectAction : MSProAction <NSMenuDelegate, NSPopoverDelegate>
{
    NSPopover *_popover;	// 16 = 0x10
}

@property(retain, nonatomic) NSPopover *popover; // @synthesize popover=_popover;
- (void).cxx_destruct;
- (void)dealloc;
- (void)popoverDidClose:(id)arg1;
- (void)showPopoverToButton:(id)arg1 viewController:(id)arg2;
- (void)closePopover;
- (void)showNoClientsEverConnectedWindow:(id)arg1;
- (void)showNoClientsWindow:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (id)menu;
- (BOOL)showInToolbar;
- (void)performAction:(id)arg1;
- (void)iOSConnectAction:(id)arg1;
- (id)connectionController;
- (BOOL)validate;
- (BOOL)validateToolbarItem:(id)arg1;
- (BOOL)hasSubMenu;
- (id)imageName;
- (id)label;
- (id)tooltip;

@end

@interface MSIOSConnectFirstTimeViewController : CHViewController
{
}

- (void)helpAction:(id)arg1;
- (void)buySketchPlayAction:(id)arg1;

@end

@interface MSIOSConnectNoClientsViewController : CHViewController
{
}

- (void)helpAction:(id)arg1;

@end

@interface MSIOSConnectionController : NSObject <NSMenuDelegate>
{
    BCBonjourController *_bonjourController;	// 8 = 0x8
    NSMenu *_connectionMenu;	// 16 = 0x10
    MSDocument *_currentDocument;	// 24 = 0x18
    MSArtboardGroup *_currentArtboard;	// 32 = 0x20
}

+ (BOOL)sketchPlayDebugEnabled;
+ (BOOL)sketchPlayEnabled;
@property(retain, nonatomic) MSArtboardGroup *currentArtboard; // @synthesize currentArtboard=_currentArtboard;
@property(retain, nonatomic) MSDocument *currentDocument; // @synthesize currentDocument=_currentDocument;
@property(retain, nonatomic) NSMenu *connectionMenu; // @synthesize connectionMenu=_connectionMenu;
@property(retain, nonatomic) BCBonjourController *bonjourController; // @synthesize bonjourController=_bonjourController;
- (void).cxx_destruct;
- (void)handleCommandErrorWithReceiver:(id)arg1 message:(id)arg2;
- (void)handleCommandShowingWithReceiver:(id)arg1 message:(id)arg2;
- (void)handleCommandSystemWithReceiver:(id)arg1 message:(id)arg2;
- (id)labelForConnectionButton;
- (id)tooltipForConnectionButton;
- (id)imageNameForConnectionButton;
- (void)connectoToDefaultDeviceWithDocument:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)sendDebug:(id)arg1;
- (void)resetArtboards:(id)arg1;
- (void)refreshArtboards:(id)arg1;
- (void)disconnectAll:(id)arg1;
- (void)connectAll:(id)arg1;
- (void)connectToDevice:(id)arg1;
- (void)setCurrentDocumentFromActionSender:(id)arg1;
- (void)populateConnectionMenu:(id)arg1;
- (void)sendListOfPagesAndSlicesForDocument:(id)arg1;
- (void)sendSlice:(id)arg1 page:(id)arg2 artboard:(id)arg3;
- (id)scalesNeededForArtboard:(id)arg1 clients:(id)arg2;
- (void)clientsChangedNotification:(id)arg1;
- (void)documentWillCloseNotification:(id)arg1;
- (void)documentChangedNotification:(id)arg1;
- (void)artboardSelectedNotification:(id)arg1;
- (void)artboardsChangedNotification:(id)arg1;
- (void)pagesChangedNotification:(id)arg1;
- (void)stopListeningForNotifications;
- (void)listenForNotifications;
- (BOOL)gotMultipleClients;
- (BOOL)gotClients;
- (BOOL)gotConnections;
- (void)setupBonjourController;
- (void)dealloc;
- (id)init;
- (void)setSketchPlayUsed;
- (BOOL)sketchPlayUsed;

@end

@interface MSIOSRefreshCollector : NSObject
{
    NSTimer *_timer;	// 8 = 0x8
    NSMapTable *_dirtyRectsPerArtboard;	// 16 = 0x10
    MSIOSRefreshRenderer *_refreshRenderer;	// 24 = 0x18
    MSIOSConnectionController *_connectionController;	// 32 = 0x20
}

@property(retain, nonatomic) MSIOSConnectionController *connectionController; // @synthesize connectionController=_connectionController;
@property(retain, nonatomic) MSIOSRefreshRenderer *refreshRenderer; // @synthesize refreshRenderer=_refreshRenderer;
@property(retain, nonatomic) NSMapTable *dirtyRectsPerArtboard; // @synthesize dirtyRectsPerArtboard=_dirtyRectsPerArtboard;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
- (void).cxx_destruct;
- (id)totalRectForArtboard:(id)arg1;
- (void)timerFired:(id)arg1;
- (id)dirtyRectsForArtboard:(id)arg1;
- (void)collectRefreshRect:(struct CGRect)arg1 onArtboard:(id)arg2;
- (void)collectRefreshRect:(struct CGRect)arg1 page:(id)arg2;
- (BOOL)shouldCollectRefreshes;
- (void)scheduleTimerWithInterval:(double)arg1;
- (void)dealloc;
- (id)init;

@end

@interface MSIOSRefreshRenderer : NSObject
{
    NSOperationQueue *_queue;	// 8 = 0x8
}

@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)scheduleCompletionBlock:(CDUnknownBlockType)arg1;
- (void)scheduleRenderingOfRect:(struct CGRect)arg1 forArtboard:(id)arg2;
- (id)init;

@end

@interface MSIOSRefreshRendererOperation : NSOperation
{
    MSArtboardGroup *_artboardCopy;	// 24 = 0x18
    MSPage *_pageCopy;	// 32 = 0x20
    struct CGRect _rect;	// 40 = 0x28
}

@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(retain, nonatomic) MSPage *pageCopy; // @synthesize pageCopy=_pageCopy;
@property(retain, nonatomic) MSArtboardGroup *artboardCopy; // @synthesize artboardCopy=_artboardCopy;
- (void).cxx_destruct;
- (id)sliceForArtboard:(id)arg1;
- (void)main;

@end

@interface MSIgnoreClippingMaskAction : MSBaseAction
{
}

- (void)performAction:(id)arg1;
- (void)ignoreClippingMask:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validate;

@end

@interface MSImageCollection : _MSImageCollection
{
}

- (id)description;
- (id)imageWithSHA1:(id)arg1;
- (void)purgeImagesNotMatchingSHAs:(id)arg1;
- (id)imagesIndexedBySHAs:(id)arg1;
- (void)addImagesIndexedBySHA:(id)arg1;
- (void)addImageToIndex:(id)arg1;
- (id)addImage:(id)arg1 name:(id)arg2 convertColourspace:(BOOL)arg3;
- (unsigned long long)uniqueImageCount;
- (id)treeAsDictionary;

@end

@interface MSImageCompare : NSObject
{
}

+ (double)compareImage:(id)arg1 withImage:(id)arg2;

@end

@interface MSImageData : NSObject <NSCopying>
{
    NSImage *_image;	// 8 = 0x8
    NSData *_data;	// 16 = 0x10
    NSString *_name;	// 24 = 0x18
    NSData *_sha1;	// 32 = 0x20
    MSImageCollection *_collection;	// 40 = 0x28
}

@property(retain, nonatomic) MSImageCollection *collection; // @synthesize collection=_collection;
@property(retain, nonatomic) NSData *sha1; // @synthesize sha1=_sha1;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 image:(id)arg2 data:(id)arg3 sha:(id)arg4 collection:(id)arg5;
- (id)treeAsDictionary;

@end

@interface MSImageTransformEventHandler : MSTransformEventHandler
{
    CIImage *originalImage;	// 232 = 0xe8
    GKRect *_originalBounds;	// 240 = 0xf0
}

@property(retain, nonatomic) GKRect *originalBounds; // @synthesize originalBounds=_originalBounds;
- (void).cxx_destruct;
- (id)toolbarIdentifier;
- (void)dealloc;
- (id)NSImageFromImage:(id)arg1;
- (void)transformShape;
- (struct CGRect)newLayerRect;
- (id)perspectiveFilter;
- (id)bounds;
- (void)handlerGotFocus;

@end

@interface MSImportInsert : NSObject
{
    MSLayerGroup *_group;	// 8 = 0x8
    id <MSImporter> _importer;	// 16 = 0x10
    NSURL *_fileURL;	// 24 = 0x18
    NSData *_data;	// 32 = 0x20
    CHProgressSheet *_sheet;	// 40 = 0x28
    NSUndoManager *_undoManager;	// 48 = 0x30
    NSString *_name;	// 56 = 0x38
    NSArray *_addedLayers;	// 64 = 0x40
}

+ (void)importFromData:(id)arg1 name:(id)arg2 inGroup:(id)arg3 importer:(id)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)importFromURL:(id)arg1 inGroup:(id)arg2 importer:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) NSArray *addedLayers; // @synthesize addedLayers=_addedLayers;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
@property(retain, nonatomic) CHProgressSheet *sheet; // @synthesize sheet=_sheet;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(retain, nonatomic) id <MSImporter> importer; // @synthesize importer=_importer;
@property(retain, nonatomic) MSLayerGroup *group; // @synthesize group=_group;
- (void).cxx_destruct;
@property(readonly, nonatomic) MSContentDrawView *view; // @dynamic view;
- (BOOL)shouldExpandPages;
- (id)showProgressSheet;
- (void)importerDidFinish;
- (void)close;
- (void)collapseSinglePage;
- (BOOL)expandPages;
- (void)runWithCompletion:(CDUnknownBlockType)arg1;

@end

@interface MSImportInsertExistingDocument : MSImportInsert
{
    NSArray *_oldLayers;	// 8 = 0x8
}

@property(copy, nonatomic) NSArray *oldLayers; // @synthesize oldLayers=_oldLayers;
- (void).cxx_destruct;
- (id)insertedLayers;
- (struct CGPoint)mouseInCanvas;
- (struct CGPoint)offsetForNewLayers:(id)arg1 forMouse:(struct CGPoint)arg2;
- (void)moveNewLayersUnderMouse;
- (void)importerDidFinish;
- (void)runWithCompletion:(CDUnknownBlockType)arg1;

@end

@interface MSImportInsertNewDocument : MSImportInsert
{
}

- (BOOL)shouldExpandPages;
- (void)importerDidFinish;

@end

@interface MSInnerShadowStyleCollection : MSShadowStyleCollection
{
}

- (id)stylePartForInserting;

@end

@interface MSInputSheet : CHInputSheet
{
    CDUnknownBlockType inputCompletionBlock;	// 112 = 0x70
}

+ (id)runWithTitle:(id)arg1 subtitle:(id)arg2 fieldTitle:(id)arg3 defaultValue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
@property(copy, nonatomic) CDUnknownBlockType inputCompletionBlock; // @synthesize inputCompletionBlock;
- (void).cxx_destruct;
- (void)confirm:(id)arg1;

@end

@interface MSInsertArrowAction : MSInsertLineAction
{
}

- (unsigned short)shortcutCharacter;
- (id)lineShapeFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
- (id)imageName;

@end

@interface MSInsertArtboardAction : MSBaseAction
{
}

- (unsigned short)shortcutCharacter;
- (id)imageName;
- (void)performAction:(id)arg1;
- (void)insertArtboard:(id)arg1;

@end

@interface MSInsertArtboardEventHandler : MSInsertLayerEventHandler <NSOutlineViewDataSource, NSOutlineViewDelegate>
{
    NSOutlineView *_outlineView;	// 128 = 0x80
    NSMutableArray *_presets;	// 136 = 0x88
    MSEditArtboardPresetViewController *_editor;	// 144 = 0x90
}

@property(retain, nonatomic) MSEditArtboardPresetViewController *editor; // @synthesize editor=_editor;
@property(retain, nonatomic) NSMutableArray *presets; // @synthesize presets=_presets;
@property(retain, nonatomic) NSOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (void).cxx_destruct;
- (BOOL)shouldHideExportBar;
- (id)insertArtboardWithRect:(struct CGRect)arg1;
- (struct CGRect)newPositionForFirstArtboardWithSize:(struct CGSize)arg1;
- (struct CGRect)initialRectForNewArtboard:(struct CGSize)arg1 besidesExistingArtboard:(id)arg2;
- (struct CGRect)newPositionForSecondArtboardWithSize:(struct CGSize)arg1;
- (struct CGRect)newPositionForArtboardWithSize:(struct CGSize)arg1;
- (id)rectOfSelectedLayers;
- (struct CGSize)sizeForPreset:(id)arg1;
- (void)insertArtboardFromPreset:(id)arg1;
- (void)focusCanvasOnAllArtboards;
- (void)insertPresetsFromItem:(id)arg1;
- (id)title;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (struct CGSize)sizeForItem:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)itemIsHeader:(id)arg1;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)animateEditorOut;
- (void)animateEditorIn;
- (void)editorDidFinish:(id)arg1;
- (void)showEditPanelForPreset:(id)arg1 canCancelPanel:(BOOL)arg2;
- (id)customPresetsSet;
- (void)addPresetAction:(id)arg1;
- (void)deletePresetItem:(id)arg1;
- (void)deleteRowAction:(id)arg1;
- (void)editRowAction:(id)arg1;
- (id)performActionWithRect:(id)arg1;
- (id)presetsPath;
- (BOOL)shouldAddInsertFromSelectionItem;
- (void)loadArtboardPresets;
- (void)save;
- (void)copyPresetsToLibraryIfNecessary;
- (void)handlerWillLoseFocus;
- (void)reloadData;
- (unsigned long long)inspectorLocation;
- (id)nibName;
- (void)awakeFromNib;

@end

@interface MSInsertImageAction : MSBaseAction
{
}

- (id)groupForInserting;
- (void)performAction:(id)arg1;
- (void)insertImage:(id)arg1;

@end

@interface MSInsertLayerEventHandler : MSDragRectEventHandler
{
    BOOL _shouldApplyDefaultStyle;	// 128 = 0x80
    MSLayer *_prototypeLayer;	// 136 = 0x88
    CDUnknownBlockType _completionBlock;	// 144 = 0x90
    MSLayer *_insertedLayer;	// 152 = 0x98
}

@property(retain, nonatomic) MSLayer *insertedLayer; // @synthesize insertedLayer=_insertedLayer;
@property(nonatomic) BOOL shouldApplyDefaultStyle; // @synthesize shouldApplyDefaultStyle=_shouldApplyDefaultStyle;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) MSLayer *prototypeLayer; // @synthesize prototypeLayer=_prototypeLayer;
- (void).cxx_destruct;
- (void)flagsChanged:(id)arg1;
- (void)dealloc;
- (void)resizeLayer:(id)arg1 toRect:(struct CGRect)arg2;
- (void)insertNewLayerInCurrentGroup:(id)arg1;
- (id)insertAsNewLayer:(id)arg1;
- (id)performActionWithRect:(id)arg1;
- (void)drawRectPreview;
- (id)imageName;
- (void)handlerWillLoseFocus;
- (BOOL)mouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSInsertLineAction : MSBaseAction
{
}

- (unsigned short)shortcutCharacter;
- (id)imageName;
- (id)tooltip;
- (BOOL)validate;
- (BOOL)isSelectable;
- (void)performAction:(id)arg1;
- (id)lineShapeFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
- (void)insertLine:(id)arg1;

@end

@interface MSInsertLineEventHandler : MSEventHandler
{
    CDUnknownBlockType _lineShapeCreator;	// 128 = 0x80
    MSShapeGroup *_lineShape;	// 136 = 0x88
}

@property(retain, nonatomic) MSShapeGroup *lineShape; // @synthesize lineShape=_lineShape;
@property(copy, nonatomic) CDUnknownBlockType lineShapeCreator; // @synthesize lineShapeCreator=_lineShapeCreator;
- (void).cxx_destruct;
- (BOOL)mouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)findCurrentGroup;
- (double)lineThickness;
- (id)style;
- (void)createShapeAtMouse:(struct CGPoint)arg1;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (struct CGPoint)roundMouse:(struct CGPoint)arg1;

@end

@interface MSInsertMenuAction : MSBaseAction
{
}

- (id)label;
- (id)tooltip;
- (id)children;

@end

@interface MSInsertShapeEventHandler : MSDragRectEventHandler
{
    NSMutableArray *insertedShapes;	// 128 = 0x80
    NSCursor *shapeCursor;	// 136 = 0x88
    MSShapePathLayer *_prototypeLayer;	// 144 = 0x90
}

@property(retain, nonatomic) MSShapePathLayer *prototypeLayer; // @synthesize prototypeLayer=_prototypeLayer;
- (void).cxx_destruct;
- (void)flagsChanged:(id)arg1;
- (void)dealloc;
- (void)resizeLayer:(id)arg1 toRect:(struct CGRect)arg2;
- (void)drawRectPreview;
- (id)insertShapeAsNewLayer:(id)arg1;
- (id)insertShapeAsSubPathOfShape:(id)arg1 inRect:(id)arg2;
- (id)parentShapeForInsertingSubPath;
- (id)performActionWithRect:(id)arg1;
- (id)imageName;
- (void)handlerWillLoseFocus;
- (BOOL)mouseMovedEvent:(id)arg1;
- (void)selectAppropriateToolbarItem;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSInsertSharedStyleAction : MSBaseAction
{
}

- (id)noTextStylesView;
- (BOOL)hasSubMenu;
- (id)label;
- (id)imageName;
- (void)insertTextStyleInstance:(id)arg1;
- (void)nonExistingSelector:(id)arg1;
- (void)showManageSymbolsSheet:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface MSInsertSliceAction : MSBaseAction
{
}

- (unsigned short)shortcutCharacter;
- (void)performAction:(id)arg1;
- (void)insertSlice:(id)arg1;

@end

@interface MSInsertSliceEventHandler : MSInsertLayerEventHandler
{
    NSArray *_allSlices;	// 128 = 0x80
    MSLayer *_hoveringLayer;	// 136 = 0x88
}

@property(retain, nonatomic) MSLayer *hoveringLayer; // @synthesize hoveringLayer=_hoveringLayer;
@property(retain, nonatomic) NSArray *allSlices; // @synthesize allSlices=_allSlices;
- (void).cxx_destruct;
- (id)toolbarIdentifier;
- (void)drawInRect:(struct CGRect)arg1;
- (id)currentGroup;
- (struct CGPoint)alignMouseToGrid:(struct CGPoint)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)layersBelowPoint:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;

@end

@interface MSInsertSymbolAction : MSBaseAction <NSMenuDelegate>
{
    NSImage *_initialImage;	// 16 = 0x10
}

@property(retain, nonatomic) NSImage *initialImage; // @synthesize initialImage=_initialImage;
- (void).cxx_destruct;
- (id)noSymbolsView;
- (BOOL)hasSubMenu;
- (id)imageName;
- (void)menuWillOpen:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)wouldInsertInASymbol;
- (id)menuItemForMenu:(id)arg1 name:(id)arg2 symbol:(id)arg3;
- (void)showManageSymbolsSheet:(id)arg1;
- (id)symbolsSortedIntoGroups:(id)arg1;
- (void)updateMenuForSymbols:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)insertSymbolInstance:(id)arg1;
- (id)initWithDocument:(id)arg1;

@end

@interface MSInsertTextEventHandler : MSEventHandler
{
    struct CGPoint mouseDownPoint;	// 128 = 0x80
    struct CGPoint mouseDraggedPoint;	// 144 = 0x90
    MSTextLayer *_textLayer;	// 160 = 0xa0
    CDUnknownBlockType _completionBlock;	// 168 = 0xa8
}

@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) MSTextLayer *textLayer; // @synthesize textLayer=_textLayer;
- (void).cxx_destruct;
- (BOOL)shouldDrawLayerSelection;
- (id)toolbarIdentifier;
- (struct CGRect)rectForInsertingDirectly:(struct CGPoint)arg1;
- (void)selectTextLayerAndEdit:(id)arg1;
- (id)textLayerUnderMouse:(struct CGPoint)arg1;
- (BOOL)tryToEditExistingTextLayer:(struct CGPoint)arg1;
- (id)groupForInserting;
- (id)textLayerWithRect:(struct CGRect)arg1 type:(long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)drawInRect:(struct CGRect)arg1;
- (void)refresh;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (BOOL)mouseMovedEvent:(id)arg1;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;

@end

@interface MSInsertTextLayerAction : MSBaseAction
{
}

- (BOOL)isSelectable;
- (unsigned short)shortcutCharacter;
- (id)tooltip;
- (id)label;
- (id)menuItem;
- (void)performAction:(id)arg1;
- (void)insertTextLayer:(id)arg1;
- (BOOL)validate;

@end

@interface MSInsertVectorAction : MSBaseAction
{
}

- (BOOL)isSelectable;
- (BOOL)isActive;
- (unsigned short)shortcutCharacter;
- (id)tooltip;
- (BOOL)validate;
- (id)rootForShapeHandler;
- (void)performAction:(id)arg1;
- (void)insertVector:(id)arg1;

@end

@interface MSInspectorController : CHViewController
{
    NSView *_placeholderView;	// 104 = 0x68
    NSView *_alignmentView;	// 112 = 0x70
    CHViewController<MSInspectorChildController> *_currentController;	// 120 = 0x78
    MSDocument *_document;	// 128 = 0x80
    MSNormalInspector *_normalInspector;	// 136 = 0x88
    MSExportableLayerInspectorViewController *_exportableInspector;	// 144 = 0x90
    MSExportInspectorViewController *_bottomExporter;	// 152 = 0x98
    unsigned long long _oldInspectorLocation;	// 160 = 0xa0
}

@property(nonatomic) unsigned long long oldInspectorLocation; // @synthesize oldInspectorLocation=_oldInspectorLocation;
@property(retain, nonatomic) MSExportInspectorViewController *bottomExporter; // @synthesize bottomExporter=_bottomExporter;
@property(retain, nonatomic) MSExportableLayerInspectorViewController *exportableInspector; // @synthesize exportableInspector=_exportableInspector;
@property(retain, nonatomic) MSNormalInspector *normalInspector; // @synthesize normalInspector=_normalInspector;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) CHViewController<MSInspectorChildController> *currentController; // @synthesize currentController=_currentController;
@property(retain, nonatomic) NSView *alignmentView; // @synthesize alignmentView=_alignmentView;
@property(retain, nonatomic) NSView *placeholderView; // @synthesize placeholderView=_placeholderView;
- (void).cxx_destruct;
- (void)exportSingleSlice:(id)arg1;
- (id)rootViewController;
- (id)handlerManager;
- (id)firstTextFieldInView:(id)arg1;
- (void)focusOnFirstTextField;
- (void)reload;
- (void)startRenamingSharedObject:(id)arg1;
- (void)changeTextLayerFont:(id)arg1;
- (void)changeColor:(id)arg1;
- (BOOL)shouldShowExportBar;
- (void)hideExportBarIfNecessary;
- (void)prepareForDisplay;
- (void)currentHandlerChanged;
- (void)layerPositionPossiblyChanged;
- (BOOL)layersAreExportable:(id)arg1;
- (id)currentControllerForReturningToNormalHandler;
- (void)validateAlignmentButtons;
- (void)selectionDidChangeTo:(id)arg1;
- (void)viewDidResize;
- (void)dealloc;
- (void)undoNotification:(id)arg1;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSInspectorNextResponderFixer : NSObject
{
}

+ (long long)compareVerticalPositionOfView:(id)arg1 withView:(id)arg2;
+ (long long)compareHorizontalPositionOfView:(id)arg1 withView:(id)arg2;
+ (struct _NSRange)verticalRangeFromView:(id)arg1;
+ (BOOL)viewIntersectsVertically:(id)arg1 withView:(id)arg2;
+ (id)subviewsOfView:(id)arg1;
+ (id)orderedSubviewsOfView:(id)arg1;
+ (BOOL)viewCanBeNextKeyView:(id)arg1;
+ (id)firstKeyViewForInView:(id)arg1;
+ (id)findNextKeyViewFor:(id)arg1 inView:(id)arg2;

@end

@interface MSInspectorStackView : NSView
{
    NSArray *_sectionViewControllers;	// 152 = 0x98
}

@property(retain, nonatomic) NSArray *sectionViewControllers; // @synthesize sectionViewControllers=_sectionViewControllers;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)reloadWithViewControllers:(id)arg1;
- (void)subViewFrameDidChange:(id)arg1;
- (void)stack;
- (void)recalculateHeight:(id)arg1;
- (void)recalculateHeight;
- (void)reloadSubviews;

@end

@interface MSIntegerSlider : NSSlider
{
}

- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;

@end

@interface MSIntegratedStepper : NSView
{
    BOOL _keepFiringTimer;	// 152 = 0x98
    MSUpDownController *_target;	// 160 = 0xa0
    NSTimer *_timer;	// 168 = 0xa8
    NSTimer *_initialSlowTimer;	// 176 = 0xb0
    long long _highlightMode;	// 184 = 0xb8
}

@property(nonatomic) BOOL keepFiringTimer; // @synthesize keepFiringTimer=_keepFiringTimer;
@property(nonatomic) long long highlightMode; // @synthesize highlightMode=_highlightMode;
@property(retain, nonatomic) NSTimer *initialSlowTimer; // @synthesize initialSlowTimer=_initialSlowTimer;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) __weak MSUpDownController *target; // @synthesize target=_target;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (void)stepWithEvent:(id)arg1;
- (void)repeatStepEvent:(id)arg1;
- (id)timerWithInterval:(double)arg1 repeats:(BOOL)arg2;
- (void)mouseDown:(id)arg1;

@end

@interface MSInterceptingView : NSView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface MSIntersectAction : MSBaseBooleanAction
{
}

- (void)performAction:(id)arg1;
- (void)booleanIntersect:(id)arg1;

@end

@interface MSIsolateElement : CHSingletonObject
{
}

- (BOOL)isEqual:(id)arg1;
- (id)name;

@end

@interface MSJoinAction : MSBaseAction
{
}

- (BOOL)validate;
- (id)joinBezierPath:(id)arg1 withBezierPath:(id)arg2;
- (void)performAction:(id)arg1;
- (void)join:(id)arg1;

@end

@interface MSKeyBindings : CHSingletonObject
{
    NSDictionary *_keyBindings;	// 8 = 0x8
}

+ (unsigned short)keyBindingsFromAction:(SEL)arg1;
+ (unsigned short)keyBindingForPreviewAtActualSize;
@property(retain, nonatomic) NSDictionary *keyBindings; // @synthesize keyBindings=_keyBindings;
- (void).cxx_destruct;
- (void)copyKeyBindingsToLibraryIfNecessary;
- (id)presetsPath;
- (id)init;

@end

@interface MSLayer : _MSLayer <NSCoding, NSCopying>
{
    long long skipDrawingSelectionCounter;	// 8 = 0x8
    struct CGRect relativeRect;	// 16 = 0x10
    GKRect *frameAtMouseDown;	// 48 = 0x30
    BOOL _isHovering;	// 56 = 0x38
    BOOL _isAlreadyCaching;	// 57 = 0x39
    BOOL _isSelected;	// 58 = 0x3a
    long long _layerListExpandedType;	// 64 = 0x40
    MSAbsoluteRect *_absoluteRect;	// 72 = 0x48
    NSAffineTransform *_cachedTransform;	// 80 = 0x50
    NSArray *_cachedAncestorTransforms;	// 88 = 0x58
    id _undoRefreshTimer;	// 96 = 0x60
    struct CGRect _lightweightAbsoluteRect;	// 104 = 0x68
    struct CGRect _cachedDirtyRectForBounds;	// 136 = 0x88
}

+ (void)hideSelectionDisabledInBlock:(CDUnknownBlockType)arg1;
+ (void)makeLayerNamesUnique:(id)arg1;
+ (id)layersSeparatedByGroups:(id)arg1;
@property(nonatomic) struct CGRect cachedDirtyRectForBounds; // @synthesize cachedDirtyRectForBounds=_cachedDirtyRectForBounds;
@property(retain, nonatomic) id undoRefreshTimer; // @synthesize undoRefreshTimer=_undoRefreshTimer;
@property(retain, nonatomic) NSArray *cachedAncestorTransforms; // @synthesize cachedAncestorTransforms=_cachedAncestorTransforms;
@property(retain, nonatomic) NSAffineTransform *cachedTransform; // @synthesize cachedTransform=_cachedTransform;
@property(retain, nonatomic) MSAbsoluteRect *absoluteRect; // @synthesize absoluteRect=_absoluteRect;
@property(nonatomic) struct CGRect lightweightAbsoluteRect; // @synthesize lightweightAbsoluteRect=_lightweightAbsoluteRect;
@property(nonatomic) BOOL isSelected; // @synthesize isSelected=_isSelected;
@property(nonatomic) long long layerListExpandedType; // @synthesize layerListExpandedType=_layerListExpandedType;
@property(nonatomic) BOOL isAlreadyCaching; // @synthesize isAlreadyCaching=_isAlreadyCaching;
@property(nonatomic) BOOL isHovering; // @synthesize isHovering=_isHovering;
- (void).cxx_destruct;
- (void)groupDidRemoveThisLayer:(id)arg1;
- (void)groupDidAddThisLayer:(id)arg1;
- (BOOL)canRotate;
- (BOOL)isFrameEqualForSync:(id)arg1;
- (BOOL)containsSymbols;
- (BOOL)parentOrSelfIsSymbol;
- (BOOL)isLayerExportable;
- (BOOL)isValidChild:(id)arg1;
- (void)assignWithOriginalLinkedStyleIfNecessary;
- (id)layerWithId:(id)arg1;
- (BOOL)shouldRenderInTransparencyLayer;
- (BOOL)shouldForceRendering;
@property(copy, nonatomic) GKRect *frameInArtboard; // @dynamic frameInArtboard;
- (BOOL)calculateHasBlendedLayer;
- (id)currentHandlerKey;
- (BOOL)shouldBeSelectedInLayerList;
- (BOOL)canBeSelectedOnCanvas;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setNilValueForKey:(id)arg1;
- (BOOL)canBeTransformed;
- (void)setRotation:(double)arg1;
- (void)setIsFlippedVertical:(BOOL)arg1;
- (void)setIsFlippedHorizontal:(BOOL)arg1;
- (struct CGSize)minimumSize;
- (void)layerSizeDidChangeFromCorner:(long long)arg1;
- (void)multiplyBy:(double)arg1;
- (BOOL)isPartOfClippingMask;
- (void)clearPositionCachesIncludingLocalCaches:(BOOL)arg1;
- (void)clearPositionCaches;
- (void)concatAncestorTransforms;
- (id)calculateAncestorTransforms;
- (id)ancestorTransforms;
- (id)transform;
- (id)transformForRect:(struct CGRect)arg1;
- (struct _CHTransformStruct)transformStruct;
- (struct CGRect)convertRectToAbsoluteCoordinates:(struct CGRect)arg1;
- (struct CGPoint)convertPointToLayerCoordinates:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToParentRoot:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToViewCoordinates:(struct CGPoint)arg1;
- (id)children;
- (id)ancestors;
- (void)upgradeShapes;
- (void)markLayerAsChangedPassingTest:(CDUnknownBlockType)arg1;
- (id)closestClippingLayer;
- (id)inspectorViewControllers;
- (id)inspectorViewControllerNames;
- (id)parentArtboard;
- (id)parentRoot;
- (id)currentPage;
- (id)parentPage;
- (BOOL)shouldDrawArtisticStrokeForPath:(id)arg1;
- (BOOL)hasClippingMask;
- (BOOL)handleDoubleClick;
- (void)removeFromParent;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (BOOL)isUndoingModelObjectChange;
- (void)refreshForPropertyChanged:(id)arg1;
- (void)propertyDidChange:(id)arg1;
- (void)rectDidChange;
- (void)rectWillChange;
- (void)moveInLayerTreeInBlock:(CDUnknownBlockType)arg1;
- (void)changeColor:(id)arg1;
- (BOOL)closePath;
- (id)bezierPathWithTransforms;
- (id)bezierPath;
- (id)handlerName;
- (struct CGRect)rectForBitmapCaching;
- (id)absoluteDirtyRect;
- (struct CGRect)affectedFrameOfLayer;
- (struct CGRect)baseRectByAccountingForStyleSize:(struct CGRect)arg1;
- (struct CGRect)rectByAccountingForStyleSize:(struct CGRect)arg1;
- (struct CGRect)dirtyRectForRect:(struct CGRect)arg1;
- (struct CGRect)dirtyRectForBounds;
- (struct CGRect)dirtyRectForFrame;
- (void)refreshViewsWithMask:(unsigned long long)arg1;
- (void)refreshOfType:(unsigned long long)arg1 rect:(struct CGRect)arg2;
- (struct CGRect)translateRectFromBoundsToFrame:(struct CGRect)arg1;
- (void)markLayerDirtyOfType:(unsigned long long)arg1 margins:(struct CGSize)arg2;
- (void)markLayerDirtyOfType:(unsigned long long)arg1;
- (void)layerDidChange;
- (id)cachedImageSetUsingBlock:(CDUnknownBlockType)arg1;
- (id)cachedImage;
- (void)clearCachedImage;
- (BOOL)hitTest:(struct CGPoint)arg1;
- (BOOL)isTooSmallForHitTesting;
- (long long)selectedCorner:(struct CGPoint)arg1 zoom:(double)arg2;
- (void)select:(BOOL)arg1 byExpandingSelection:(BOOL)arg2 showSelection:(BOOL)arg3;
- (void)select:(BOOL)arg1 byExpandingSelection:(BOOL)arg2;
- (BOOL)containsSelectedItem;
- (void)recordRelativeRect;
- (void)resetRelativeRect;
- (struct CGRect)relativeRect;
- (void)setFrameAtMouseDown:(id)arg1;
- (struct CGRect)boundsRect;
- (id)bounds;
- (id)frameAtMouseDown;
- (void)enableSelectionDelayedAndRelease;
- (void)hideSelectionTemporarily;
- (void)showSelectionImmediately;
- (id)valueForUndefinedKey:(id)arg1;
@property(nonatomic) double proportions; // @dynamic proportions;
@property(nonatomic) BOOL constrainProportions; // @dynamic constrainProportions;
- (id)bezierPathForHover;
- (id)colorForHover;
- (void)drawHoverWithZoom:(double)arg1;
- (unsigned long long)selectionCornerMask;
- (BOOL)canOneClickEditLayer;
- (BOOL)shouldDrawSelection;
- (struct CGRect)frameForTransforms;
- (void)recordFrame;
- (double)zoomValue;
- (id)renderBitmapEffects:(id)arg1;
- (BOOL)hasActiveBackgroundBlur;
- (BOOL)hasBitmapStylesEnabled;
- (void)prepareObjectCopy:(id)arg1;
- (id)duplicate;
- (id)layersSharingStyle:(id)arg1;
- (id)rootForNameUniqueing;
- (id)namesOfAllLayersInGroup:(id)arg1;
- (void)findUniqueNameWithNames:(id)arg1;
- (void)makeNameUnique;
- (id)defaultName;
- (void)setFrame:(id)arg1;
- (id)objectIDsForSelfAncestorsAndChildren;
- (id)defaultStyle;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)objectDidInit;
- (void)initEmptyObject;
- (id)CSSAttributes;
- (id)CSSRotation;
- (id)CSSAttributeString;
- (BOOL)isExpandedInLayerList;
- (id)previewFillColor:(BOOL)arg1;
- (id)previewBorderColor:(BOOL)arg1;
- (void)drawPreviewInRect:(struct CGRect)arg1 honourSelected:(BOOL)arg2;
- (void)writeBitmapImageToFile:(id)arg1;
- (void)migratePropertiesFromV33OrEarlierWithCoder:(id)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (Class)rendererClass;
- (void)writeSVGToElement:(id)arg1 withExporter:(id)arg2;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (id)relativeRectWithExporter:(id)arg1;
- (struct CGPoint)layerOffsetWithExporter:(id)arg1;
- (void)addSVGAttributes:(id)arg1 forExporter:(id)arg2;
- (id)svgStyle;
- (void)addGradientsToDocument:(id)arg1;
- (void)addChildrenToElement:(id)arg1 exporter:(id)arg2;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;
- (BOOL)shouldIncludeLayerInSlice:(id)arg1;
- (BOOL)intersectsSlice:(id)arg1;

@end

@interface MSLayerCachedImage : NSObject
{
    NSBitmapImageRep *_image;	// 8 = 0x8
    struct CGRect _rect;	// 16 = 0x10
}

@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(retain, nonatomic) NSBitmapImageRep *image; // @synthesize image=_image;
- (void).cxx_destruct;

@end

@interface MSLayerGroup : _MSLayerGroup <MSArrayDelegate, MSSharedObjectInstance>
{
    long long ignoreChildrenRefreshCalls;	// 56 = 0x38
    BOOL _enableAutomaticScaling;	// 64 = 0x40
    BOOL _isOpen;	// 65 = 0x41
    BOOL _ignoreNextClickThrough;	// 66 = 0x42
    BOOL _ignoreNextSymbolSyncChange;	// 67 = 0x43
    BOOL _lightweightContainsSelectedItem;	// 68 = 0x44
    long long _hasLayerWithMaskMode;	// 72 = 0x48
}

+ (BOOL)layerHasMask:(id)arg1;
+ (BOOL)groupBoundsShouldBeIntegral;
+ (id)groupBoundsForLayers:(id)arg1;
+ (void)setIgnoreLayerListDelegateCalls:(BOOL)arg1;
+ (id)sharedObjectIDsFromLayers:(id)arg1;
@property(nonatomic) BOOL lightweightContainsSelectedItem; // @synthesize lightweightContainsSelectedItem=_lightweightContainsSelectedItem;
@property(nonatomic) BOOL ignoreNextSymbolSyncChange; // @synthesize ignoreNextSymbolSyncChange=_ignoreNextSymbolSyncChange;
@property(nonatomic) BOOL ignoreNextClickThrough; // @synthesize ignoreNextClickThrough=_ignoreNextClickThrough;
@property(nonatomic) BOOL isOpen; // @synthesize isOpen=_isOpen;
@property(nonatomic) long long hasLayerWithMaskMode; // @synthesize hasLayerWithMaskMode=_hasLayerWithMaskMode;
@property(nonatomic) BOOL enableAutomaticScaling; // @synthesize enableAutomaticScaling=_enableAutomaticScaling;
- (BOOL)parentOrSelfIsSymbol;
- (unsigned long long)type;
- (void)addSlice:(id)arg1;
- (void)assignWithOriginalLinkedStyleIfNecessary;
- (id)children;
- (id)layerWithId:(id)arg1;
- (void)dataArray:(id)arg1 didRemoveObject:(id)arg2;
- (void)dataArray:(id)arg1 willRemoveObject:(id)arg2;
- (void)dataArray:(id)arg1 didAddObject:(id)arg2;
- (BOOL)isEqualForSync:(id)arg1;
- (void)calculateHasLayerWithMaskMode;
- (id)addLayerOfType:(id)arg1;
- (BOOL)calculateHasBlendedLayer;
- (void)resizeLayerByHeight:(id)arg1;
- (void)rectHeightDidChange:(id)arg1;
- (void)refreshOfType:(unsigned long long)arg1 rect:(struct CGRect)arg2;
- (void)rectWidthDidChange:(id)arg1;
- (BOOL)hitTestCornerOfSelectedLayer:(id)arg1 mouse:(struct CGPoint)arg2;
- (BOOL)shouldClickThroughGroup:(id)arg1 mouse:(struct CGPoint)arg2 force:(BOOL)arg3;
- (id)layersBelowPoint:(struct CGPoint)arg1 forceClickThrough:(BOOL)arg2 keepLockedLayers:(BOOL)arg3;
- (id)allLayersWithForcedClickThrough:(BOOL)arg1;
- (void)drawHoverWithZoom:(double)arg1;
- (id)inspectorViewControllerNames;
- (void)setConstrainProportions:(BOOL)arg1;
- (void)multiplyBy:(double)arg1;
- (id)layersSharingStyle:(id)arg1;
- (void)upgradeShapes;
- (void)markLayerAsChangedPassingTest:(CDUnknownBlockType)arg1;
- (id)layersSatisfyingTest:(CDUnknownBlockType)arg1;
- (void)enumerateLayersInReverse:(CDUnknownBlockType)arg1;
- (void)enumerateChangingLayers:(CDUnknownBlockType)arg1;
- (void)enumerateLayers:(CDUnknownBlockType)arg1;
- (void)enumerateLayersOfClass:(Class)arg1 withOptions:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateLayersOfClass:(Class)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateSelfAndLayersOfClass:(Class)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)resizeRoot;
- (void)_resizeRoot;
- (id)requiredRect;
- (void)_adjustLayersWithOldOrigin:(struct CGPoint)arg1;
- (BOOL)handleDoubleClick;
- (id)handlerName;
- (void)setIsHovering:(BOOL)arg1;
- (void)changeLayerExpandedTypeToAutomaticIfCollapsed;
- (void)deselectLayerAndParent;
- (void)deselectAllLayers;
- (void)selectLayers:(id)arg1;
- (BOOL)containsSelectedItem;
- (void)setFrameAtMouseDown:(id)arg1;
- (void)resetRelativeRect;
- (void)recordRelativeRect;
- (void)prepareObjectCopy:(id)arg1;
- (struct CGRect)rectByAccountingForStyleSize:(struct CGRect)arg1;
- (void)markLayerDirtyOfType:(unsigned long long)arg1;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1;
- (id)firstLayer;
- (void)addLayers:(id)arg1;
- (void)moveInLayerTreeInBlock:(CDUnknownBlockType)arg1;
- (void)insertLayers:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeAllLayers;
- (void)insertLayers:(id)arg1 afterLayer:(id)arg2;
- (void)removeLayerAtIndex:(unsigned long long)arg1;
- (void)insertLayer:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertLayer:(id)arg1 afterLayer:(id)arg2;
- (void)insertLayer:(id)arg1 beforeLayer:(id)arg2;
- (void)removeLayer:(id)arg1;
- (unsigned long long)numberOfLayers;
- (void)replaceLayersWithoutNotifications:(id)arg1;
- (void)setLayers:(id)arg1;
- (BOOL)containsSymbols;
- (BOOL)wouldInsertSymbolIntoItself:(id)arg1;
- (BOOL)isValidChild:(id)arg1;
- (void)makeGroupWithSliceLayers:(id)arg1;
- (void)addLayer:(id)arg1;
- (void)setIsLocked:(BOOL)arg1;
- (BOOL)hasClickThrough;
- (id)bezierPath;
- (void)clearPositionCachesIncludingLocalCaches:(BOOL)arg1;
- (id)defaultStyle;
- (id)defaultName;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (BOOL)isActualSymbol;
- (void)objectDidInit;
- (void)initEmptyObject;
- (id)CSSAttributeString;
- (BOOL)isExpandedInLayerList;
- (void)drawPreviewInRect:(struct CGRect)arg1 honourSelected:(BOOL)arg2;
- (void)migratePropertiesFromV25OrEarlierWithCoder:(id)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (Class)rendererClass;
- (void)addChildrenToElement:(id)arg1 exporter:(id)arg2;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;

// Remaining properties
@property(retain, nonatomic) NSString *sharedObjectID;

@end

@interface MSLayerGroupRenderer : MSBaseLayerRenderer
{
}

+ (void)drawGroupOutline:(id)arg1;
+ (id)drawableShadowForStyle:(id)arg1 atZoomValue:(double)arg2;
+ (void)beginTransparencyLayerForGroup:(id)arg1 context:(id)arg2;
+ (void)endMaskWithContext:(id)arg1;
+ (id)maskImageForShape:(id)arg1 context:(id)arg2 scale:(double)arg3;
+ (void)beginAlphaMask:(id)arg1 context:(id)arg2;
+ (void)beginMask:(id)arg1 context:(id)arg2;
+ (void)drawLayer:(id)arg1 context:(id)arg2 skipFills:(BOOL)arg3;
+ (void)renderSubLayersOfGroup:(id)arg1 context:(id)arg2;
+ (void)applyShadow:(id)arg1 toContext:(id)arg2;
+ (void)transformContext:(id)arg1 forLayer:(id)arg2;
+ (BOOL)shouldDrawLayer:(id)arg1 context:(id)arg2;
+ (void)doDrawLayer:(id)arg1 context:(id)arg2;

@end

@interface MSLayerGroupSection : MSLayerSection
{
}

- (id)groups;
- (id)views;

@end

@interface MSLayerInserting : NSObject
{
}

+ (id)groupForInserting:(id)arg1;
+ (struct CGRect)rectForCenteringLayerInView:(id)arg1 delegate:(id)arg2;

@end

@interface MSLayerInspectorViewController : CHViewController <MSSectionProtocol, NSMenuDelegate>
{
    BOOL _shouldShowPositions;	// 104 = 0x68
    BOOL _shouldShowSharedStyles;	// 105 = 0x69
    BOOL _shouldShowLayerSpecificProperties;	// 106 = 0x6a
    BOOL _shouldShowBlendingProperties;	// 107 = 0x6b
    NSArray *_layers;	// 112 = 0x70
    NSView *_positionView;	// 120 = 0x78
    NSView *_lineView;	// 128 = 0x80
    NSView *_artboardView;	// 136 = 0x88
    NSTextField *_xTextField;	// 144 = 0x90
    NSTextField *_yTextField;	// 152 = 0x98
    NSTextField *_artboardXField;	// 160 = 0xa0
    NSTextField *_artboardYField;	// 168 = 0xa8
    NSButton *_lockProportionsButton;	// 176 = 0xb0
    MSElementsInspectorSection *_sharedStyleController;	// 184 = 0xb8
}

@property(retain, nonatomic) MSElementsInspectorSection *sharedStyleController; // @synthesize sharedStyleController=_sharedStyleController;
@property(nonatomic) BOOL shouldShowBlendingProperties; // @synthesize shouldShowBlendingProperties=_shouldShowBlendingProperties;
@property(nonatomic) BOOL shouldShowLayerSpecificProperties; // @synthesize shouldShowLayerSpecificProperties=_shouldShowLayerSpecificProperties;
@property(nonatomic) BOOL shouldShowSharedStyles; // @synthesize shouldShowSharedStyles=_shouldShowSharedStyles;
@property(nonatomic) BOOL shouldShowPositions; // @synthesize shouldShowPositions=_shouldShowPositions;
@property(nonatomic) __weak NSButton *lockProportionsButton; // @synthesize lockProportionsButton=_lockProportionsButton;
@property(nonatomic) __weak NSTextField *artboardYField; // @synthesize artboardYField=_artboardYField;
@property(nonatomic) __weak NSTextField *artboardXField; // @synthesize artboardXField=_artboardXField;
@property(nonatomic) __weak NSTextField *yTextField; // @synthesize yTextField=_yTextField;
@property(nonatomic) __weak NSTextField *xTextField; // @synthesize xTextField=_xTextField;
@property(retain, nonatomic) NSView *artboardView; // @synthesize artboardView=_artboardView;
@property(retain, nonatomic) NSView *lineView; // @synthesize lineView=_lineView;
@property(retain, nonatomic) NSView *positionView; // @synthesize positionView=_positionView;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (void)colorMagnifierAction:(id)arg1;
- (BOOL)canHandleColorMagnifierAction;
- (void)dealloc;
- (BOOL)hasLineShapeLayer;
- (BOOL)layerIsGroup;
- (BOOL)layerIsArtboardOrSlice;
- (id)views;
- (id)valueForUndefinedKey:(id)arg1;
- (id)document;
- (void)refreshAction:(id)arg1;
- (id)inspectorsWithProperContent;
- (id)layerOrContentsOfLayer:(id)arg1 ifKindOfClass:(Class)arg2;
- (void)startRenamingSharedObject:(id)arg1;
- (void)changeTextLayerFont:(id)arg1;
- (void)setYAction:(id)arg1;
- (void)setXAction:(id)arg1;
- (double)rulerOriginXForLayer:(id)arg1;
- (double)rulerOriginYForLayer:(id)arg1;
- (double)absoluteYForLayers;
- (double)absoluteXForLayers;
- (void)layerPositionPossiblyChanged;
- (BOOL)wantsSeparatorBetweenView:(id)arg1 andView:(id)arg2;
- (id)init;

@end

@interface MSLayerListBooleanBackground : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSLayerListCell : PXListViewCell <NSTextFieldDelegate>
{
    long long level;	// 184 = 0xb8
    BOOL mouseIsInside;	// 192 = 0xc0
    BOOL _isVisible;	// 193 = 0xc1
    BOOL _isHidden;	// 194 = 0xc2
    MSLayer *_theLayer;	// 200 = 0xc8
    BCAutosizingTextField *_nameField;	// 208 = 0xd0
    NSButton *_isVisibleButton;	// 216 = 0xd8
    NSButton *_isLockedButton;	// 224 = 0xe0
    NSButton *_isExpandedButton;	// 232 = 0xe8
    MSLayerPreviewView *_previewView;	// 240 = 0xf0
    NSPopUpButton *_booleanOpsButton;	// 248 = 0xf8
    NSImageView *_sliceImageView;	// 256 = 0x100
}

+ (id)cellForItem:(id)arg1 inListView:(id)arg2;
@property(nonatomic) BOOL isHidden; // @synthesize isHidden=_isHidden;
@property(nonatomic) BOOL isVisible; // @synthesize isVisible=_isVisible;
@property(nonatomic) __weak NSImageView *sliceImageView; // @synthesize sliceImageView=_sliceImageView;
@property(nonatomic) __weak NSPopUpButton *booleanOpsButton; // @synthesize booleanOpsButton=_booleanOpsButton;
@property(nonatomic) __weak MSLayerPreviewView *previewView; // @synthesize previewView=_previewView;
@property(nonatomic) __weak NSButton *isExpandedButton; // @synthesize isExpandedButton=_isExpandedButton;
@property(nonatomic) __weak NSButton *isLockedButton; // @synthesize isLockedButton=_isLockedButton;
@property(nonatomic) __weak NSButton *isVisibleButton; // @synthesize isVisibleButton=_isVisibleButton;
@property(nonatomic) __weak BCAutosizingTextField *nameField; // @synthesize nameField=_nameField;
@property(retain, nonatomic) MSLayer *theLayer; // @synthesize theLayer=_theLayer;
@property(nonatomic) long long level; // @synthesize level;
- (void).cxx_destruct;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)setIsEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (void)mouseDown:(id)arg1;
- (void)dealloc;
- (BOOL)isMasked;
- (void)drawMaskDot;
- (void)drawAlternatingBackground:(struct CGRect)arg1;
- (void)drawNameFieldBorder;
- (BOOL)previousRowIsArtboard;
- (void)drawArtboardBackground:(struct CGRect)arg1;
- (BOOL)isDrawingArtboard;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isSelected;
- (void)nameAction:(id)arg1;
- (void)booleanAction:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)toggleLockedAction:(id)arg1;
- (void)toggleExpandedAction:(id)arg1;
- (void)setListView:(id)arg1;
- (id)listView;
- (void)controlTextDidChange:(id)arg1;
- (id)bitmapImageRepForCachingDisplayInRect:(struct CGRect)arg1;
- (BOOL)expandedButtonShouldBeVisible;
- (void)validateExpandedButton;
- (void)layoutControls;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)hideEyeButtonAndResizeNameField;
- (void)mouseExited:(id)arg1;
- (void)showEyeButtonAndResizeNameField;
- (id)normalHandler;
- (void)mouseEntered:(id)arg1;
- (void)resizeNameFieldToFit;
- (void)renameLayer;
- (void)resizeNameFieldToMakeRoomForButtons;
- (void)adjustIcons;
- (void)selectionDidChange;
- (void)adjustNameFieldColor;
- (BOOL)canShowEyeButton;
- (void)prepareForItem:(id)arg1;
- (void)centerPastedLayersOnLayer:(id)arg1;
- (void)pasteHere:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)prepareForReuse;
- (void)undoNotification:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSLayerListConstructor : NSObject
{
    BOOL _includeLayers;	// 8 = 0x8
    BOOL _includeSlices;	// 9 = 0x9
    MSSourceListView *_listView;	// 16 = 0x10
    NSString *_searchTerm;	// 24 = 0x18
    NSSet *_selectedLayersAndParents;	// 32 = 0x20
    NSString *_containerKey;	// 40 = 0x28
    MSPage *_page;	// 48 = 0x30
}

@property(retain, nonatomic) MSPage *page; // @synthesize page=_page;
@property(copy, nonatomic) NSString *containerKey; // @synthesize containerKey=_containerKey;
@property(retain, nonatomic) NSSet *selectedLayersAndParents; // @synthesize selectedLayersAndParents=_selectedLayersAndParents;
@property(nonatomic) BOOL includeSlices; // @synthesize includeSlices=_includeSlices;
@property(nonatomic) BOOL includeLayers; // @synthesize includeLayers=_includeLayers;
@property(copy, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
@property(retain, nonatomic) MSSourceListView *listView; // @synthesize listView=_listView;
- (void).cxx_destruct;
- (void)dealloc;
- (id)findSelectedLayersAndParents;
- (id)findSelectedLayersAndParentsOnPage:(id)arg1;
- (BOOL)itemIsExpanded:(id)arg1;
- (BOOL)layersIsGroupAndContainsSlice:(id)arg1;
- (BOOL)isNormalLayer:(id)arg1;
- (BOOL)shouldIncludeLayerAccordingToSearch:(id)arg1;
- (BOOL)shouldIncludeLayerInPreliminarySweep:(id)arg1;
- (id)layerItemsInGroup:(id)arg1 level:(long long)arg2;
- (id)layersListForPage:(id)arg1;
- (id)init;

@end

@interface MSLayerListPagesButton : NSButton
{
    BOOL _isHovering;	// 172 = 0xac
}

@property(nonatomic) BOOL isHovering; // @synthesize isHovering=_isHovering;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSLayerListPagesButtonCell : NSButtonCell
{
    NSString *_pageCountLabel;	// 120 = 0x78
}

@property(copy, nonatomic) NSString *pageCountLabel; // @synthesize pageCountLabel=_pageCountLabel;
- (void).cxx_destruct;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSLayerListSliceImageView : NSImageView
{
}

- (void)dealloc;
- (void)windowDidChangeMain:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSLayerListSplitView : NSSplitView
{
}

- (void)drawDividerInRect:(struct CGRect)arg1;

@end

@interface MSLayerListSplitViewDelegate : NSObject <NSSplitViewDelegate>
{
    NSSplitView *splitter;	// 8 = 0x8
    NSView *presetPicker;	// 16 = 0x10
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;

@end

@interface MSLayerListTuple : NSObject
{
    MSLayer *_layer;	// 8 = 0x8
    long long _level;	// 16 = 0x10
}

+ (id)tupleWithLayer:(id)arg1 level:(long long)arg2;
@property(nonatomic) long long level; // @synthesize level=_level;
@property(retain, nonatomic) MSLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;

@end

@interface MSLayerListViewController : NSViewController <MSSourceListViewDelegate, NSMenuDelegate, NSPopoverDelegate>
{
    MSSourceListView *listView;	// 104 = 0x68
    MSLayerListConstructor *listMaker;	// 112 = 0x70
    MSPage *currentPage;	// 120 = 0x78
    BOOL ignoreNextSelectionChangeNotification;	// 128 = 0x80
    BOOL ignoreNextDocumentSelectionNotification;	// 129 = 0x81
    id <MSBasicDelegate> _delegate;	// 136 = 0x88
    MSDocument *_document;	// 144 = 0x90
    NSButton *_pagesPopoverButton;	// 152 = 0x98
    NSSearchField *_layerSearchField;	// 160 = 0xa0
    NSButton *_includeLayersButton;	// 168 = 0xa8
    NSButton *_includeSlicesButton;	// 176 = 0xb0
    NSArray *_list;	// 184 = 0xb8
    NSString *_layerContainerKey;	// 192 = 0xc0
    NSPopover *_pagesPopover;	// 200 = 0xc8
}

@property(retain, nonatomic) NSPopover *pagesPopover; // @synthesize pagesPopover=_pagesPopover;
@property(copy, nonatomic) NSString *layerContainerKey; // @synthesize layerContainerKey=_layerContainerKey;
@property(retain, nonatomic) NSArray *list; // @synthesize list=_list;
@property(retain, nonatomic) NSButton *includeSlicesButton; // @synthesize includeSlicesButton=_includeSlicesButton;
@property(retain, nonatomic) NSButton *includeLayersButton; // @synthesize includeLayersButton=_includeLayersButton;
@property(nonatomic) __weak NSSearchField *layerSearchField; // @synthesize layerSearchField=_layerSearchField;
@property(nonatomic) __weak NSButton *pagesPopoverButton; // @synthesize pagesPopoverButton=_pagesPopoverButton;
@property(nonatomic) __weak MSDocument *document; // @synthesize document=_document;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)findLayer:(id)arg1;
- (void)collapseGroupsInLayerList:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)editingDidEndDelayed;
- (void)controlTextDidEndEditing:(id)arg1;
- (id)searchResultsForTerm:(id)arg1;
- (id)layerAtIndex:(unsigned long long)arg1 matchingSearchTerm:(id)arg2;
- (void)controlTextDidChange:(id)arg1;
- (void)currentPageDidChange;
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)pagesPopoverButtonAction:(id)arg1;
- (void)dropPaths:(id)arg1 onPath:(id)arg2 atPosition:(unsigned long long)arg3;
- (void)dropPaths:(id)arg1 onShape:(id)arg2;
- (void)dropShapes:(id)arg1 onShape:(id)arg2;
- (void)dropLayers:(id)arg1 onGroup:(id)arg2;
- (void)dropLayers:(id)arg1 onLayer:(id)arg2 atPosition:(unsigned long long)arg3;
- (BOOL)listView:(id)arg1 acceptDrop:(id)arg2 row:(unsigned long long)arg3 dropHighlight:(unsigned long long)arg4;
- (unsigned long long)listView:(id)arg1 validateDrop:(id)arg2 proposedRow:(unsigned long long)arg3 proposedDropHighlight:(unsigned long long)arg4;
- (unsigned long long)dropTypeForDraggingIndexes:(id)arg1 onRow:(unsigned long long)arg2 withHighlight:(unsigned long long)arg3;
- (BOOL)layersContainSymbols:(id)arg1;
- (BOOL)layer:(id)arg1 isDescendantOfLayerInArray:(id)arg2;
- (BOOL)layer:(id)arg1 isDescendantOfLayer:(id)arg2;
- (id)formatForDraggedLayer:(id)arg1;
- (BOOL)listView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)renameLayer:(id)arg1;
- (void)keyDown:(id)arg1;
- (id)listView:(id)arg1 cellForRow:(unsigned long long)arg2;
- (double)listView:(id)arg1 heightOfRow:(unsigned long long)arg2;
- (unsigned long long)numberOfRowsInListView:(id)arg1;
- (void)layerCellEditAction:(id)arg1;
- (id)listView:(id)arg1 actualSelectionIndexes:(id)arg2;
- (id)listView:(id)arg1 menuForEvent:(id)arg2;
- (void)setNumberOfSlicesLabel:(unsigned long long)arg1;
- (void)coalescedReloadDataNotification:(id)arg1;
- (void)reloadData;
- (void)selectLayers:(id)arg1;
- (void)resizeRootOfGroupAndParents:(id)arg1;
- (void)listViewSelectionDidChange:(id)arg1;
- (BOOL)layerNameIsBeingEdited;
- (id)selectionIndexForSelectingItemsInLayerListBasedOnCanvasSelection;
- (void)selectItemsInLayerListBasedOnCanvasSelection;
- (BOOL)selectedLayerParentsChanged;
- (BOOL)anySelectedLayerNotCurrentlyVisibleInLayerList;
- (void)selectionDidChange;
- (void)setPageCountLabel;
- (void)awakeFromNib;
- (void)unregisterObservers;
- (void)dealloc;
- (id)init;

@end

@interface MSLayerPickerMenuBuilder : MSMenuBuilder
{
}

- (BOOL)shouldShowSubLayersForGroupInLayerPickerMenu:(id)arg1;
- (void)addLayerItem:(id)arg1 toMenu:(id)arg2 withInset:(id)arg3;
- (void)addChildrenOfGroup:(id)arg1 underPoint:(struct CGPoint)arg2 toMenu:(id)arg3 withInset:(id)arg4;
- (void)updatePickerMenuItem:(id)arg1 forPage:(id)arg2 atPoint:(struct CGPoint)arg3;

@end

@interface MSLayerPositionDrawing : NSObject
{
    id <MSBasicDelegate> _delegate;	// 8 = 0x8
    MSLayer *_hoverLayer;	// 16 = 0x10
    double _zoomValue;	// 24 = 0x18
}

@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(nonatomic) __weak MSLayer *hoverLayer; // @synthesize hoverLayer=_hoverLayer;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)willDraw;
- (void)mouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)clear;
- (void)drawDistanceToEnclosingFrame:(id)arg1 zoom:(double)arg2;
- (id)verticalRectBetweenRect:(id)arg1 andRect:(id)arg2;
- (id)horizontalRectBetweenRect:(id)arg1 andRect:(id)arg2;
- (double)dashesOffset;
- (void)applyDashPattern:(id)arg1;
- (void)drawHorizontalDashLinesBetweenRect:(id)arg1 andRect:(id)arg2;
- (void)drawVerticalDashLinesBetweenRect:(id)arg1 andRect:(id)arg2;
- (void)drawHeightBetweenRect:(id)arg1 andRect:(id)arg2;
- (void)drawWidthBetweenRect:(id)arg1 andRect:(id)arg2;
- (void)drawOutlineForRect:(id)arg1;
- (void)drawDistanceFromSelectedLayersToLayer:(id)arg1;
- (id)selectedLayersRect;
- (id)enclosingGroupRectOrArtboard;
- (void)draw;

@end

@interface MSLayerPreviewView : NSView
{
    MSLayer *_previewedLayer;	// 152 = 0x98
}

@property(retain, nonatomic) MSLayer *previewedLayer; // @synthesize previewedLayer=_previewedLayer;
- (void).cxx_destruct;
- (id)menuForEvent:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSLayerSection : CHViewController <MSSectionProtocol>
{
    NSArray *layers;	// 104 = 0x68
}

@property(copy, nonatomic) NSArray *layers; // @synthesize layers;
- (void).cxx_destruct;
- (id)views;
- (id)initWithLayer:(id)arg1;

@end

@interface MSLayerSelectionDrawing : NSObject
{
}

+ (BOOL)layerIsLine:(id)arg1;
+ (void)drawSelectionHandlersForLayer:(id)arg1;
+ (void)drawSelectionStrokeForLayer:(id)arg1;
+ (BOOL)shouldDrawSelectionStrokeForLayer:(id)arg1;
+ (void)drawSelectionForLayer:(id)arg1;

@end

@interface MSLayerSnapper : NSObject
{
    id <MSBasicDelegate> _delegate;	// 8 = 0x8
    MSNormalEventData *_eventData;	// 16 = 0x10
    double _zoomValue;	// 24 = 0x18
}

@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(retain, nonatomic) MSNormalEventData *eventData; // @synthesize eventData=_eventData;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (double)topLineForTextLayer:(id)arg1;
- (double)baseLineForTextLayer:(id)arg1;
- (id)snapsForTextLayer:(id)arg1;
- (id)snapsForLine:(id)arg1;
- (id)snapsForFrame:(struct CGRect)arg1;
- (id)snapsForLayer:(id)arg1;
- (id)snapsForLayers:(id)arg1 skipLayers:(id)arg2;
- (void)snapTextLayer:(id)arg1 toLines:(id)arg2 visible:(BOOL)arg3 snap:(BOOL)arg4 resize:(BOOL)arg5 edges:(long long)arg6;
- (void)_snapLayer:(id)arg1 toLines:(id)arg2 visible:(BOOL)arg3 snap:(BOOL)arg4 resize:(BOOL)arg5 edges:(unsigned long long)arg6;
- (void)snapLayer:(id)arg1 toLines:(id)arg2 visible:(BOOL)arg3 snap:(BOOL)arg4 resize:(BOOL)arg5 edges:(unsigned long long)arg6;
- (void)changeFrame:(id)arg1 forLine:(id)arg2 visible:(BOOL)arg3 direction:(id)arg4 block:(CDUnknownBlockType)arg5;
- (void)snapLayer:(id)arg1 snap:(BOOL)arg2 resize:(BOOL)arg3 edges:(unsigned long long)arg4;
- (void)cleanupSnaps;
- (void)refreshSnaps;
- (void)drawSnaps;
- (void)snapLayerResize:(id)arg1 edges:(id)arg2;
- (void)snapsMouseDraggedHook:(id)arg1;
- (void)snapsMouseUpHook;
- (void)cleanupDistanceSnaps;
- (BOOL)rect:(struct CGRect)arg1 isOnLineWithRect:(struct CGRect)arg2 inDirection:(long long)arg3;
- (void)refreshDistances;
- (void)drawSnapDistances;
- (void)snapLayer:(id)arg1 againstLayers:(id)arg2 inDirection:(id)arg3 resize:(BOOL)arg4;
- (id)distanceRectangleBetweenLayer:(id)arg1 andLayer:(id)arg2 inDirection:(id)arg3;
- (id)distanceRectanglesBetweenLayers:(id)arg1 inDirection:(id)arg2;
- (id)layersOnLineFromLayer:(id)arg1 inDirection:(id)arg2 order:(long long)arg3;
- (void)snapLayer:(id)arg1 onAxis:(id)arg2 resize:(BOOL)arg3;
- (BOOL)snapLayerDistance:(id)arg1 edges:(long long)arg2 resize:(BOOL)arg3;
- (void)drawSnapLayerWidths;
- (void)refreshSnapLayers;
- (void)cleanupLayerSizeSnaps;
- (BOOL)snapLayerSize:(id)arg1 snap:(BOOL)arg2 edges:(long long)arg3;

@end

@interface MSLayerStylePreviewGenerator : NSObject
{
}

+ (struct CGRect)adjustDrawRect:(struct CGRect)arg1 forStyle:(id)arg2;
+ (id)previewForStyle:(id)arg1 atSize:(struct CGSize)arg2;
+ (void)generateImageForLayerStyle:(id)arg1 imageSize:(struct CGSize)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface MSLayersPasteboardHelper : NSObject
{
    NSPasteboard *_pasteboard;	// 8 = 0x8
}

+ (id)shapePathsInLayers:(id)arg1;
+ (void)embedLayerInGroupIfNecessary:(id)arg1 selectedLayers:(id)arg2 defaultStyle:(id)arg3;
+ (id)layersFromPasteboardData:(id)arg1 selectedLayers:(id)arg2;
+ (void)relinkSharedObjectsInDocument:(id)arg1 inLayers:(id)arg2;
+ (void)mergeSharedObjectsIntoDocument:(id)arg1 fromDictionary:(id)arg2;
+ (id)bitmapsNeedingRelinkingInSymbolsOfDocument:(id)arg1;
+ (id)readLayersFromPasteboardData:(id)arg1 intoGroup:(id)arg2 selectedLayers:(id)arg3 defaultStyle:(id)arg4 adjustmentBlock:(CDUnknownBlockType)arg5;
+ (BOOL)allLayers:(id)arg1 canBePastedIntoGroup:(id)arg2 symbols:(id)arg3;
+ (id)usedSharedObjectsInDocument:(id)arg1 layers:(id)arg2;
+ (id)imagesUsedInLayers:(id)arg1 fromImageCollection:(id)arg2;
+ (id)pasteboardDataForLayers:(id)arg1 fromDocument:(id)arg2;
@property(retain, nonatomic) NSPasteboard *pasteboard; // @synthesize pasteboard=_pasteboard;
- (void).cxx_destruct;
- (id)readLayersIntoGroup:(id)arg1 selectedLayers:(id)arg2 defaultStyle:(id)arg3 adjustmentBlock:(CDUnknownBlockType)arg4;
- (void)writeLayers:(id)arg1 fromDocument:(id)arg2;
- (id)initWithPasteboard:(id)arg1;

@end

@interface MSLayoutGrid : _MSLayoutGrid
{
    NSColor *_lightColor;	// 8 = 0x8
    NSColor *_darkColor;	// 16 = 0x10
}

@property(retain, nonatomic) NSColor *darkColor; // @synthesize darkColor=_darkColor;
@property(retain, nonatomic) NSColor *lightColor; // @synthesize lightColor=_lightColor;
- (void).cxx_destruct;
- (BOOL)shouldDraw;
- (void)setColumnWidth:(double)arg1;
- (void)setGutterWidth:(double)arg1;
- (long long)totalNumberOfGutters;
- (void)setGuttersOutside:(BOOL)arg1;
- (void)setTotalWidth:(double)arg1;
- (void)setNumberOfColumns:(double)arg1;
- (void)determineAppropriateColumnWidth;
- (void)drawRowInRect:(struct CGRect)arg1 zoom:(double)arg2;
- (void)drawColumnInRect:(struct CGRect)arg1 zoom:(double)arg2;
- (void)drawInRect:(struct CGRect)arg1 baseLine:(struct CGPoint)arg2 atZoom:(double)arg3;
- (id)verticalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (id)horizontalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (unsigned long long)decodingConversionForProperty:(id)arg1;

@end

@interface MSLayoutSheet : CHSheetController <NSWindowDelegate>
{
    NSButton *_centerGridButton;	// 80 = 0x50
    MSLayoutGrid *_originalLayout;	// 88 = 0x58
    MSLayoutGrid *_layout;	// 96 = 0x60
}

@property(retain, nonatomic) MSLayoutGrid *layout; // @synthesize layout=_layout;
@property(copy, nonatomic) MSLayoutGrid *originalLayout; // @synthesize originalLayout=_originalLayout;
@property(retain, nonatomic) NSButton *centerGridButton; // @synthesize centerGridButton=_centerGridButton;
- (void).cxx_destruct;
- (void)centerGridInArtboard;
- (void)centerGrid:(id)arg1;
- (void)gridChanged:(id)arg1;
- (void)setAsDefault:(id)arg1;
- (void)confirm:(id)arg1;
- (void)refreshView;
- (void)cancelAction:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSLegacyLayerContainer : _MSLegacyLayerContainer
{
}

- (void)migratePropertiesFromV25OrEarlierWithCoder:(id)arg1;

@end

@interface MSLegacySlice : _MSLegacySlice <NSCoding, NSCopying>
{
}

- (id)trimmedSliceWithDelegate:(id)arg1;
- (BOOL)shouldConvertArrayPropertyWithName:(id)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;

@end

@interface MSLine : NSObject
{
    struct CGRect _area;	// 8 = 0x8
    BOOL _areaIsInitial;	// 40 = 0x28
    long long _type;	// 48 = 0x30
    double _position;	// 56 = 0x38
}

+ (id)verticalLineWithPosition:(double)arg1 inRect:(struct CGRect)arg2;
+ (id)horizontalLineWithPosition:(double)arg1 inRect:(struct CGRect)arg2;
+ (id)verticalLineWithPosition:(double)arg1;
+ (id)horizontalLineWithPosition:(double)arg1;
@property(nonatomic) double position; // @synthesize position=_position;
@property(nonatomic) long long type; // @synthesize type=_type;
- (id)GKLine;
- (id)description;
- (struct CGRect)dirtyAbsoluteRectInFrame:(struct CGRect)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)drawWithZoomValue:(double)arg1;
- (void)addRect:(struct CGRect)arg1;
- (id)initVerticalLineWithPosition:(double)arg1;
- (id)initHorizontalLineWithPosition:(double)arg1;

@end

@interface MSLineHeightTextFieldCell : NSTextFieldCell
{
    BOOL _forceNormalDraw;	// 84 = 0x54
    double _autoValue;	// 88 = 0x58
}

@property(nonatomic) BOOL forceNormalDraw; // @synthesize forceNormalDraw=_forceNormalDraw;
@property(nonatomic) double autoValue; // @synthesize autoValue=_autoValue;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSListDocumentView : PXListDocumentView
{
}

- (void)dealloc;
- (void)windowFocusDidChange:(id)arg1;
- (void)awakeFromNib;
- (void)drawSelectionForRange:(struct _NSRange)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)backgroundColor;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)rightMouseDown:(id)arg1;
- (id)menuForEvent:(id)arg1;

@end

@interface MSMakeGridAction : MSBaseAction
{
}

- (id)validation;
- (void)performAction:(id)arg1;
- (id)imageName;
- (void)makeGrid:(id)arg1;

@end

@interface MSMakeGridSheet : CHSheetController
{
    BOOL _isBoxed;	// 80 = 0x50
    BOOL _hasHorizontalPadding;	// 81 = 0x51
    BOOL _hasVerticalPadding;	// 82 = 0x52
    MSDocument *_doc;	// 88 = 0x58
    long long _numberOfRows;	// 96 = 0x60
    long long _numberOfColumns;	// 104 = 0x68
    long long _horizontalPadding;	// 112 = 0x70
    long long _verticalPadding;	// 120 = 0x78
    long long _boxedWidth;	// 128 = 0x80
    long long _boxedHeight;	// 136 = 0x88
    NSImageView *_imageView;	// 144 = 0x90
    NSTextField *_subtextField;	// 152 = 0x98
    NSButton *_confirmButton;	// 160 = 0xa0
    NSArray *_allLayersCached;	// 168 = 0xa8
}

@property(copy, nonatomic) NSArray *allLayersCached; // @synthesize allLayersCached=_allLayersCached;
@property(nonatomic) __weak NSButton *confirmButton; // @synthesize confirmButton=_confirmButton;
@property(nonatomic) __weak NSTextField *subtextField; // @synthesize subtextField=_subtextField;
@property(nonatomic) __weak NSImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) long long boxedHeight; // @synthesize boxedHeight=_boxedHeight;
@property(nonatomic) long long boxedWidth; // @synthesize boxedWidth=_boxedWidth;
@property(nonatomic) long long verticalPadding; // @synthesize verticalPadding=_verticalPadding;
@property(nonatomic) long long horizontalPadding; // @synthesize horizontalPadding=_horizontalPadding;
@property(nonatomic) long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(nonatomic) long long numberOfRows; // @synthesize numberOfRows=_numberOfRows;
@property(nonatomic) BOOL hasVerticalPadding; // @synthesize hasVerticalPadding=_hasVerticalPadding;
@property(nonatomic) BOOL hasHorizontalPadding; // @synthesize hasHorizontalPadding=_hasHorizontalPadding;
@property(nonatomic) BOOL isBoxed; // @synthesize isBoxed=_isBoxed;
@property(retain, nonatomic) MSDocument *doc; // @synthesize doc=_doc;
- (void).cxx_destruct;
- (id)allLayers;
- (struct CGSize)defaultBoxSize;
- (unsigned long long)layerCount;
- (BOOL)layersHaveSameSize;
- (struct CGSize)sizeForLayer:(id)arg1;
- (long long)heightOfHighestLayerOnRow:(id)arg1;
- (void)makeGrid;
- (void)confirm:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)validatePaddingFields;
- (void)changeBoxedImage;
- (void)boxedAction:(id)arg1;
- (void)registerMarginDefaults;
- (void)awakeFromNib;

@end

@interface MSMakeLowercaseAction : MSBaseAction
{
}

- (void)performAction:(id)arg1;
- (void)makeLowercase:(id)arg1;

@end

@interface MSMakeUppercaseAction : MSBaseAction
{
}

- (void)performAction:(id)arg1;
- (void)makeUppercase:(id)arg1;

@end

@interface MSManageSymbolsSheet : CHSheetController <NSTableViewDataSource, NSTableViewDelegate>
{
    NSTableView *_symbolsTableView;	// 80 = 0x50
    NSTableView *_layerStylesTableView;	// 88 = 0x58
    NSTableView *_textStylesTableView;	// 96 = 0x60
    NSImage *_blankImage;	// 104 = 0x68
    NSMutableDictionary *_symbolPreviews;	// 112 = 0x70
    NSMutableDictionary *_layerStylePreviews;	// 120 = 0x78
}

@property(retain, nonatomic) NSMutableDictionary *layerStylePreviews; // @synthesize layerStylePreviews=_layerStylePreviews;
@property(retain, nonatomic) NSMutableDictionary *symbolPreviews; // @synthesize symbolPreviews=_symbolPreviews;
@property(retain, nonatomic) NSImage *blankImage; // @synthesize blankImage=_blankImage;
@property(retain, nonatomic) NSTableView *textStylesTableView; // @synthesize textStylesTableView=_textStylesTableView;
@property(retain, nonatomic) NSTableView *layerStylesTableView; // @synthesize layerStylesTableView=_layerStylesTableView;
@property(retain, nonatomic) NSTableView *symbolsTableView; // @synthesize symbolsTableView=_symbolsTableView;
- (void).cxx_destruct;
- (id)doc;
- (id)containerForTableView:(id)arg1;
- (id)previewForSharedObjectInTableView:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)generatePreviewSharedObject:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)deleteSelectedObjectInTableView:(id)arg1;
- (void)deleteTextStyle:(id)arg1;
- (void)deleteLayerStyle:(id)arg1;
- (void)deleteSymbol:(id)arg1;
- (id)sharedObjectForTableView:(id)arg1 atIndex:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)generateSymbolsForTableView:(id)arg1 imageArray:(id)arg2;
- (void)awakeFromNib;

@end

@interface MSMaskWithShapeAction : MSBaseAction
{
}

- (id)label;
- (BOOL)showInToolbar;
- (void)disableSuperfluousStylesForMaskStyle:(id)arg1;
- (void)prepareShapeLayerForMask:(id)arg1;
- (id)makeGroupForMask;
- (void)finishGroupForMask:(id)arg1;
- (void)createMaskWithShape:(id)arg1 bitmap:(id)arg2;
- (void)performAction:(id)arg1;
- (void)maskWithShape:(id)arg1;
- (BOOL)validate;

@end

@interface MSMathNumberFormatter : NSNumberFormatter
{
}

- (id)mathSet;
- (BOOL)stringContainsMathSymbols:(id)arg1;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;

@end

@interface MSMenuBuilder : NSObject
{
    id _target;	// 8 = 0x8
    SEL _action;	// 16 = 0x10
    id <MSBasicDelegate> _delegate;	// 24 = 0x18
}

+ (id)menuBuilderWithTarget:(id)arg1 delegate:(id)arg2;
+ (id)menuBuilderWithTarget:(id)arg1 action:(SEL)arg2;
+ (id)menuBuilderWithTarget:(id)arg1;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(retain, nonatomic) id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface MSMiniToolbarTextFieldCell : NSTextFieldCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSMissingFontsDialog : NSWindowController <NSTableViewDataSource>
{
    NSWindow *panel;	// 80 = 0x50
    NSTableView *tableView;	// 88 = 0x58
    BOOL openDocumentAnyway;	// 96 = 0x60
    NSArray *_missingFonts;	// 104 = 0x68
}

@property(copy, nonatomic) NSArray *missingFonts; // @synthesize missingFonts=_missingFonts;
- (void).cxx_destruct;
- (void)dealloc;
- (void)close:(id)arg1;
- (void)openAnyway:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)runPanelWithMissingFonts:(id)arg1;

@end

@interface MSModalInputSheet : NSObject <NSWindowDelegate>
{
    NSWindow *panel;	// 8 = 0x8
    NSTextField *titleField;	// 16 = 0x10
    NSTextField *textField;	// 24 = 0x18
    NSTextField *numberField;	// 32 = 0x20
    NSPathControl *pathControl;	// 40 = 0x28
    BOOL finishedOK;	// 48 = 0x30
    long long _type;	// 56 = 0x38
    NSString *_label;	// 64 = 0x40
    double _numberFieldBinding;	// 72 = 0x48
}

@property(nonatomic) double numberFieldBinding; // @synthesize numberFieldBinding=_numberFieldBinding;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)cancel:(id)arg1;
- (void)ok:(id)arg1;
- (id)runPanelWithNibName:(id)arg1 ofType:(long long)arg2 initialString:(id)arg3 label:(id)arg4;

@end

@interface MSModePickerView : NSView
{
    long long _pickerMode;	// 152 = 0x98
    id <MSModeModePickerDelegate> _delegate;	// 160 = 0xa0
    NSButton *_button1;	// 168 = 0xa8
    NSButton *_button2;	// 176 = 0xb0
    NSButton *_button3;	// 184 = 0xb8
    NSButton *_button4;	// 192 = 0xc0
    NSButton *_button5;	// 200 = 0xc8
    NSButton *_button6;	// 208 = 0xd0
    NSTextField *_labelField;	// 216 = 0xd8
}

@property(nonatomic) __weak NSTextField *labelField; // @synthesize labelField=_labelField;
@property(nonatomic) __weak NSButton *button6; // @synthesize button6=_button6;
@property(nonatomic) __weak NSButton *button5; // @synthesize button5=_button5;
@property(nonatomic) __weak NSButton *button4; // @synthesize button4=_button4;
@property(nonatomic) __weak NSButton *button3; // @synthesize button3=_button3;
@property(nonatomic) __weak NSButton *button2; // @synthesize button2=_button2;
@property(nonatomic) __weak NSButton *button1; // @synthesize button1=_button1;
@property(nonatomic) __weak id <MSModeModePickerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long pickerMode; // @synthesize pickerMode=_pickerMode;
- (void).cxx_destruct;
- (id)buttons;
- (void)deselectAllButtons;
- (id)cellForMode:(long long)arg1;
- (id)buttonForMode:(long long)arg1;
- (id)labelForMode:(long long)arg1;
- (long long)pickerModeForEvent:(id)arg1;
- (long long)highlightCount;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)addTrackingAreaForButton:(id)arg1;
- (void)buttonAction:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSModelFileHeader : NSObject <NSCoding>
{
    long long _version;	// 8 = 0x8
    NSDictionary *_metadata;	// 16 = 0x10
    id _root;	// 24 = 0x18
}

+ (id)latestMetadata;
@property(retain, nonatomic) id root; // @synthesize root=_root;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) long long version; // @synthesize version=_version;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MSModelObject : NSObject <NSCoding, NSCopying>
{
    unsigned char _flags;	// 8 = 0x8
    MSModelObject *_akParentObject;	// 16 = 0x10
    id _objectID;	// 24 = 0x18
    MSDocumentData *_documentData;	// 32 = 0x20
    MSModelObject *_akLightweightCopy;	// 40 = 0x28
    NSCache *_cache;	// 48 = 0x30
}

+ (void)performWithoutUpdateEvents:(CDUnknownBlockType)arg1;
+ (void)clearInstanceCount;
+ (void)printInstanceCount:(id)arg1;
@property(nonatomic) unsigned char flags; // @synthesize flags=_flags;
@property(retain, nonatomic) NSCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) MSModelObject *akLightweightCopy; // @synthesize akLightweightCopy=_akLightweightCopy;
@property(nonatomic) __weak MSDocumentData *documentData; // @synthesize documentData=_documentData;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
@property(copy, nonatomic) id objectID; // @synthesize objectID=_objectID;
- (id)rootModelObject;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (BOOL)hasObjectID;
- (void)generateObjectID;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)sendMessageToRootObject:(unsigned long long)arg1;
- (void)childDidChangeNotification:(id)arg1;
- (void)notifyParentsOfPropertyChange:(id)arg1;
- (id)undoManager;
- (id)undoManagerWithoutCaching;
- (BOOL)isUndoing;
- (id)parentGroup;
- (void)setAsParentOnChildren;
- (void)propertyDidChange:(id)arg1;
@property(nonatomic) __weak MSModelObject *akParentObject; // @synthesize akParentObject=_akParentObject;
- (void)objectDidInit;
- (void)fillInEmptyObjects;
- (void)initEmptyObject;
- (id)initWithNoSetup;
- (id)init;
- (void)clearCachedValueForKey:(id)arg1;
- (void)clearCache;
- (void)updateCachedValue:(id)arg1 forKey:(id)arg2;
- (id)cachedValueForKey:(id)arg1 setUsingBlock:(CDUnknownBlockType)arg2;
- (id)cachedValueForKey:(id)arg1;
- (id)description;
- (id)treeAsDictionary;
- (id)simpleTreeStructure;
- (id)treeStructure;
- (void)appendTreeStructureToString:(id)arg1 withIndent:(unsigned long long)arg2;
- (void)appendSimpleStructureToString:(id)arg1 withIndent:(unsigned long long)arg2;
- (void)recordDeallocation;
- (void)recordAllocation;
- (id)migrationsInList:(SEL *)arg1;
- (SEL *)migrationListForClass:(Class)arg1;
- (SEL *)allocateMigrationListForClass:(Class)arg1;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)decodePropertiesUsingMigrationWithCoder:(id)arg1;
- (void)performMigrationsWithCoder:(id)arg1;
- (void)enumerateMigrations:(SEL *)arg1 fromVersion:(long long)arg2 block:(CDUnknownBlockType)arg3;
- (void)initObjectWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic) BOOL isDecoding;
- (void)encodeObjectIDWithCoder:(id)arg1;
- (void)didCatchException:(id)arg1 duringEncodeWithCoder:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)prepareObjectCopy:(id)arg1;
- (id)copyEmpty;
- (void)prepareCopy:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyIncludingObjectIDS;
- (id)makeLightweightCopy;
- (id)copyLightweight;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
@property(nonatomic) BOOL isLightweightCopy;
- (Class)arrayClassForConvertingArrayPropertyWithName:(id)arg1;
- (BOOL)shouldConvertArrayPropertyWithName:(id)arg1;
- (void)setDecodedValue:(id)arg1 forKey:(id)arg2;
- (id)transformDecodedObjectIfNecessary:(id)arg1 key:(id)arg2;
- (id)decodeObjectWithPossibleConversionForKey:(id)arg1 coder:(id)arg2;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (id)archivingKeyForProperty:(id)arg1;
- (void)decodeObjectWithKey:(id)arg1 fromCoder:(id)arg2;
- (void)initLegacyWithCoder:(id)arg1;
- (void)decodePropertiesUsingLegacyMethodWithCoder:(id)arg1;

@end

@interface MSModelObjectInstanceInfo : NSObject
{
    unsigned long long _current;	// 8 = 0x8
    unsigned long long _total;	// 16 = 0x10
}

@property(nonatomic) unsigned long long total; // @synthesize total=_total;
@property(nonatomic) unsigned long long current; // @synthesize current=_current;
- (id)description;

@end

@interface MSModelResources : CHSingletonObject
{
    NSBundle *_bundle;	// 8 = 0x8
    NSArray *_noiseImages;	// 16 = 0x10
    unsigned long long _status;	// 24 = 0x18
}

+ (id)sharedInstance;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(copy, nonatomic) NSArray *noiseImages; // @synthesize noiseImages=_noiseImages;
@property(retain, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
- (void).cxx_destruct;
- (id)loadNoiseImageWithIndex:(long long)arg1;
- (void)preloadResources;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2;
- (id)URLForImageResource:(id)arg1;

@end

@interface MSMoveBackwardAction : MSBaseMoveBackwardAction
{
}

- (id)label;
- (void)performAction:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)moveBackwardInLayerList;
- (void)moveBehindFirstOverlappingLayer;

@end

@interface MSMoveForwardAction : MSBaseMoveForwardAction
{
}

- (id)label;
- (void)performAction:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveForwardInLayerList;
- (void)moveInFrontOfFirstOverlappingLayer;

@end

@interface MSMoveToBackAction : MSBaseMoveBackwardAction
{
}

- (void)performAction:(id)arg1;
- (void)moveToBack:(id)arg1;

@end

@interface MSMoveToFrontAction : MSBaseMoveForwardAction
{
}

- (void)performAction:(id)arg1;
- (void)moveToFront:(id)arg1;

@end

@interface MSMultipleBorderInspectorViewController : MSMultipleStylePartInspectorViewController <BCPopoverDelegate>
{
    NSButton *addStylePartButton;	// 104 = 0x68
    MSTextLabelForUpDownField *_thicknessLabel;	// 112 = 0x70
    MSBorderOptionsInspectorViewController *_borderOptionsController;	// 120 = 0x78
    BCPopover *_popover;	// 128 = 0x80
}

@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) MSBorderOptionsInspectorViewController *borderOptionsController; // @synthesize borderOptionsController=_borderOptionsController;
@property(retain, nonatomic) MSTextLabelForUpDownField *thicknessLabel; // @synthesize thicknessLabel=_thicknessLabel;
- (void).cxx_destruct;
- (void)dealloc;
- (void)reloadInspectorStack:(id)arg1;
- (id)views;
- (id)inspectorForStyleParts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)loadViewControllers;
- (BOOL)shouldShowAdvancedOptionsButton;
- (BOOL)shouldHideAddStylePartButton;
- (void)setLayers:(id)arg1;
- (void)styleDidEnableOrDisable;
- (void)popoverWillClose:(id)arg1;
- (void)showBorderOptionsButtonAction:(id)arg1;
- (void)prepare;
- (id)stylePartKeyPath;
- (id)initWithDelegate:(id)arg1;

@end

@interface MSMultipleFillInspectorViewController : MSMultipleStylePartInspectorViewController <BCPopoverDelegate>
{
    MSTextLabelForUpDownField *_opacityLabel;	// 104 = 0x68
    NSButton *_addStylePartButton;	// 112 = 0x70
    BCPopover *_popover;	// 120 = 0x78
}

@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSButton *addStylePartButton; // @synthesize addStylePartButton=_addStylePartButton;
@property(retain, nonatomic) MSTextLabelForUpDownField *opacityLabel; // @synthesize opacityLabel=_opacityLabel;
- (void).cxx_destruct;
- (id)views;
- (id)inspectorForStyleParts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)loadViewControllers;
- (id)stylePartKeyPath;
- (void)popoverWillClose:(id)arg1;
- (BOOL)shouldShowAdvancedOptionsButton;
- (void)viewControllerWillDisappear;
- (BOOL)shouldHideAddStylePartButton;
- (void)prepare;
- (void)showAdvancedOptionsAction:(id)arg1;

@end

@interface MSMultipleInnerShadowInspectorViewController : MSMultipleShadowInspectorViewController
{
}

- (void)awakeFromNib;
- (id)nibName;
- (BOOL)shouldHideAddStylePartButton;
- (id)stylePartKeyPath;

@end

@interface MSMultipleMutableArray : NSObject <NSCoding>
{
}

- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface MSMultipleShadowInspectorViewController : MSMultipleStylePartInspectorViewController
{
    NSButton *_addStylePartButton;	// 104 = 0x68
    MSTextLabelForUpDownField *_xOffsetField;	// 112 = 0x70
    MSTextLabelForUpDownField *_yOffsetField;	// 120 = 0x78
    MSTextLabelForUpDownField *_blurRadiusField;	// 128 = 0x80
    MSTextLabelForUpDownField *_spreadField;	// 136 = 0x88
}

@property(retain, nonatomic) MSTextLabelForUpDownField *spreadField; // @synthesize spreadField=_spreadField;
@property(retain, nonatomic) MSTextLabelForUpDownField *blurRadiusField; // @synthesize blurRadiusField=_blurRadiusField;
@property(retain, nonatomic) MSTextLabelForUpDownField *yOffsetField; // @synthesize yOffsetField=_yOffsetField;
@property(retain, nonatomic) MSTextLabelForUpDownField *xOffsetField; // @synthesize xOffsetField=_xOffsetField;
@property(retain, nonatomic) NSButton *addStylePartButton; // @synthesize addStylePartButton=_addStylePartButton;
- (void).cxx_destruct;
- (id)views;
- (void)validateSpecialButtons;
- (id)inspectorForStyleParts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)loadViewControllers;
- (BOOL)shouldHideAddStylePartButton;
- (void)prepare;
- (id)stylePartKeyPath;

@end

@interface MSMultipleStylePartInspectorViewController : CHViewController <MSReorderingContainerDelegate>
{
    NSArray *_layers;	// 104 = 0x68
    NSArray *_stylePartViewControllers;	// 112 = 0x70
    id <MSStylePartInspectorDelegate> _delegate;	// 120 = 0x78
    MSReorderingContainerView *_reorderingContainer;	// 128 = 0x80
    NSTextField *_nameField;	// 136 = 0x88
    NSTextField *_nameFieldShadow;	// 144 = 0x90
    NSView *_nameView;	// 152 = 0x98
    NSButton *_removeDisabledStylesButton;	// 160 = 0xa0
    NSButton *_showAdvancedOptionsButton;	// 168 = 0xa8
}

@property(retain, nonatomic) NSButton *showAdvancedOptionsButton; // @synthesize showAdvancedOptionsButton=_showAdvancedOptionsButton;
@property(retain, nonatomic) NSButton *removeDisabledStylesButton; // @synthesize removeDisabledStylesButton=_removeDisabledStylesButton;
@property(retain, nonatomic) NSView *nameView; // @synthesize nameView=_nameView;
@property(retain, nonatomic) NSTextField *nameFieldShadow; // @synthesize nameFieldShadow=_nameFieldShadow;
@property(retain, nonatomic) NSTextField *nameField; // @synthesize nameField=_nameField;
@property(retain, nonatomic) MSReorderingContainerView *reorderingContainer; // @synthesize reorderingContainer=_reorderingContainer;
@property(nonatomic) __weak id <MSStylePartInspectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *stylePartViewControllers; // @synthesize stylePartViewControllers=_stylePartViewControllers;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
- (void).cxx_destruct;
- (BOOL)shouldShowAdvancedOptionsButton;
- (void)prepareInspector:(id)arg1 parts:(id)arg2 index:(unsigned long long)arg3;
- (BOOL)hasEnabledStyle;
- (void)dealloc;
- (void)prepareParentForDisplay;
- (double)startingOffsetForStackingContainerBackground:(id)arg1;
- (void)containerBackground:(id)arg1 dragDidReorderChildAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (id)stylePartKeyPath;
- (void)deleteUnusedStylePartsAction:(id)arg1;
- (void)deleteStylePartAction:(id)arg1;
- (id)addStylePartsForSelection;
- (BOOL)hasPopOver;
- (id)lastEnabledStylePartController;
- (void)addStylePartAction:(id)arg1;
- (id)rotatedStyleParts;
- (void)validateSpecialButtons;
- (void)prepare;
- (void)prepareForReuse;
- (id)viewForStyleAtOffset:(long long)arg1 index:(unsigned long long)arg2;
- (void)styleDidEnableOrDisable;
- (void)resizeViewToFit;
- (id)inspectorForStyleParts:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)validateAdvancedOptionsButton;
- (void)validateRemoveDisabledStylesButton;
- (void)loadViewControllers;
- (void)awakeFromNib;
- (id)nibName;
- (id)initWithDelegate:(id)arg1;

@end

@interface MSNewsletterTextField : NSTextField
{
}

- (BOOL)becomeFirstResponder;

@end

@interface MSNewsletterTextFieldCell : NSTextFieldCell
{
}

- (id)setUpFieldEditorAttributes:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSNineSliceAction : MSProEventHandlerAction
{
}

- (BOOL)validate;
- (BOOL)validateMenuItem:(id)arg1;
- (void)nineSlice:(id)arg1;

@end

@interface MSNineSliceEventHandler : MSPointsEventHandler
{
    struct CGRect originalRect;	// 160 = 0xa0
}

- (void)drawHandleLines;
- (id)snapsForShape;
- (void)didUndoNotification:(id)arg1;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (id)points;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;

@end

@interface MSNoise : NSObject
{
}

+ (void)drawWithIntensity:(double)arg1 ofType:(long long)arg2 inRect:(struct CGRect)arg3 zoomValue:(double)arg4;
+ (void)drawWithIntensity:(double)arg1 ofType:(long long)arg2 inPath:(id)arg3 zoomValue:(double)arg4;

@end

@interface MSNonAutosavingDocument : MSDocument
{
}

+ (BOOL)autosavesInPlace;
- (id)fileType;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface MSNormalBaseEventHandler : MSEventHandler
{
}

- (void)refreshRulers;
- (id)cursorForCorner:(long long)arg1 transformStruct:(struct _CHTransformStruct)arg2;

@end

@interface MSNormalEventContextualMenuBuilder : NSObject
{
    NSMenu *_standardLayerMenu;	// 8 = 0x8
    NSMenu *_textLayerMenu;	// 16 = 0x10
    NSMenu *_groupLayerMenu;	// 24 = 0x18
    NSMenu *_multipleSelectionMenu;	// 32 = 0x20
    NSMenu *_noSelectionMenu;	// 40 = 0x28
    NSMenu *_symbolLayerMenu;	// 48 = 0x30
    NSMenu *_artboardAndSlicesMenu;	// 56 = 0x38
}

@property(retain, nonatomic) NSMenu *artboardAndSlicesMenu; // @synthesize artboardAndSlicesMenu=_artboardAndSlicesMenu;
@property(retain, nonatomic) NSMenu *symbolLayerMenu; // @synthesize symbolLayerMenu=_symbolLayerMenu;
@property(retain, nonatomic) NSMenu *noSelectionMenu; // @synthesize noSelectionMenu=_noSelectionMenu;
@property(retain, nonatomic) NSMenu *multipleSelectionMenu; // @synthesize multipleSelectionMenu=_multipleSelectionMenu;
@property(retain, nonatomic) NSMenu *groupLayerMenu; // @synthesize groupLayerMenu=_groupLayerMenu;
@property(retain, nonatomic) NSMenu *textLayerMenu; // @synthesize textLayerMenu=_textLayerMenu;
@property(retain, nonatomic) NSMenu *standardLayerMenu; // @synthesize standardLayerMenu=_standardLayerMenu;
- (void).cxx_destruct;
- (id)symbolOnlyItems;
- (id)groupOnlyItems;
- (id)textOnlyItems;
- (id)noSelectionItems;
- (id)distributeItems;
- (id)alignItems;
- (id)lockHideItems;
- (id)transformItems;
- (id)groupRenameItems;
- (id)pasteCopyStyleItems;
- (id)moveForwardBackwardItems;
- (id)pickLayerItems;
- (id)cutCopyPasteItems;
- (id)menuWithItemGroups:(id)arg1;
- (id)standardMenuItemGroups;
- (void)constructMenus;
- (id)menuForLayers:(id)arg1;

@end

@interface MSNormalEventData : NSObject
{
    struct CGPoint selectionStartPoint;	// 8 = 0x8
    struct CGPoint selectionEndPoint;	// 24 = 0x18
    BOOL hasMultipleTouches;	// 40 = 0x28
    BOOL didMouseDown;	// 41 = 0x29
    long long resizingCorner;	// 48 = 0x30
    long long dragMode;	// 56 = 0x38
    struct CGPoint mouseDown;	// 64 = 0x40
    struct CGPoint midPoint;	// 80 = 0x50
    struct CGPoint originalScrollOrigin;	// 96 = 0x60
    NSMutableArray *snapHorizontalLines;	// 112 = 0x70
    NSMutableArray *snapVerticalLines;	// 120 = 0x78
    NSMutableArray *snapWidthLayers;	// 128 = 0x80
    NSMutableArray *snapHeightLayers;	// 136 = 0x88
    NSMutableArray *snapDistanceWidths;	// 144 = 0x90
    NSMutableArray *snapDistanceHeights;	// 152 = 0x98
    MSLayer *resizingLayer;	// 160 = 0xa0
    NSArray *_backupSelection;	// 168 = 0xa8
}

@property(copy, nonatomic) NSArray *backupSelection; // @synthesize backupSelection=_backupSelection;
@property(retain, nonatomic) NSMutableArray *snapDistanceHeights; // @synthesize snapDistanceHeights;
@property(retain, nonatomic) NSMutableArray *snapDistanceWidths; // @synthesize snapDistanceWidths;
@property(retain, nonatomic) NSMutableArray *snapHeightLayers; // @synthesize snapHeightLayers;
@property(retain, nonatomic) NSMutableArray *snapWidthLayers; // @synthesize snapWidthLayers;
@property(nonatomic) BOOL hasMultipleTouches; // @synthesize hasMultipleTouches;
@property(retain, nonatomic) NSMutableArray *snapVerticalLines; // @synthesize snapVerticalLines;
@property(retain, nonatomic) NSMutableArray *snapHorizontalLines; // @synthesize snapHorizontalLines;
@property(nonatomic) long long dragMode; // @synthesize dragMode;
@property(nonatomic) long long resizingCorner; // @synthesize resizingCorner;
@property(retain, nonatomic) MSLayer *resizingLayer; // @synthesize resizingLayer;
@property(nonatomic) struct CGPoint originalScrollOrigin; // @synthesize originalScrollOrigin;
@property(nonatomic) struct CGPoint midPoint; // @synthesize midPoint;
@property(nonatomic) struct CGPoint mouseDown; // @synthesize mouseDown;
@property(nonatomic) BOOL didMouseDown; // @synthesize didMouseDown;
@property(nonatomic) struct CGPoint selectionEndPoint; // @synthesize selectionEndPoint;
@property(nonatomic) struct CGPoint selectionStartPoint; // @synthesize selectionStartPoint;
- (void).cxx_destruct;
- (id)init;

@end

@interface MSNormalEventHandler : MSNormalBaseEventHandler
{
    BOOL _ignoreNextKeyDownEventUntilModifiersChange;	// 128 = 0x80
    BOOL _nextModifierKeyChangeShouldRefreshView;	// 129 = 0x81
    BOOL _didDuplicate;	// 130 = 0x82
    BOOL _firstMouseDraggedMoveLayers;	// 131 = 0x83
    BOOL _didDuplicateWhenMovingLayers;	// 132 = 0x84
    MSLayerPositionDrawing *_positionDrawing;	// 136 = 0x88
    MSLayer *_hoveringLayer;	// 144 = 0x90
    MSNormalEventContextualMenuBuilder *_menuBuilder;	// 152 = 0x98
    MSNormalEventData *_eventData;	// 160 = 0xa0
    id _duplicatedObjectID;	// 168 = 0xa8
    NSMutableDictionary *_originalDraggedLocations;	// 176 = 0xb0
    NSArray *_duplicatedLayers;	// 184 = 0xb8
    struct CGSize _duplicateOffset;	// 192 = 0xc0
    struct CGPoint _duplicateOrigin;	// 208 = 0xd0
    struct CGPoint _lastMouseMoved;	// 224 = 0xe0
}

@property(retain, nonatomic) NSArray *duplicatedLayers; // @synthesize duplicatedLayers=_duplicatedLayers;
@property(nonatomic) BOOL didDuplicateWhenMovingLayers; // @synthesize didDuplicateWhenMovingLayers=_didDuplicateWhenMovingLayers;
@property(retain, nonatomic) NSMutableDictionary *originalDraggedLocations; // @synthesize originalDraggedLocations=_originalDraggedLocations;
@property(retain, nonatomic) id duplicatedObjectID; // @synthesize duplicatedObjectID=_duplicatedObjectID;
@property(nonatomic) struct CGPoint lastMouseMoved; // @synthesize lastMouseMoved=_lastMouseMoved;
@property(nonatomic) BOOL firstMouseDraggedMoveLayers; // @synthesize firstMouseDraggedMoveLayers=_firstMouseDraggedMoveLayers;
@property(nonatomic) struct CGPoint duplicateOrigin; // @synthesize duplicateOrigin=_duplicateOrigin;
@property(nonatomic) BOOL didDuplicate; // @synthesize didDuplicate=_didDuplicate;
@property(nonatomic) struct CGSize duplicateOffset; // @synthesize duplicateOffset=_duplicateOffset;
@property(nonatomic) BOOL nextModifierKeyChangeShouldRefreshView; // @synthesize nextModifierKeyChangeShouldRefreshView=_nextModifierKeyChangeShouldRefreshView;
@property(retain, nonatomic) MSNormalEventData *eventData; // @synthesize eventData=_eventData;
@property(retain, nonatomic) MSNormalEventContextualMenuBuilder *menuBuilder; // @synthesize menuBuilder=_menuBuilder;
@property(retain, nonatomic) MSLayer *hoveringLayer; // @synthesize hoveringLayer=_hoveringLayer;
@property(retain, nonatomic) MSLayerPositionDrawing *positionDrawing; // @synthesize positionDrawing=_positionDrawing;
- (void).cxx_destruct;
- (BOOL)shouldHideExportBar;
- (void)currentPageDidChange;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (void)cut:(id)arg1;
- (BOOL)layerCanBeSelected:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)refreshMultipleLayerSelectionOfType:(unsigned long long)arg1;
- (void)refreshMultipleLayers:(id)arg1 ofType:(unsigned long long)arg2;
- (id)layerSnapper;
- (void)changeColor:(id)arg1;
- (void)deleteNormalLayers:(id)arg1;
- (void)deleteArtboards:(id)arg1;
- (id)document;
- (void)deleteLayers:(id)arg1;
- (void)delete:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (id)menu;
- (void)selectAll:(id)arg1;
- (void)ignoreNextKeyDownEventUntilModifiersChange;
- (void)duplicateSelectedLayersInOriginalLocation:(BOOL)arg1;
- (void)flagsChangedDuringMove:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1;
- (void)drawSubPathsForGroup:(id)arg1;
- (void)drawDragSelection;
- (struct CGRect)rectForDrawingDragSelectOrZoom;
- (void)drawMultipleSelection;
- (void)drawLayerHover;
- (void)drawLayerSelection;
- (id)layerBelowPoint:(struct CGPoint)arg1 forceClickthrough:(BOOL)arg2;
- (void)deselectAllLayers;
- (id)allLayersWithForcedClickThrough:(BOOL)arg1;
- (id)selectedLayers;
- (void)duplicate:(id)arg1;
- (void)keyDownMoveCanvasIncremental:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)keyDownMoveToEndOfCanvas:(unsigned short)arg1;
- (void)keyDownMoveCanvas:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)flashSnapsForLayer:(id)arg1;
- (double)opacityFromChar:(unsigned short)arg1;
- (void)adjustOpacityIfNumberKeyIsPressed:(unsigned short)arg1;
- (void)keyDownResizeLayers:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (id)parentArtboardWeCanMoveLayersTo:(id)arg1;
- (void)moveLayersToArtboardAsOne:(id)arg1;
- (void)keyDownMoveLayers:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)escapeKeyPressed;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)setHoveringLayerAndRefresh:(id)arg1;
- (BOOL)isMouseHoveringMultipleSelectedLayerCorner:(struct CGPoint)arg1;
- (BOOL)isMouseHoveringLayer:(id)arg1 corner:(struct CGPoint)arg2 flags:(unsigned long long)arg3;
- (BOOL)isMouseHoveringLayerCorner:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)shouldNotChangeSelectionForFlags:(unsigned long long)arg1;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)resetClickThroughs;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseExited;
- (void)selectLayer:(id)arg1;
- (void)mouseDraggedSelectLayers:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (id)rectForDragSelectionOrZoom:(struct CGPoint)arg1;
- (void)moveLayer:(id)arg1 from:(struct CGPoint)arg2 inAbsoluteCoodinatesBy:(struct CGPoint)arg3;
- (void)mouseDraggedMoveLayers:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (struct CGPoint)alignPoint:(struct CGPoint)arg1 withShiftTo:(struct CGPoint)arg2;
- (void)refreshPositionDrawingIfApplicable:(unsigned long long)arg1;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)recordSelectedLayerLocations;
- (void)mouseDownMoveLayers:(struct CGPoint)arg1 clickCount:(long long)arg2 flags:(unsigned long long)arg3;
- (void)mouseDownDoubleClick:(struct CGPoint)arg1 onLayer:(id)arg2;
- (void)mouseDownSelectLayers:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)toolbarIdentifier;
- (void)dealloc;
- (id)initWithManager:(id)arg1;

@end

@interface MSNormalInspector : CHViewController <MSStylePartInspectorDelegate, MSInspectorChildController>
{
    MSLayerInspectorViewController *layerViewController;	// 104 = 0x68
    MSMultipleShadowInspectorViewController *shadowViewController;	// 112 = 0x70
    MSMultipleShadowInspectorViewController *innerShadowViewController;	// 120 = 0x78
    MSMultipleBorderInspectorViewController *borderViewController;	// 128 = 0x80
    MSBlurInspectorViewController *blurViewController;	// 136 = 0x88
    MSColorControlsInspectorViewController *colorControlsViewController;	// 144 = 0x90
    MSReflectionInspectorViewController *reflectionViewController;	// 152 = 0x98
    MSMultipleFillInspectorViewController *fillViewController;	// 160 = 0xa0
    MSExportInspectorViewController *exportViewController;	// 168 = 0xa8
    MSInspectorStackView *_stackView;	// 176 = 0xb0
    NSArray *_layers;	// 184 = 0xb8
    MSEventHandler *_eventHandler;	// 192 = 0xc0
}

@property(retain, nonatomic) MSEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
@property(copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(retain, nonatomic) MSInspectorStackView *stackView; // @synthesize stackView=_stackView;
- (void).cxx_destruct;
- (BOOL)shouldHideExportBar;
- (void)startRenamingSharedObject:(id)arg1;
- (void)changeTextLayerFont:(id)arg1;
- (void)colorMagnifierAction:(id)arg1;
- (void)returnToDefaultHandler;
- (void)refreshLayers;
- (BOOL)layersHaveArtisticStroke;
- (void)dealloc;
- (id)viewControllers;
- (void)changeColor:(id)arg1;
- (void)layerPositionPossiblyChanged;
- (void)prepareViewControllers;
- (void)prepareForDisplay;
- (void)selectionDidChangeTo:(id)arg1;
- (id)init;

@end

@interface MSNormalMultipleResizeEventHandler : MSNormalBaseEventHandler
{
    struct CGPoint midPoint;	// 128 = 0x80
    struct CGPoint oppositePoint;	// 144 = 0x90
    NSArray *layers;	// 160 = 0xa0
    long long resizingCorner;	// 168 = 0xa8
    MSRect *originalRect;	// 176 = 0xb0
    NSArray *originalLayerRects;	// 184 = 0xb8
}

@property(copy, nonatomic) NSArray *layers; // @synthesize layers;
@property(nonatomic) long long resizingCorner; // @synthesize resizingCorner;
- (void).cxx_destruct;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (id)oppositeCorner;
- (void)handlerWillLoseFocus;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)placeRectInOppositeCorner:(id)arg1;
- (void)makeRectConform:(id)arg1 toProportions:(BOOL)arg2;
- (BOOL)mouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)refresh;
- (void)calculateOppositePoint;
- (void)calculateMidPoint;
- (void)displayResizeCursor;
- (void)storeCurrentLayerFrame;
- (void)pushTransformsDown:(id)arg1;
- (void)flattenRotatedShapes;
- (BOOL)mouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;

@end

@interface MSNormalResizeEventHandler : MSNormalBaseEventHandler
{
    struct CGPoint midPoint;	// 128 = 0x80
    struct CGPoint oppositePoint;	// 144 = 0x90
    struct CGPoint oppositeRotatedPoint;	// 160 = 0xa0
    double originalProportions;	// 176 = 0xb0
    long long _resizingCorner;	// 184 = 0xb8
    MSLayer *_resizingLayer;	// 192 = 0xc0
    MSLayerSnapper *_layerSnapper;	// 200 = 0xc8
}

@property(retain, nonatomic) MSLayerSnapper *layerSnapper; // @synthesize layerSnapper=_layerSnapper;
@property(retain, nonatomic) MSLayer *resizingLayer; // @synthesize resizingLayer=_resizingLayer;
@property(nonatomic) long long resizingCorner; // @synthesize resizingCorner=_resizingCorner;
- (void).cxx_destruct;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (id)oppositeCorner;
- (void)handlerWillLoseFocus;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)flipResizingLayerIfNecessary:(struct CGPoint)arg1;
- (unsigned long long)validSnapEdgesForResizingCorner;
- (void)placeRectInOppositeCorner:(id)arg1;
- (BOOL)shouldConstrainProportionsForFlags:(unsigned long long)arg1;
- (void)makeRect:(id)arg1 conformToProportions:(BOOL)arg2;
- (struct CGPoint)mouseAfterAccountingForRotation:(struct CGPoint)arg1;
- (void)makeLayersIntegral:(id)arg1;
- (BOOL)mouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)calculateOppositeRotatedPoint;
- (void)calculateOppositePoint;
- (void)calculateMidPoint;
- (void)displayResizeCursor;
- (void)defineProportionsOnLayer;
- (void)storeCurrentLayerFrame;
- (BOOL)mouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (id)currentGroup;

@end

@interface MSNormalResizeLineEventHandler : MSNormalBaseEventHandler
{
    MSShapeGroup *_lineShape;	// 128 = 0x80
    long long _pointIndex;	// 136 = 0x88
    MSLayerSnapper *_layerSnapper;	// 144 = 0x90
}

@property(retain, nonatomic) MSLayerSnapper *layerSnapper; // @synthesize layerSnapper=_layerSnapper;
@property(nonatomic) long long pointIndex; // @synthesize pointIndex=_pointIndex;
@property(retain, nonatomic) MSShapeGroup *lineShape; // @synthesize lineShape=_lineShape;
- (void).cxx_destruct;
- (struct CGPoint)roundMouse:(struct CGPoint)arg1;
- (id)cursorForDegrees:(long long)arg1;
- (void)displayResizeCursor;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (struct CGPoint)alignPoint:(struct CGPoint)arg1 withShiftTo:(struct CGPoint)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;

@end

@interface MSNotProButton : NSButton
{
}

- (void)awakeFromNib;

@end

@interface MSOldStyleSliceViewDataSource : NSObject <NSTableViewDataSource, NSTableViewDelegate>
{
    MSSliceLayer *_slice;	// 8 = 0x8
    NSTableView *_sliceTableView;	// 16 = 0x10
    NSMutableArray *_possiblyIncludedLayers;	// 24 = 0x18
}

@property(retain, nonatomic) NSMutableArray *possiblyIncludedLayers; // @synthesize possiblyIncludedLayers=_possiblyIncludedLayers;
@property(retain, nonatomic) NSTableView *sliceTableView; // @synthesize sliceTableView=_sliceTableView;
@property(retain, nonatomic) MSSliceLayer *slice; // @synthesize slice=_slice;
- (void).cxx_destruct;
- (id)prefixForLayer:(id)arg1;
- (id)layerAtIndex:(long long)arg1;
- (id)includedLayersForSlice:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)calculatePossiblyIncludedLayers:(id)arg1;
- (void)prepare;

@end

@interface MSOvalShape : _MSOvalShape
{
}

- (id)defaultName;
- (void)resetPoints;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;

@end

@interface MSOvalShapeAction : MSBaseShapeAction
{
}

- (unsigned short)shortcutCharacter;
- (id)tooltip;
- (void)ovalShape:(id)arg1;

@end

@interface MSOverlayRenderer : NSObject
{
    MSPage *_page;	// 8 = 0x8
    double _zoomValue;	// 16 = 0x10
    MSEventHandlerManager *_eventManager;	// 24 = 0x18
    struct CGRect _rect;	// 32 = 0x20
}

+ (void)renderPage:(id)arg1 atZoom:(double)arg2 inRect:(struct CGRect)arg3 handlerManager:(id)arg4;
+ (void)skipRenderingSelections:(BOOL)arg1;
@property(retain, nonatomic) MSEventHandlerManager *eventManager; // @synthesize eventManager=_eventManager;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(retain, nonatomic) MSPage *page; // @synthesize page=_page;
- (void).cxx_destruct;
- (void)dealloc;
- (struct CGPoint)scrollOrigin;
- (void)drawZoomTool;
- (struct CGRect)scaledArtboardRect:(id)arg1;
- (void)drawArtboardTitles;
- (id)artboardsVisibleInTileRect;
- (void)drawArtboardShadowForRect:(struct CGRect)arg1 image:(id)arg2;
- (void)drawArtboardOutline;
- (BOOL)isLayerVisible:(id)arg1;
- (void)drawSliceOutline:(id)arg1;
- (void)drawSlicesOutline;
- (BOOL)shouldDrawSlicesOutline;
- (void)drawPixelLines;
- (BOOL)shouldDrawPixelLines;
- (void)doDrawGridForRootLayer:(id)arg1;
- (void)drawGridForRootLayer:(id)arg1;
- (void)draw;

@end

@interface MSOverlayTile : MSBaseRenderTile
{
}

- (id)init;

@end

@interface MSPDFBookExporter : NSObject
{
}

+ (id)pdfFromArtboard:(id)arg1;
+ (void)exportPages:(id)arg1;

@end

@interface MSPDFImporter : NSObject <MSImporter>
{
    id <PDFParser> _parser;	// 8 = 0x8
    MSPDFScanner *_scanner;	// 16 = 0x10
    NSString *_type;	// 24 = 0x18
}

+ (id)epsImporter;
+ (id)pdfImporter;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) MSPDFScanner *scanner; // @synthesize scanner=_scanner;
@property(retain, nonatomic) id <PDFParser> parser; // @synthesize parser=_parser;
- (void).cxx_destruct;
- (BOOL)shouldCollapseSinglePage;
- (BOOL)shouldExpandPages;
- (id)secondPhaseSubtitleForValue:(long long)arg1 maximum:(long long)arg2;
- (id)firstPhaseSubtitle;
- (void)finishImporting;
- (void)importIntoGroup:(id)arg1 name:(id)arg2 images:(id)arg3 progress:(CDUnknownBlockType)arg4;
- (id)name;
- (unsigned long long)prepareToImportFromData:(id)arg1;
- (unsigned long long)prepareToImportFromURL:(id)arg1;
- (id)init;

@end

@interface MSPDFScanner : PDFScanner
{
    MSLayerGroup *_rootLayer;	// 8 = 0x8
    MSImageCollection *_images;	// 16 = 0x10
    unsigned long long _nextID;	// 24 = 0x18
    NSMutableArray *_stack;	// 32 = 0x20
    MSPDFState *_state;	// 40 = 0x28
}

@property(retain, nonatomic) MSPDFState *state; // @synthesize state=_state;
@property(retain, nonatomic) NSMutableArray *stack; // @synthesize stack=_stack;
@property(nonatomic) unsigned long long nextID; // @synthesize nextID=_nextID;
@property(retain, nonatomic) MSImageCollection *images; // @synthesize images=_images;
@property(retain, nonatomic) MSLayerGroup *rootLayer; // @synthesize rootLayer=_rootLayer;
- (void).cxx_destruct;
- (void)endText;
- (void)appendText:(id)arg1;
- (void)setTextMatrix:(id)arg1;
- (void)nextLineWithOffset:(struct CGPoint)arg1;
- (void)offset:(double)arg1;
- (void)setTextMode:(unsigned long long)arg1;
- (void)setTextScale:(double)arg1;
- (void)setTextRise:(double)arg1;
- (void)setTextLeading:(double)arg1;
- (void)setTextWordSpacing:(double)arg1;
- (void)setTextCharacterSpacing:(double)arg1;
- (void)setFontName:(id)arg1 size:(double)arg2;
- (void)beginText;
- (void)setTextTransform:(id)arg1 resettingLineTransform:(BOOL)arg2;
- (void)processImage:(id)arg1 info:(id)arg2;
- (void)fillWithShadingPattern:(id)arg1;
- (id)gradientForLayer:(id)arg1 pattern:(id)arg2;
- (id)gradientForPattern:(id)arg1;
- (BOOL)slope:(CDStruct_d2b197d1)arg1 nearEnoughTo:(CDStruct_d2b197d1)arg2 epsilon:(double)arg3;
- (CDStruct_d2b197d1)slopeBetweenStop1:(id)arg1 stop2:(id)arg2;
- (id)colorWithRGBBytes:(CDStruct_f4b747e6 *)arg1;
- (void)fillWithWinding:(unsigned long long)arg1;
- (void)clipWithWinding:(unsigned long long)arg1;
- (void)setColourRenderingIntent:(int)arg1;
- (void)setFillAlphaConstant:(double)arg1;
- (void)setStrokeAlphaConstant:(double)arg1;
- (void)setFillColour:(id)arg1;
- (void)setStrokeColour:(id)arg1;
- (void)setFillColourSpace:(id)arg1 mapping:(id)arg2;
- (void)setStrokeColourSpace:(id)arg1 mapping:(id)arg2;
- (void)strokeWithWinding:(unsigned long long)arg1;
- (id)transformedPath;
- (void)setLineDash:(id)arg1 phase:(long long)arg2;
- (void)setLineCap:(unsigned long long)arg1;
- (void)setLineJoin:(unsigned long long)arg1;
- (void)setLineWidth:(double)arg1;
- (void)restoreGraphicState;
- (void)saveGraphicState;
- (int)currentRenderingIntent;
- (id)currentFillColorSpaceMapping;
- (id)currentFillColorSpace;
- (id)currentStrokeColorSpaceMapping;
- (id)currentStrokeColorSpace;
- (double)currentLeading;
- (struct CGPoint)currentPoint;
- (void)concatMatrix:(id)arg1;
- (void)appendRectangle:(struct CGRect)arg1;
- (void)endPath;
- (void)closePath;
- (void)curveTo:(struct CGPoint)arg1 control1:(struct CGPoint)arg2 control2:(struct CGPoint)arg3;
- (void)lineTo:(struct CGPoint)arg1;
- (void)moveTo:(struct CGPoint)arg1;
- (void)doClipping;
- (void)doRestoreState;
- (void)doSaveState;
- (void)doNewPath;
- (void)doText;
- (void)doClose;
- (void)scanStream:(struct CGPDFContentStream *)arg1 dictionary:(id)arg2;
- (void)scanPage:(struct CGPDFPage *)arg1 parser:(id)arg2;
- (id)nameForType:(id)arg1;
- (id)init;

@end

@interface MSPDFState : NSObject <NSCopying>
{
    BOOL _clippingUpdated;	// 8 = 0x8
    BOOL _containsClippedItems;	// 9 = 0x9
    BOOL _pathClosed;	// 10 = 0xa
    BOOL _pathUsed;	// 11 = 0xb
    BOOL _pathWasRect;	// 12 = 0xc
    int _renderingIntent;	// 16 = 0x10
    double _borderAlphaConstant;	// 24 = 0x18
    NSColor *_borderColor;	// 32 = 0x20
    NSColorSpace *_borderColorSpace;	// 40 = 0x28
    PDFFunction *_borderColorSpaceMapping;	// 48 = 0x30
    NSArray *_borderDashes;	// 56 = 0x38
    unsigned long long _borderCapStyle;	// 64 = 0x40
    PDFPattern *_borderGradient;	// 72 = 0x48
    unsigned long long _borderJoinStyle;	// 80 = 0x50
    double _borderThickness;	// 88 = 0x58
    unsigned long long _clippingMode;	// 96 = 0x60
    NSBezierPath *_clippingPath;	// 104 = 0x68
    double _fillAlphaConstant;	// 112 = 0x70
    NSColor *_fillColor;	// 120 = 0x78
    NSColorSpace *_fillColorSpace;	// 128 = 0x80
    PDFFunction *_fillColorSpaceMapping;	// 136 = 0x88
    PDFPattern *_fillGradient;	// 144 = 0x90
    NSMutableArray *_layers;	// 152 = 0x98
    NSBezierPath *_path;	// 160 = 0xa0
    MSPDFTextState *_text;	// 168 = 0xa8
    NSBezierPath *_transformedPath;	// 176 = 0xb0
    NSAffineTransform *_transform;	// 184 = 0xb8
    NSAffineTransform *_flippedTransform;	// 192 = 0xc0
    struct CGPoint _currentPoint;	// 200 = 0xc8
}

@property(retain, nonatomic) NSAffineTransform *flippedTransform; // @synthesize flippedTransform=_flippedTransform;
@property(retain, nonatomic) NSAffineTransform *transform; // @synthesize transform=_transform;
@property(retain, nonatomic) NSBezierPath *transformedPath; // @synthesize transformedPath=_transformedPath;
@property(retain, nonatomic) MSPDFTextState *text; // @synthesize text=_text;
@property(nonatomic) int renderingIntent; // @synthesize renderingIntent=_renderingIntent;
@property(nonatomic) BOOL pathWasRect; // @synthesize pathWasRect=_pathWasRect;
@property(nonatomic) BOOL pathUsed; // @synthesize pathUsed=_pathUsed;
@property(nonatomic) BOOL pathClosed; // @synthesize pathClosed=_pathClosed;
@property(retain, nonatomic) NSBezierPath *path; // @synthesize path=_path;
@property(retain, nonatomic) NSMutableArray *layers; // @synthesize layers=_layers;
@property(retain, nonatomic) PDFPattern *fillGradient; // @synthesize fillGradient=_fillGradient;
@property(retain, nonatomic) PDFFunction *fillColorSpaceMapping; // @synthesize fillColorSpaceMapping=_fillColorSpaceMapping;
@property(retain, nonatomic) NSColorSpace *fillColorSpace; // @synthesize fillColorSpace=_fillColorSpace;
@property(retain, nonatomic) NSColor *fillColor; // @synthesize fillColor=_fillColor;
@property(nonatomic) double fillAlphaConstant; // @synthesize fillAlphaConstant=_fillAlphaConstant;
@property(nonatomic) struct CGPoint currentPoint; // @synthesize currentPoint=_currentPoint;
@property(nonatomic) BOOL containsClippedItems; // @synthesize containsClippedItems=_containsClippedItems;
@property(nonatomic) BOOL clippingUpdated; // @synthesize clippingUpdated=_clippingUpdated;
@property(retain, nonatomic) NSBezierPath *clippingPath; // @synthesize clippingPath=_clippingPath;
@property(nonatomic) unsigned long long clippingMode; // @synthesize clippingMode=_clippingMode;
@property(nonatomic) double borderThickness; // @synthesize borderThickness=_borderThickness;
@property(nonatomic) unsigned long long borderJoinStyle; // @synthesize borderJoinStyle=_borderJoinStyle;
@property(retain, nonatomic) PDFPattern *borderGradient; // @synthesize borderGradient=_borderGradient;
@property(nonatomic) unsigned long long borderCapStyle; // @synthesize borderCapStyle=_borderCapStyle;
@property(retain, nonatomic) NSArray *borderDashes; // @synthesize borderDashes=_borderDashes;
@property(retain, nonatomic) PDFFunction *borderColorSpaceMapping; // @synthesize borderColorSpaceMapping=_borderColorSpaceMapping;
@property(retain, nonatomic) NSColorSpace *borderColorSpace; // @synthesize borderColorSpace=_borderColorSpace;
@property(retain, nonatomic) NSColor *borderColor; // @synthesize borderColor=_borderColor;
@property(nonatomic) double borderAlphaConstant; // @synthesize borderAlphaConstant=_borderAlphaConstant;
- (void).cxx_destruct;
- (id)description;
- (id)stringFromTransform:(id)arg1;
- (id)transformedClippingPath;
- (void)updateClippingWithTextPath:(id)arg1;
- (void)updateClipping;
- (CDStruct_8727d297)transformStruct;
- (id)transformBezierPath:(id)arg1;
- (struct CGSize)transformSize:(struct CGSize)arg1;
- (struct CGPoint)transformPoint:(struct CGPoint)arg1;
- (void)appendTransform:(id)arg1;
- (void)resetTransform:(id)arg1;
- (void)resetFlipped;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)lastLayer;
- (id)layerWithEnclosingGroup:(BOOL)arg1;
- (void)addLayer:(id)arg1;
- (id)init;

@end

@interface MSPDFTextState : NSObject <NSCopying>
{
    double _characterSpacing;	// 8 = 0x8
    NSFont *_font;	// 16 = 0x10
    NSString *_fontName;	// 24 = 0x18
    double _leading;	// 32 = 0x20
    NSAffineTransform *_lineTransform;	// 40 = 0x28
    unsigned long long _mode;	// 48 = 0x30
    double _offset;	// 56 = 0x38
    NSAffineTransform *_renderingTransform;	// 64 = 0x40
    double _rise;	// 72 = 0x48
    double _scale;	// 80 = 0x50
    double _size;	// 88 = 0x58
    MSPDFState *_state;	// 96 = 0x60
    NSMutableAttributedString *_text;	// 104 = 0x68
    NSAffineTransform *_transform;	// 112 = 0x70
    double _wordSpacing;	// 120 = 0x78
}

+ (id)textStateWithState:(id)arg1;
@property(nonatomic) double wordSpacing; // @synthesize wordSpacing=_wordSpacing;
@property(retain, nonatomic) NSAffineTransform *transform; // @synthesize transform=_transform;
@property(retain, nonatomic) NSMutableAttributedString *text; // @synthesize text=_text;
@property(nonatomic) __weak MSPDFState *state; // @synthesize state=_state;
@property(nonatomic) double size; // @synthesize size=_size;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) double rise; // @synthesize rise=_rise;
@property(retain, nonatomic) NSAffineTransform *renderingTransform; // @synthesize renderingTransform=_renderingTransform;
@property(nonatomic) double offset; // @synthesize offset=_offset;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
@property(retain, nonatomic) NSAffineTransform *lineTransform; // @synthesize lineTransform=_lineTransform;
@property(nonatomic) double leading; // @synthesize leading=_leading;
@property(retain, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(retain, nonatomic) NSFont *font; // @synthesize font=_font;
@property(nonatomic) double characterSpacing; // @synthesize characterSpacing=_characterSpacing;
- (void).cxx_destruct;
- (void)appendText:(id)arg1;
- (id)attributes;
- (void)setTransform:(id)arg1 resettingLineTransform:(BOOL)arg2;
- (void)resetRenderingTransform;
- (BOOL)shouldClip;
- (BOOL)shouldStroke;
- (BOOL)shouldFill;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface MSPage : _MSPage <MSRootLayer>
{
    long long ignoreLayerSelectionDidChangeNotificationsCounter;	// 56 = 0x38
    BOOL _hasBlendedLayer;	// 64 = 0x40
    BOOL _shouldSkipCalculatingLayerBlending;	// 65 = 0x41
    id <MSBasicDelegate> _delegate;	// 72 = 0x48
    id <MSPageDelegate> _pageDelegate;	// 80 = 0x50
    MSArtboardGroup *_currentArtboard;	// 88 = 0x58
    NSArray *_cachedArtboards;	// 96 = 0x60
    NSArray *_cachedExportableLayers;	// 104 = 0x68
}

+ (id)page;
@property(retain, nonatomic) NSArray *cachedExportableLayers; // @synthesize cachedExportableLayers=_cachedExportableLayers;
@property(retain, nonatomic) NSArray *cachedArtboards; // @synthesize cachedArtboards=_cachedArtboards;
@property(nonatomic) BOOL shouldSkipCalculatingLayerBlending; // @synthesize shouldSkipCalculatingLayerBlending=_shouldSkipCalculatingLayerBlending;
@property(nonatomic) BOOL hasBlendedLayer; // @synthesize hasBlendedLayer=_hasBlendedLayer;
@property(retain, nonatomic) MSArtboardGroup *currentArtboard; // @synthesize currentArtboard=_currentArtboard;
@property(nonatomic) __weak id <MSPageDelegate> pageDelegate; // @synthesize pageDelegate=_pageDelegate;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)parentOrSelfIsSymbol;
- (void)moveLayersToArtboards;
- (double)defaultZoomValue;
- (void)scheduleCalculateHasBlendedLayer;
- (BOOL)isValidChild:(id)arg1;
- (id)ancestorsOfLayer:(id)arg1 inGroup:(id)arg2;
- (id)ancestorsOfLayer:(id)arg1;
- (void)ignoreLayerSelectionDidChangeNotificationsInBlock:(CDUnknownBlockType)arg1;
- (void)layerSelectionDidChange;
- (void)dataArray:(id)arg1 willRemoveObject:(id)arg2;
- (void)dataArray:(id)arg1 didAddObject:(id)arg2;
- (void)changeLayerExpandedTypeToAutomaticIfCollapsed;
@property(readonly, nonatomic) NSArray *artboards; // @dynamic artboards;
- (void)setCurrentLayout:(id)arg1;
- (id)currentLayout;
- (void)setCurrentGrid:(id)arg1;
- (id)currentGrid;
- (id)parentRoot;
- (id)currentRoot;
- (id)ancestorTransforms;
- (id)ancestors;
- (id)parentPage;
- (id)contentBoundsForLayer:(id)arg1;
- (id)contentBounds;
- (void)resizeRoot;
- (id)destinationArtboardForLayer:(id)arg1 artboards:(id)arg2;
- (void)addOrRemoveLayerFromArtboardIfNecessary:(id)arg1;
- (void)tryToMoveLayer:(id)arg1 toArtboards:(id)arg2;
- (void)tryToMoveLayerToArtboard:(id)arg1;
- (id)exportableLayers;
- (id)symbolLayersInGroup:(id)arg1;
- (id)artboardForSlice:(id)arg1 inArtboards:(id)arg2;
- (id)sliceLayerFromSlice:(id)arg1;
- (void)prepareObjectCopy:(id)arg1;
- (void)childDidChangeNotification:(id)arg1;
@property(nonatomic) struct CGPoint rulerBase; // @dynamic rulerBase;
- (void)refreshViewsWithMask:(unsigned long long)arg1;
- (void)refreshOfType:(unsigned long long)arg1 rect:(struct CGRect)arg2;
- (id)transform;
- (void)sendMessageToRootObject:(unsigned long long)arg1;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (void)setName:(id)arg1;
- (void)refreshForPropertyChanged:(id)arg1;
- (void)dealloc;
- (id)defaultName;
- (id)parentGroup;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)objectDidInit;
- (void)migratePropertiesFromV36OrEarlierWithCoder:(id)arg1;
- (void)migratePropertiesFromV21OrEarlierWithCoder:(id)arg1;
- (id)artboardGroupFromArtboard:(id)arg1;
- (void)migrateArtboardsToArtboardGroups:(id)arg1;
- (id)moveSlicesToArtboards:(id)arg1;
- (id)migrateLegacySlicesToSliceLayers:(id)arg1;
- (void)decodeLegacyArtboards:(id)arg1;
- (void)decodeLegacySlices:(id)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (Class)rendererClass;
- (BOOL)intersectsSlice:(id)arg1;
- (BOOL)shouldIncludeLayerInSlice:(id)arg1;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (struct CGPoint)layerOffsetWithExporter:(id)arg1;

// Remaining properties
@property(copy, nonatomic) MSSimpleGrid *grid;
@property(copy, nonatomic) MSRulerData *horizontalRulerData;
@property(copy, nonatomic) MSLayoutGrid *layout;
@property(copy, nonatomic) MSRulerData *verticalRulerData;

@end

@interface MSPageRenderer : MSLayerGroupRenderer
{
}

+ (BOOL)shouldDrawLayer:(id)arg1 context:(id)arg2;
+ (void)didDrawLayer:(id)arg1 context:(id)arg2;
+ (void)willDrawLayer:(id)arg1 context:(id)arg2;

@end

@interface MSPagesPopoverCell : NSTableCellView <NSMenuDelegate>
{
    NSView *_placeholderImageView;	// 200 = 0xc8
    id <MSPagesPopoverCellDelegate> _delegate;	// 208 = 0xd0
    id _pageObjectID;	// 216 = 0xd8
    CALayer *_imageLayer;	// 224 = 0xe0
    CALayer *_selectionLayer;	// 232 = 0xe8
}

@property(retain, nonatomic) CALayer *selectionLayer; // @synthesize selectionLayer=_selectionLayer;
@property(retain, nonatomic) CALayer *imageLayer; // @synthesize imageLayer=_imageLayer;
@property(copy, nonatomic) id pageObjectID; // @synthesize pageObjectID=_pageObjectID;
@property(nonatomic) __weak id <MSPagesPopoverCellDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak NSView *placeholderImageView; // @synthesize placeholderImageView=_placeholderImageView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)pageNameEditAction:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setIsSelected:(BOOL)arg1;
- (id)layerForSelectionHighlight:(id)arg1;
- (void)deletePage:(id)arg1;
- (void)duplicatePage:(id)arg1;
- (void)renamePage:(id)arg1;
- (void)removeCellHighlight;
- (void)highlightCell;
- (void)menuDidClose:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSPagesPopoverViewController : CHViewController <NSTableViewDataSource, NSTableViewDelegate, NSMenuDelegate, MSPagesPopoverCellDelegate>
{
    NSTableView *pagesTableView;	// 104 = 0x68
    NSMenuItem *deletePageMenuItem;	// 112 = 0x70
    NSMenuItem *separatorMenuItem;	// 120 = 0x78
    BOOL ignoreTableViewSelectionDidChangeNotifications;	// 128 = 0x80
    MSDocument *_document;	// 136 = 0x88
    NSPopover *_parentPopover;	// 144 = 0x90
    CDUnknownBlockType _nameDidChangeBlock;	// 152 = 0x98
    NSOperationQueue *_operationQueue;	// 160 = 0xa0
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(copy, nonatomic) CDUnknownBlockType nameDidChangeBlock; // @synthesize nameDidChangeBlock=_nameDidChangeBlock;
@property(nonatomic) __weak NSPopover *parentPopover; // @synthesize parentPopover=_parentPopover;
@property(retain, nonatomic) MSDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (void)dealloc;
- (void)undoNotification:(id)arg1;
- (void)refreshCanvas;
- (id)pageWithID:(id)arg1;
- (id)duplicatePage:(id)arg1;
- (void)editPageNameAtRowIndex:(unsigned long long)arg1;
- (void)popoverCell:(id)arg1 duplicatePageWithID:(id)arg2;
- (void)popoverCell:(id)arg1 deletePageWithID:(id)arg2;
- (BOOL)popoverCell:(id)arg1 canDeletePageWithID:(id)arg2;
- (void)addPage:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)popoverWillClose;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)pagesPopoverCell:(id)arg1 textFielDidEndEditing:(id)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (id)imageForPage:(id)arg1 inRect:(struct CGRect)arg2 fromRect:(struct CGRect)arg3;
- (void)renderPreviewForRow:(id)arg1 page:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)sizeToFitNumberOfPages;
- (id)pageAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfPages;
- (void)reload;
- (void)awakeFromNib;

@end

@interface MSPair : NSObject
{
    id first;	// 8 = 0x8
    id second;	// 16 = 0x10
}

+ (id)pairWith:(id)arg1 and:(id)arg2;
@property(retain, nonatomic) id second; // @synthesize second;
@property(retain, nonatomic) id first; // @synthesize first;
- (void).cxx_destruct;

@end

@interface MSParagraphStyleViewController : NSViewController <BCPopoverContentController>
{
    MSTextLayerSection *_textSection;	// 104 = 0x68
    NSArray *_layers;	// 112 = 0x70
    NSSegmentedControl *_decorationButton;	// 120 = 0x78
    NSPopUpButton *_listPopUpButton;	// 128 = 0x80
}

@property(retain, nonatomic) NSPopUpButton *listPopUpButton; // @synthesize listPopUpButton=_listPopUpButton;
@property(retain, nonatomic) NSSegmentedControl *decorationButton; // @synthesize decorationButton=_decorationButton;
@property(retain, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(nonatomic) __weak MSTextLayerSection *textSection; // @synthesize textSection=_textSection;
- (void).cxx_destruct;
- (id)firstOccurrenceOfAttributeWithName:(id)arg1;
- (void)changeFontPropertiesOfTextObjectsInBlock:(CDUnknownBlockType)arg1;
- (long long)indexForBulletListName:(id)arg1;
- (id)markerForBulletListIndex:(long long)arg1;
- (void)listPopUpAction:(id)arg1;
- (void)decorationButtonAction:(id)arg1;
- (void)prepareBulletListPopUpButton;
- (void)prepareDecorationButton;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSPasteboardHelper : NSObject
{
    id <MSBasicDelegate> _delegate;	// 8 = 0x8
    NSPasteboard *_pasteboard;	// 16 = 0x10
}

@property(retain, nonatomic) NSPasteboard *pasteboard; // @synthesize pasteboard=_pasteboard;
@property(nonatomic) __weak id <MSBasicDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;

@end

@interface MSPasteboardReader : MSPasteboardHelper
{
    BOOL _dropping;	// 8 = 0x8
    MSContentDrawView *_view;	// 16 = 0x10
    NSArray *_originalSelectedLayers;	// 24 = 0x18
    struct CGPoint _dropPoint;	// 32 = 0x20
}

+ (unsigned long long)importModeWithOptionKeyPressed:(BOOL)arg1;
@property(retain, nonatomic) NSArray *originalSelectedLayers; // @synthesize originalSelectedLayers=_originalSelectedLayers;
@property(nonatomic) struct CGPoint dropPoint; // @synthesize dropPoint=_dropPoint;
@property(nonatomic) BOOL dropping; // @synthesize dropping=_dropping;
@property(retain, nonatomic) MSContentDrawView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (BOOL)displayWarningsForUnsupportedFileFormats:(id)arg1;
- (id)readFilesWithImportMode:(unsigned long long)arg1;
- (id)readSVGFromURL:(id)arg1;
- (id)readPDFFromURL:(id)arg1;
- (id)readPDF;
- (id)groupForPastingOrDropping;
- (id)readEPSFromURL:(id)arg1;
- (id)readEPS;
- (id)textLayerFromString:(id)arg1;
- (id)readStrings;
- (id)insertBitmapLayerWithImage:(id)arg1 intoGroup:(id)arg2 name:(id)arg3;
- (id)readImage:(id)arg1 name:(id)arg2;
- (id)readImage;
- (void)processLayer:(id)arg1 insertedIntoGroup:(id)arg2;
- (void)insertNewLayer:(id)arg1 intoGroup:(id)arg2;
- (void)centerNewLayers:(id)arg1 inRect:(struct CGRect)arg2 onlyIfOutsideGroup:(id)arg3;
- (void)centerNewLayersInCanvas:(id)arg1;
- (BOOL)layersVisibleInCanvas:(id)arg1;
- (void)offsetLayers:(id)arg1 by:(struct CGPoint)arg2;
- (id)readLayers;
- (BOOL)containsReadableData;
- (unsigned long long)contentType;
- (id)pasteboardTypes;
- (void)readWithImportMode:(unsigned long long)arg1;

@end

@interface MSPasteboardWriter : MSPasteboardHelper
{
}

- (id)includedObjectIDsForLayers:(id)arg1;
- (id)bitmapRectForLayers:(id)arg1;
- (BOOL)shouldTrimBitmapForPasteboardLayers:(id)arg1;
- (void)writeLayers:(id)arg1 fromDocument:(id)arg2;

@end

@interface MSPathDecorationStyle : _MSPathDecorationStyle
{
}

- (id)description;
- (void)removeDecoration:(id)arg1;
- (void)addDecoration:(id)arg1;
- (id)decoratePath:(id)arg1;
- (BOOL)isEqual:(id)arg1;

@end

@interface MSPatternFactory : CHSingletonObject
{
    NSArray *directoryContents;	// 8 = 0x8
    NSMutableArray *patternCache;	// 16 = 0x10
}

@property(retain, nonatomic) NSArray *directoryContents; // @synthesize directoryContents;
@property(retain, nonatomic) NSMutableArray *patternCache; // @synthesize patternCache;
- (void).cxx_destruct;
- (void)dealloc;
- (unsigned long long)count;
- (void)addPatternImage:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (id)patternImageAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfPatternImages;
- (id)savePath;
- (void)resetCache;
- (id)init;

@end

@interface MSPencilAction : MSBaseAction
{
}

- (unsigned short)shortcutCharacter;
- (id)tooltip;
- (BOOL)isSelectable;
- (BOOL)isActive;
- (void)performAction:(id)arg1;
- (void)pencil:(id)arg1;

@end

@interface MSPencilEventHandler : MSEventHandler
{
    BOOL isDragging;	// 128 = 0x80
    MSShapePathLayer *shape;	// 136 = 0x88
    struct CGPoint lastMouse;	// 144 = 0x90
    MSLayerGroup *currentGroup;	// 160 = 0xa0
}

- (void).cxx_destruct;
- (BOOL)mouseDraggedOutsideViewShouldMoveScrollOrigin;
- (BOOL)shouldDrawLayerSelection;
- (BOOL)mouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)addCurvePoint:(id)arg1;
- (void)addPoint:(struct CGPoint)arg1;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (BOOL)pathShouldClose;
- (void)removeRedundantPoints:(id)arg1;
- (id)fittedBezierPathFromShapePath:(id)arg1;
- (void)unflattenResult;
- (void)selectShape;
- (void)removeShape;
- (void)finishShapeOrRemoveIfEmpty;
- (void)handlerWillLoseFocus;
- (id)currentGroup;
- (id)toolbarIdentifier;
- (void)handlerGotFocus;
- (void)adjustStyleForGroup:(id)arg1;
- (id)shape;

@end

@interface MSPlugin : NSObject
{
    BOOL _skipNextLog;	// 8 = 0x8
    NSURL *_url;	// 16 = 0x10
    NSString *_script;	// 24 = 0x18
    NSString *_processedScript;	// 32 = 0x20
    NSURL *_root;	// 40 = 0x28
    ECASLClient *_logger;	// 48 = 0x30
    NSMutableString *_log;	// 56 = 0x38
    NSString *_name;	// 64 = 0x40
    COScript *_session;	// 72 = 0x48
}

+ (id)pluginsURL;
+ (void)initialisePlugins;
@property(nonatomic) BOOL skipNextLog; // @synthesize skipNextLog=_skipNextLog;
@property(retain, nonatomic) COScript *session; // @synthesize session=_session;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSMutableString *log; // @synthesize log=_log;
@property(retain, nonatomic) ECASLClient *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) NSURL *root; // @synthesize root=_root;
@property(retain, nonatomic) NSString *processedScript; // @synthesize processedScript=_processedScript;
@property(retain, nonatomic) NSString *script; // @synthesize script=_script;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (void)error:(id)arg1;
- (void)print:(id)arg1;
- (void)save;
- (void)coscript:(id)arg1 hadError:(id)arg2 onLineNumber:(long long)arg3 atSourceURL:(id)arg4;
- (void)removeFinishedPlugins;
- (void)registerAsRunning;
- (id)run;
- (id)scriptWithExpandedImports:(id)arg1 path:(id)arg2;
- (void)processScript;
- (void)setup;
- (id)initWithScript:(id)arg1 name:(id)arg2;
- (id)initWithURL:(id)arg1;

@end

@interface MSPluginDebugController : NSObject <CODebugController>
{
}

- (void)output:(id)arg1 args:(struct __va_list_tag [1])arg2;

@end

@interface MSPluginsMenuBuilder : NSObject
{
}

+ (id)rawShortcutStringForPluginAtURL:(id)arg1;
+ (unsigned long long)shortcutModifiersForPluginAtURL:(id)arg1;
+ (id)shortcutForPluginAtURL:(id)arg1;
+ (id)menuItemForSubDirectoryAtURL:(id)arg1 selector:(SEL)arg2;
+ (id)menuItemForPluginAtURL:(id)arg1 selector:(SEL)arg2;
+ (BOOL)URLIsScript:(id)arg1;
+ (BOOL)URLIsFolder:(id)arg1;
+ (id)sortedSubpathsOfDirectoryAtURL:(id)arg1;
+ (id)pluginMenuForDirectoryAtURL:(id)arg1 selector:(SEL)arg2;
+ (void)addRevealSubmenuToMenu:(id)arg1 pluginsURL:(id)arg2;
+ (void)addEditSubmenuToMenu:(id)arg1 pluginsURL:(id)arg2;
+ (void)attachPluginMenuToItem:(id)arg1;

@end

@interface MSPointArray : NSObject <NSCoding, NSCopying, NSFastEnumeration>
{
    NSMutableArray *points;	// 8 = 0x8
}

+ (id)pointArray;
- (void).cxx_destruct;
- (id)treeAsDictionary;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)description;
- (BOOL)pointAtIndex:(unsigned long long)arg1 isEqualToPoint:(struct CGPoint)arg2;
- (void)removeAllPoints;
- (void)replacePointAtIndex:(unsigned long long)arg1 withPoint:(struct CGPoint)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setPoints:(id)arg1;
- (id)points;
- (unsigned long long)countOfPoints;
- (void)removePoint:(struct CGPoint)arg1;
- (void)removePointAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfPoint:(struct CGPoint)arg1;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (void)insertPoint:(struct CGPoint)arg1 atIndex:(unsigned long long)arg2;
- (void)addPoint:(struct CGPoint)arg1;
- (id)init;

@end

@interface MSPointsEventHandler : MSEventHandler
{
    MSLayer *layer;	// 128 = 0x80
    long long selectedPoint;	// 136 = 0x88
    NSMutableDictionary *currentSnaps;	// 144 = 0x90
    BOOL firstDrag;	// 152 = 0x98
}

@property(nonatomic) long long selectedPoint; // @synthesize selectedPoint;
- (void).cxx_destruct;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (void)markLayerDirtyOfType:(unsigned long long)arg1;
- (void)_restoreForRedo:(id)arg1;
- (void)prepareForUndo;
- (struct CGPoint)snapPoint:(struct CGPoint)arg1 toLines:(id)arg2;
- (id)snapsForPoints:(id)arg1;
- (id)snapsForShape;
- (BOOL)useSnaps;
- (void)drawDotAtPoint:(struct CGPoint)arg1 index:(long long)arg2 selected:(BOOL)arg3;
- (void)drawHandles;
- (void)drawSnaps;
- (void)concatTransformsForDrawSnaps;
- (id)handleLinesPath;
- (id)handleLinesColor;
- (void)drawHandleLines;
- (void)drawInRect:(struct CGRect)arg1;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1;
- (BOOL)shouldReturnToDefaultHandlerInCurrentState;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)refresh;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1;
- (BOOL)point:(struct CGPoint)arg1 isNearPoint:(struct CGPoint)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (long long)indexForMouse:(struct CGPoint)arg1;
- (BOOL)allowsEmptySelection;
- (struct CGPoint)relMouse:(struct CGPoint)arg1;
- (BOOL)shouldDrawLayerSelection;
- (void)sendUpdate;
- (id)bounds;
- (id)points;
- (void)setLayer:(id)arg1;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;
- (id)layerFromSelectedLayers;
- (id)initWithManager:(id)arg1;

@end

@interface MSPolygonShape : _MSPolygonShape <NSCoding>
{
}

- (void)resetPoints;
- (id)defaultName;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;

@end

@interface MSPolygonShapeAction : MSBaseShapeAction
{
}

- (void)polygonShape:(id)arg1;

@end

@interface MSPreferencesController : NSWindowController
{
    NSButton *scaleDownForRetinaButton;	// 80 = 0x50
}

+ (id)sharedController;
- (void).cxx_destruct;
- (void)adjustColorsAction:(id)arg1;
- (void)scaleDownForRetinaAction:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSPresetPickerPresetButton : NSButton <NSDraggingSource>
{
    struct CGPoint destinationAnimationPoint;	// 176 = 0xb0
}

- (void)draggingEndedWithOperation:(unsigned long long)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)writeAdditionalDragDataToPasteboard:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)innerShadow;
- (struct CGRect)frameConsideringAnimation;
- (void)animateToOrigin:(struct CGPoint)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@end

@interface MSPresetPickerView : NSView
{
    long long sourceDragIndex;	// 152 = 0x98
    id <MSPresetPickerViewDelegate> _delegate;	// 160 = 0xa0
    double _tileMargin;	// 168 = 0xa8
    double _edgeMargin;	// 176 = 0xb0
    unsigned long long _hoveringIndex;	// 184 = 0xb8
    unsigned long long _currentIndex;	// 192 = 0xc0
    struct CGSize _tileSize;	// 200 = 0xc8
}

@property(nonatomic) unsigned long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(nonatomic) unsigned long long hoveringIndex; // @synthesize hoveringIndex=_hoveringIndex;
@property(nonatomic) double edgeMargin; // @synthesize edgeMargin=_edgeMargin;
@property(nonatomic) double tileMargin; // @synthesize tileMargin=_tileMargin;
@property(nonatomic) struct CGSize tileSize; // @synthesize tileSize=_tileSize;
@property(nonatomic) __weak id <MSPresetPickerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (struct MSPresetIteratorStruct)incrementIterator:(struct MSPresetIteratorStruct)arg1;
- (long long)columnCount;
- (struct MSPresetIteratorStruct)newIterator;
- (BOOL)allowsInternalDragDrop;
- (void)moveDraggedViewToRowAtIndex:(long long)arg1;
- (long long)hoverIndexForDraggingInfo:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)removePresetForButton:(id)arg1;
- (void)removePresetWithTag:(long long)arg1;
- (void)pickPresetForButton:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)shouldShowMenuForButton:(id)arg1;
- (BOOL)drawFullContentForButton:(id)arg1 inRect:(struct CGRect)arg2;
- (void)drawContentForButton:(id)arg1 inRect:(struct CGRect)arg2;
- (BOOL)isInStackView;
- (void)stackIfPossible;
- (void)addPreset:(id)arg1;
- (id)addPresetButtonWithOffset:(struct CGPoint)arg1;
- (id)presetButtonForIndex:(unsigned long long)arg1 withOffset:(struct CGPoint)arg2;
- (BOOL)shouldShowAddButton;
- (void)reloadData;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSPrintAction : MSBaseAction
{
}

- (void)performAction:(id)arg1;
- (void)makeArtboardBeforePrinting:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)dynamicTitle;
- (id)menuItemsForPage:(id)arg1;
- (void)addMenuItems:(id)arg1 toMenu:(id)arg2;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface MSProAction : MSBaseAction
{
}

@end

@interface MSProButton : NSButton
{
}

- (void)awakeFromNib;

@end

@interface MSProEventHandlerAction : MSEventHandlerAction
{
}

@end

@interface MSProMenu : NSMenu
{
}

@end

@interface MSProMenuItem : NSMenuItem
{
}

- (void)awakeFromNib;

@end

@interface MSProView : NSView
{
}

- (void)awakeFromNib;

@end

@interface MSRadialGradientEventHandler : MSGradientEventHandler
{
    BOOL ellipseSelected;	// 176 = 0xb0
    struct CGSize deltaBetweenRadialPointBeforeDrag;	// 184 = 0xb8
}

- (id)layerFromSelectedLayers;
- (void)setEllipsePoint:(struct CGPoint)arg1;
- (struct CGPoint)ellipsePoint;
- (void)refreshOval;
- (id)ovalPath;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (void)drawInRect:(struct CGRect)arg1;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)hasSelectedPoint;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)markLayerDirtyOfType:(unsigned long long)arg1;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (BOOL)mouseIsNearEllipsePoint:(struct CGPoint)arg1;

@end

@interface MSRange : NSObject
{
}

+ (void)from:(long long)arg1 to:(long long)arg2 do:(CDUnknownBlockType)arg3;

@end

@interface MSRect : _MSRect
{
    double proportions;	// 8 = 0x8
    BOOL temporarilyConstrainProportions;	// 16 = 0x10
    long long proportionsTempDisabled;	// 24 = 0x18
    id _delegate;	// 32 = 0x20
}

+ (void)shouldNotifyRulerObservers:(BOOL)arg1;
+ (id)rectWithUnionOfRects:(id)arg1;
+ (id)rectWithRect:(struct CGRect)arg1;
+ (id)rectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)isIntegral;
- (void)setRectByIgnoringProportions:(struct CGRect)arg1;
- (void)setProportions:(double)arg1;
- (double)proportions;
- (void)setConstrainProportions:(BOOL)arg1;
- (void)setTemporarilyConstrainProportions:(BOOL)arg1;
- (void)calculateProportions;
@property(nonatomic) struct CGPoint mid; // @dynamic mid;
- (id)description;
- (void)log;
- (void)fill;
- (void)stroke;
- (BOOL)intersectsWithRect:(id)arg1;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)decodePropertiesUsingLegacyMethodWithCoder:(id)arg1;
- (void)decodePropertiesWithCoder:(id)arg1;
- (id)GKRect;
- (id)scaleBy:(double)arg1;
- (void)subtractHeight:(double)arg1;
- (void)addHeight:(double)arg1;
- (void)subtractWidth:(double)arg1;
- (void)addWidth:(double)arg1;
- (void)subtractY:(double)arg1;
- (void)addY:(double)arg1;
- (void)subtractX:(double)arg1;
- (void)addX:(double)arg1;
@property(nonatomic) double midY; // @dynamic midY;
@property(nonatomic) double midX; // @dynamic midX;
@property(nonatomic) double maxY; // @dynamic maxY;
@property(nonatomic) double minY; // @dynamic minY;
@property(nonatomic) double maxX; // @dynamic maxX;
@property(nonatomic) double minX; // @dynamic minX;
@property(nonatomic) double top; // @dynamic top;
@property(nonatomic) double left; // @dynamic left;
@property(nonatomic) struct CGPoint origin; // @dynamic origin;
@property(nonatomic) struct CGSize size; // @dynamic size;
- (void)makeRectIntegral;
- (void)makeOriginIntegral;
@property(nonatomic) struct CGRect rect; // @dynamic rect;
- (void)setY:(double)arg1;
- (void)setX:(double)arg1;
- (void)setHeight:(double)arg1;
- (void)setWidth:(double)arg1;
- (BOOL)shouldConstrainProportions;
- (void)disableProportionsTemporarily:(BOOL)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)objectDidInit;
- (id)initWithRect:(struct CGRect)arg1;
- (id)initWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
- (void)validateValues;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)decodePropertiesWithPreDataObjectCoder:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;

// Remaining properties
@property(nonatomic) double bottom; // @dynamic bottom;
@property(nonatomic) double right; // @dynamic right;

@end

@interface MSRectangleShape : _MSRectangleShape
{
}

+ (double)lastUsedFixedRadius;
- (void)multiplyBy:(double)arg1;
- (BOOL)shouldDrawLayerSelection;
- (void)resetPointsBasedOnUserInteraction;
- (void)resetPointsIfNecessary;
- (void)removePathsAndReset;
- (BOOL)shouldResetPointsOnResize;
- (void)resetPathsToRoundedRect;
- (void)resetPathsToRect;
- (void)resetPoints;
- (void)rectSizeDidChange:(id)arg1;
- (id)defaultName;
- (id)bezierPathForCursorPreview;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;

@end

@interface MSRectangleShapeAction : MSBaseShapeAction
{
}

- (unsigned short)shortcutCharacter;
- (void)rectangleShape:(id)arg1;

@end

@interface MSReflectionInspectorViewController : MSStylePartInspectorViewController
{
}

@end

@interface MSReleaseNotesWindowController : NSWindowController
{
    NSTextView *_releaseNotesField;	// 80 = 0x50
    NSTextField *_titleField;	// 88 = 0x58
}

@property(retain, nonatomic) NSTextField *titleField; // @synthesize titleField=_titleField;
@property(retain, nonatomic) NSTextView *releaseNotesField; // @synthesize releaseNotesField=_releaseNotesField;
- (void).cxx_destruct;
- (void)close:(id)arg1;
- (void)updateReleaseNotesField;
- (void)updateTitleToVersionNumber;
- (void)awakeFromNib;
- (id)init;

@end

@interface MSRenderingContext : DKContext
{
    BOOL _isDrawingReflection;	// 8 = 0x8
    BOOL _isExporting;	// 9 = 0x9
    BOOL _drawGroupOutline;	// 10 = 0xa
    BOOL _drawShapeOutline;	// 11 = 0xb
    BOOL _disableSubpixelAliasing;	// 12 = 0xc
    BOOL _includeArtboardBackground;	// 13 = 0xd
    BOOL _isDrawingMask;	// 14 = 0xe
    unsigned long long _disableDrawingFillsCounter;	// 16 = 0x10
    unsigned long long _disableClippingFillsCounter;	// 24 = 0x18
    NSMutableArray *_parentStack;	// 32 = 0x20
}

+ (unsigned long long)defaultCGContextCreateFlags;
@property(retain, nonatomic) NSMutableArray *parentStack; // @synthesize parentStack=_parentStack;
@property(nonatomic) BOOL isDrawingMask; // @synthesize isDrawingMask=_isDrawingMask;
@property(nonatomic) unsigned long long disableClippingFillsCounter; // @synthesize disableClippingFillsCounter=_disableClippingFillsCounter;
@property(nonatomic) unsigned long long disableDrawingFillsCounter; // @synthesize disableDrawingFillsCounter=_disableDrawingFillsCounter;
@property(nonatomic) BOOL includeArtboardBackground; // @synthesize includeArtboardBackground=_includeArtboardBackground;
@property(nonatomic) BOOL disableSubpixelAliasing; // @synthesize disableSubpixelAliasing=_disableSubpixelAliasing;
@property(nonatomic) BOOL drawShapeOutline; // @synthesize drawShapeOutline=_drawShapeOutline;
@property(nonatomic) BOOL drawGroupOutline; // @synthesize drawGroupOutline=_drawGroupOutline;
@property(nonatomic) BOOL isExporting; // @synthesize isExporting=_isExporting;
@property(nonatomic) BOOL isDrawingReflection; // @synthesize isDrawingReflection=_isDrawingReflection;
- (void).cxx_destruct;
- (BOOL)shouldClipFills;
- (void)performBlockWithoutClippingFills:(CDUnknownBlockType)arg1;
- (BOOL)shouldDrawFills;
- (void)performBlockWithoutDrawingFills:(CDUnknownBlockType)arg1;
- (unsigned long long)disableSubpixelAntialiasingFlags;
- (id)parentLayers;
- (id)parentLayerAtLevel:(unsigned long long)arg1;
- (id)parentLayer;
- (void)popParentLayer;
- (void)pushParentLayer:(id)arg1;
- (id)contextKey;
- (id)initWithContextRef:(struct CGContext *)arg1 atZoomLevel:(double)arg2;

@end

@interface MSReorderingContainerView : NSView
{
    long long sourceDragIndex;	// 152 = 0x98
    long long direction;	// 160 = 0xa0
    id <MSReorderingContainerDelegate> _delegate;	// 168 = 0xa8
    NSArray *_subViewDestinationFrames;	// 176 = 0xb0
}

@property(retain, nonatomic) NSArray *subViewDestinationFrames; // @synthesize subViewDestinationFrames=_subViewDestinationFrames;
@property(nonatomic) __weak id <MSReorderingContainerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long direction; // @synthesize direction;
- (void).cxx_destruct;
- (BOOL)performDragOperation:(id)arg1;
- (double)startOffsetForStacking;
- (id)destinationFramesForSubviewsForAxis:(id)arg1;
- (void)reorderSubviewsAnimated:(BOOL)arg1;
- (id)draggingView;
- (unsigned long long)numberOfReorderableSubviews;
- (long long)hoverIndexForDraggingInfo:(id)arg1;
- (void)moveDraggedViewToRowAtIndex:(long long)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSReorderingView : NSView <NSDraggingSource>
{
    SEL _deleteAction;	// 152 = 0x98
    id _target;	// 160 = 0xa0
    long long _reorderingTag;	// 168 = 0xa8
}

@property(nonatomic) long long reorderingTag; // @synthesize reorderingTag=_reorderingTag;
@property(nonatomic) __weak id target; // @synthesize target=_target;
@property(nonatomic) SEL deleteAction; // @synthesize deleteAction=_deleteAction;
- (void).cxx_destruct;
- (id)menuForEvent:(id)arg1;
- (void)draggingEndedWithOperation:(unsigned long long)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)startDragWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface MSReplaceColorAction : MSBaseAction
{
}

- (void)performAction:(id)arg1;
- (void)replaceColor:(id)arg1;

@end

@interface MSReplaceColorSheet : CHSheetController
{
    BCColorListView *_colorList;	// 80 = 0x50
    BCColorListView *_changedColorList;	// 88 = 0x58
    NSTextField *_baseColorIndexField;	// 96 = 0x60
    BCHSBColorPicker *_colorPicker;	// 104 = 0x68
    NSImageView *_previewView;	// 112 = 0x70
    NSArray *_colors;	// 120 = 0x78
    NSArray *_originalColors;	// 128 = 0x80
    MSDocumentData *_theDoc;	// 136 = 0x88
    NSArray *_allColors;	// 144 = 0x90
    NSArray *_originalAllColors;	// 152 = 0x98
}

@property(retain, nonatomic) NSArray *originalAllColors; // @synthesize originalAllColors=_originalAllColors;
@property(retain, nonatomic) NSArray *allColors; // @synthesize allColors=_allColors;
@property(retain, nonatomic) MSDocumentData *theDoc; // @synthesize theDoc=_theDoc;
@property(retain, nonatomic) NSArray *originalColors; // @synthesize originalColors=_originalColors;
@property(retain, nonatomic) NSArray *colors; // @synthesize colors=_colors;
@property(retain, nonatomic) NSImageView *previewView; // @synthesize previewView=_previewView;
@property(retain, nonatomic) BCHSBColorPicker *colorPicker; // @synthesize colorPicker=_colorPicker;
@property(retain, nonatomic) NSTextField *baseColorIndexField; // @synthesize baseColorIndexField=_baseColorIndexField;
@property(retain, nonatomic) BCColorListView *changedColorList; // @synthesize changedColorList=_changedColorList;
@property(retain, nonatomic) BCColorListView *colorList; // @synthesize colorList=_colorList;
- (void).cxx_destruct;
- (void)twist:(id)arg1;
- (void)colorIndexChanged:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSResetBooleanAction : MSBaseBooleanAction
{
}

- (BOOL)validate;
- (void)performAction:(id)arg1;
- (void)resetBooleanAction:(id)arg1;

@end

@interface MSResizeSheet : CHSheetController
{
    double scale;	// 80 = 0x50
    NSTextField *scalingField;	// 88 = 0x58
    NSTextField *newWidthField;	// 96 = 0x60
    NSTextField *newHeightField;	// 104 = 0x68
    NSTextField *labelField;	// 112 = 0x70
    MSDocument *_doc;	// 120 = 0x78
}

@property(retain, nonatomic) MSDocument *doc; // @synthesize doc=_doc;
@property(nonatomic) double scale; // @synthesize scale;
- (void).cxx_destruct;
- (id)selectedLayers;
- (struct CGPoint)midPointForScaling;
- (void)confirm:(id)arg1;
- (struct CGRect)oldRect;
- (void)didChangeValues;
- (void)willChangeValues;
@property(nonatomic) double height; // @dynamic height;
- (void)setNilValueForKey:(id)arg1;
@property(nonatomic) double width; // @dynamic width;
- (void)awakeFromNib;

@end

@interface MSRotateAction : MSEventHandlerAction
{
}

- (void)rotate90CC:(id)arg1;
- (void)rotate90C:(id)arg1;
- (BOOL)validate;
- (void)performAction:(id)arg1;
- (void)rotate:(id)arg1;

@end

@interface MSRotateEventHandler : MSNormalBaseEventHandler
{
    long long startingDegrees;	// 128 = 0x80
    double startingRotation;	// 136 = 0x88
    BOOL exitOnMouseUp;	// 144 = 0x90
    BOOL isDraggingInsideLayer;	// 145 = 0x91
    struct CGPoint previousMouseLocation;	// 152 = 0x98
    NSButton *flattenAfterRotateButton;	// 168 = 0xa8
    BOOL _disableMoving;	// 176 = 0xb0
}

+ (id)cursorForDegrees:(long long)arg1;
+ (long long)degreesForPoint:(struct CGPoint)arg1 inLayer:(id)arg2;
@property(nonatomic) BOOL disableMoving; // @synthesize disableMoving=_disableMoving;
@property(nonatomic) BOOL exitOnMouseUp; // @synthesize exitOnMouseUp;
- (void).cxx_destruct;
- (void)willPerformUndo;
- (double)alignDegrees:(double)arg1;
- (long long)degreesForPoint:(struct CGPoint)arg1;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)mouseDraggedRotateLayer:(id)arg1 mouse:(struct CGPoint)arg2 flags:(unsigned long long)arg3;
- (void)mouseDraggedMoveLayer:(id)arg1 mouse:(struct CGPoint)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)calculateIsDraggingInsideLayer:(struct CGPoint)arg1;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (BOOL)isStraightTriangle:(id)arg1;
- (BOOL)shouldFlattenLayer:(id)arg1;
- (void)handlerWillLoseFocus;
- (BOOL)canFlattenShape;
- (void)awakeFromNib;
- (void)handlerGotFocus;
- (id)layers;

@end

@interface MSRotatedRectSnapper : NSObject
{
    MSLayer *_layer;	// 8 = 0x8
}

+ (id)rotatedFrameOfLayer:(id)arg1;
@property(retain, nonatomic) MSLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
- (id)GKRect;
- (struct CGRect)rect;
@property(readonly, nonatomic) double height; // @dynamic height;
@property(readonly, nonatomic) double width; // @dynamic width;
@property(nonatomic) double y; // @dynamic y;
@property(nonatomic) double x; // @dynamic x;

@end

@interface MSRoundToPixelAction : MSBaseAction
{
}

- (void)roundCurvePoints:(id)arg1 path:(id)arg2;
- (void)roundCurvePointsInPath:(id)arg1;
- (void)roundLayerPoints:(id)arg1;
- (void)doRoundLayerFrame:(id)arg1;
- (void)roundLayerFrame:(id)arg1;
- (void)roundSelectedShapeHandlerPoints;
- (void)performAction:(id)arg1;
- (BOOL)pathPointsAreNotIntegral:(id)arg1;
- (BOOL)layerPointsAreNotIntegral:(id)arg1;
- (BOOL)layerFrameIsNotIntegral:(id)arg1;
- (unsigned long long)roundingModeForLayer:(id)arg1;
- (unsigned long long)roundModeForShapeHandler;
- (unsigned long long)roundingMode;
- (BOOL)validate;
- (void)roundToPixel:(id)arg1;

@end

@interface MSRoundedRectangleShapeAction : MSBaseShapeAction
{
}

- (unsigned short)shortcutCharacter;
- (id)imageName;
- (id)tooltip;
- (id)label;
- (id)recipeName;
- (void)performAction:(id)arg1;
- (void)roundedRectangleShape:(id)arg1;

@end

@interface MSRulerBlock : NSView
{
}

- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSRulerData : _MSRulerData
{
}

- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (void)setValue:(double)arg1 forGuideAtIndex:(unsigned long long)arg2;
- (void)replaceGuideAtIndex:(unsigned long long)arg1 withGuide:(id)arg2;
- (double)guideAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfGuides;
- (void)removeGuide:(id)arg1;
- (void)removeGuideAtIndex:(unsigned long long)arg1;
- (void)addGuide:(id)arg1;
- (void)addGuideWithValue:(double)arg1;
- (void)addGuide;
- (unsigned long long)decodingConversionForProperty:(id)arg1;

@end

@interface MSRulerGuides : NSObject
{
}

+ (id)absoluteFrameOfSelectedLayers:(id)arg1;
+ (id)localVerticalRulerGuidesForGrid:(id)arg1 ruler:(id)arg2 forDrawing:(BOOL)arg3 inRect:(struct CGRect)arg4;
+ (id)verticalRulerGuidesWithDelegate:(id)arg1 forDrawing:(BOOL)arg2 inRect:(struct CGRect)arg3;
+ (id)verticalRulerGuidesWithDelegate:(id)arg1 forDrawing:(BOOL)arg2;
+ (id)localHorizontalRulerGuidesForGrid:(id)arg1 ruler:(id)arg2 forDrawing:(BOOL)arg3 inRect:(struct CGRect)arg4;
+ (id)horizontalRulerGuidesWithDelegate:(id)arg1 forDrawing:(BOOL)arg2 inRect:(struct CGRect)arg3;
+ (id)horizontalRulerGuidesWithDelegate:(id)arg1 forDrawing:(BOOL)arg2;

@end

@interface MSRulerView : NSView
{
    MSContentDrawView *contentView;	// 152 = 0x98
    MSDocument *document;	// 160 = 0xa0
    BOOL didOpenUndoGroup;	// 168 = 0xa8
    unsigned long long dragIndex;	// 176 = 0xb0
    double baseOffset;	// 184 = 0xb8
    double previousBase;	// 192 = 0xc0
    NSNumberFormatter *metricsFormatter;	// 200 = 0xc8
    MSRulerData *rulerData;	// 208 = 0xd0
}

@property(retain, nonatomic) MSDocument *document; // @synthesize document;
@property(retain, nonatomic) MSRulerData *rulerData; // @synthesize rulerData;
- (void).cxx_destruct;
- (void)endUndo;
- (void)beginUndo;
- (void)dealloc;
- (long long)rulerHeight;
- (long long)rulerLength;
- (double)zoomValue;
- (struct CGPoint)scrollOrigin;
- (void)drawLineAtPosition:(double)arg1 withOptions:(unsigned long long)arg2;
- (void)drawMetricsWithOptions:(long long)arg1;
- (void)drawBackgroundForLabel:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawMetric:(id)arg1 atPoint:(struct CGPoint)arg2 drawBackground:(BOOL)arg3;
- (void)drawMetric:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawMetrics;
- (void)drawBackground;
- (id)occupiedRegionForRect:(struct CGRect)arg1 withOffset:(long long)arg2 zoom:(double)arg3;
- (void)drawOccupiedRegions;
- (void)drawAlignmentGuides;
- (void)drawRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (id)lineColor;
- (id)bezierPathForLineAtPosition:(double)arg1 inRect:(struct CGRect)arg2;
- (void)drawGuidesInRect:(struct CGRect)arg1;
- (double)baseLineIncludingScrollOrigin:(BOOL)arg1;
- (double)baseLine;
- (id)snapLineWithPosition:(double)arg1 inRect:(struct CGRect)arg2;
- (id)allSnapGuides;
- (struct CGPoint)mouseEventToPoint:(id)arg1;
- (void)refreshGuidesForGrid:(id)arg1;
- (void)refreshAllGuidesInDrawView;
- (void)refreshGuideInDrawViewAtIndex:(unsigned long long)arg1;
- (void)mouseUp:(id)arg1;
- (id)rulerBasedRectForLayer:(id)arg1;
- (double)snapGuideToSelectedLayers:(double)arg1;
- (id)rulerAxis;
- (double)guidePositionForMouse:(struct CGPoint)arg1;
- (void)showAppropriateCursorForMouse:(struct CGPoint)arg1;
- (void)dragSelectedGuideWithMouse:(struct CGPoint)arg1;
- (void)updateSelectedLayerOriginsInInspector;
- (void)dragRulerBaseWithMouse:(struct CGPoint)arg1;
- (void)mouseDraggedAtPoint:(struct CGPoint)arg1;
- (void)mouseDragged:(id)arg1;
- (unsigned long long)indexOfGuideAtMousePoint:(struct CGPoint)arg1;
- (void)addNewGuideAtMousePoint:(struct CGPoint)arg1;
- (void)mouseDown:(struct CGPoint)arg1 clickCount:(long long)arg2;
- (void)mouseDown:(id)arg1;
- (void)setNormalCursor;
- (void)setDragCursor;
- (void)setResizeCursor;
- (double)relevantAxisForPoint:(struct CGPoint)arg1;
- (void)mouseMoved:(id)arg1;
- (BOOL)eventInView:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (id)menuForEvent:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSRunCustomScriptSheet : CHSheetController
{
    NSTextView *inputField;	// 80 = 0x50
    NSButton *saveButton;	// 88 = 0x58
    NSTextField *scriptNameField;	// 96 = 0x60
    NSButton *runButton;	// 104 = 0x68
    NSPopUpButton *actionButton;	// 112 = 0x70
    NSTextView *_logField;	// 120 = 0x78
}

@property(retain, nonatomic) NSTextView *logField; // @synthesize logField=_logField;
- (void).cxx_destruct;
- (void)saveAction:(id)arg1;
- (void)showHelp:(id)arg1;
- (void)runScript:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSSVGImporter : NSObject <MSImporter>
{
    SVGImporter *_importer;	// 8 = 0x8
    id _graph;	// 16 = 0x10
}

+ (id)svgImporter;
@property(retain, nonatomic) id graph; // @synthesize graph=_graph;
@property(retain, nonatomic) SVGImporter *importer; // @synthesize importer=_importer;
- (void).cxx_destruct;
- (BOOL)shouldCollapseSinglePage;
- (BOOL)shouldExpandPages;
- (id)secondPhaseSubtitleForValue:(long long)arg1 maximum:(long long)arg2;
- (id)firstPhaseSubtitle;
- (void)finishImporting;
- (void)importIntoGroup:(id)arg1 name:(id)arg2 images:(id)arg3 progress:(CDUnknownBlockType)arg4;
- (unsigned long long)prepareToImportFromData:(id)arg1;
- (unsigned long long)prepareToImportFromURL:(id)arg1;

@end

@interface MSSaveAsTemplateAction : MSBaseAction
{
}

- (void)performAction:(id)arg1;
- (void)saveAsTemplate:(id)arg1;

@end

@interface MSScaleAction : MSBaseAction
{
}

- (BOOL)validate;
- (void)performAction:(id)arg1;
- (void)scale:(id)arg1;

@end

@interface MSScissorsAction : MSEventHandlerAction
{
}

- (id)tooltip;
- (BOOL)validate;
- (void)scissors:(id)arg1;

@end

@interface MSScissorsEventHandler : MSEventHandler
{
    unsigned long long hoveringBeforePointIndex;	// 128 = 0x80
    BOOL hasDoneFirstCut;	// 136 = 0x88
    MSShapeGroup *shape;	// 144 = 0x90
    BOOL didCutOnMouseDown;	// 152 = 0x98
    NSBezierPath *_cachedBezier;	// 160 = 0xa0
}

@property(retain, nonatomic) NSBezierPath *cachedBezier; // @synthesize cachedBezier=_cachedBezier;
@property(retain, nonatomic) MSShapeGroup *shape; // @synthesize shape;
- (void).cxx_destruct;
- (id)bezierPathWithMoveToReplacedByLines;
- (BOOL)shouldDrawLayerSelection;
- (id)imageName;
- (void)setClosedScissorsCursor;
- (void)setScissorsCursor;
- (BOOL)canCutPaths;
- (void)drawInRect:(struct CGRect)arg1;
- (void)cut;
- (void)replaceClosePathByLineIfNecessary;
- (BOOL)mouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (unsigned long long)hoveringBeforePointIndexWithMouse:(struct CGPoint)arg1;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1;
- (void)updateBezierPath:(id)arg1;
- (id)toolbarIdentifier;
- (void)handlerWillLoseFocus;
- (void)undoNotification:(id)arg1;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSScriptDocument : NSDocument
{
}

- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface MSSearchField : NSSearchField
{
    PXListView *_layerListView;	// 216 = 0xd8
}

@property(nonatomic) __weak PXListView *layerListView; // @synthesize layerListView=_layerListView;
- (void).cxx_destruct;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (void)moveFocusToTableView;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;

@end

@interface MSSectionBackgroundSeparatorView : NSView
{
}

+ (id)separator;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSSectionBackgroundView : NSView
{
}

+ (long long)requiredHeightForViews:(id)arg1;
+ (id)separatorBetweenView:(id)arg1 andView:(id)arg2 controller:(id)arg3;
+ (id)sectionBackgroundWithController:(id)arg1;
- (BOOL)isFlipped;
- (void)drawWhiteHeader;
- (void)drawRect:(struct CGRect)arg1;
- (void)stackSubviews;
- (void)recalculateHeight;

@end

@interface MSSelectionPath : NSObject <NSCopying>
{
    long long pointIndex;	// 8 = 0x8
    unsigned long long curveIndex;	// 16 = 0x10
}

+ (id)selectionWithPoint:(long long)arg1 curve:(long long)arg2;
+ (id)emptySelection;
@property(nonatomic) unsigned long long curveIndex; // @synthesize curveIndex;
@property(nonatomic) long long pointIndex; // @synthesize pointIndex;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isLike:(id)arg1;
- (BOOL)isEqual:(id)arg1;

@end

@interface MSSelectionPathCollection : NSObject <NSCopying>
{
    NSMutableArray *selectionPaths;	// 8 = 0x8
}

- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addSelectionsFromCollection:(id)arg1;
- (id)lastSelectionPath;
- (unsigned long long)count;
- (BOOL)isEmpty;
- (BOOL)containsSelectionPath:(id)arg1;
- (id)selectionPaths;
- (void)newSelection:(id)arg1;
- (void)clear;
- (void)toggleSelectionPath:(id)arg1;
- (void)removeSelectionPath:(id)arg1;
- (void)addSelectionPath:(id)arg1;
- (id)init;

@end

@interface MSShadowInspectorViewController : MSStylePartInspectorViewController
{
    NSString *_type;	// 112 = 0x70
    MSUpDownTextField *_xOffsetField;	// 120 = 0x78
    MSUpDownTextField *_yOffsetField;	// 128 = 0x80
    MSUpDownTextField *_blurRadiusField;	// 136 = 0x88
    MSUpDownTextField *_spreadField;	// 144 = 0x90
    MSColorPreviewButton *_colorButton;	// 152 = 0x98
}

@property(retain, nonatomic) MSColorPreviewButton *colorButton; // @synthesize colorButton=_colorButton;
@property(retain, nonatomic) MSUpDownTextField *spreadField; // @synthesize spreadField=_spreadField;
@property(retain, nonatomic) MSUpDownTextField *blurRadiusField; // @synthesize blurRadiusField=_blurRadiusField;
@property(retain, nonatomic) MSUpDownTextField *yOffsetField; // @synthesize yOffsetField=_yOffsetField;
@property(retain, nonatomic) MSUpDownTextField *xOffsetField; // @synthesize xOffsetField=_xOffsetField;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)didGetAddedToInspector;
- (id)sectionTitle;
- (id)title;
- (id)keyPath;
- (BOOL)isSpreadFieldAvailable;
- (void)prepare;

@end

@interface MSShadowStyleCollection : MSStylePartCollection
{
}

- (id)stylePartForInserting;

@end

@interface MSShapeAction : MSBaseAction
{
}

- (BOOL)hasSubMenu;
- (id)tooltip;
- (id)children;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface MSShapeDictionary : NSObject
{
    NSMutableSet *pairs;	// 8 = 0x8
}

- (void).cxx_destruct;
- (BOOL)isEmpty;
- (void)each:(CDUnknownBlockType)arg1;
- (id)allShapes;
- (void)removeAllValues;
- (void)setValue:(id)arg1 forShape:(id)arg2;
- (id)valueForShape:(id)arg1;
- (id)init;

@end

@interface MSShapeEventHandler : MSEventHandler <NSTextDelegate, NSMenuDelegate>
{
    MSSelectionPathCollection *selectionPaths;	// 128 = 0x80
    MSSelectionPathCollection *dragRectSelection;	// 136 = 0x88
    long long hoveringPoint;	// 144 = 0x90
    long long hoveringPointInPoint;	// 152 = 0x98
    long long hoveringBeforePointIndex;	// 160 = 0xa0
    BOOL firstDrag;	// 168 = 0xa8
    BOOL editingNewShape;	// 169 = 0xa9
    BOOL didInsertOnMouseDown;	// 170 = 0xaa
    BOOL didSelectPoints;	// 171 = 0xab
    BOOL didMouseDown;	// 172 = 0xac
    BOOL wasMakingDragRectSelectionAtMouseDown;	// 173 = 0xad
    NSBezierPath *horizontalSnap;	// 176 = 0xb0
    NSBezierPath *verticalSnap;	// 184 = 0xb8
    struct CGPoint mouseLocation;	// 192 = 0xc0
    struct CGPoint lastMouseMoved;	// 208 = 0xd0
    struct CGPoint selectionStartPoint;	// 224 = 0xe0
    struct CGPoint selectionEndPoint;	// 240 = 0xf0
    MSSelectionPath *candidateSelection;	// 256 = 0x100
    NSTextField *cornerRadiusField;	// 264 = 0x108
    NSPopUpButton *roundingPopUpButton;	// 272 = 0x110
    NSView *curveModeBackgroundView;	// 280 = 0x118
    NSButton *makeRectSelectionButton;	// 288 = 0x120
    NSButton *closePathButton;	// 296 = 0x128
    NSTextField *curvePointXField;	// 304 = 0x130
    NSTextField *curvePointYField;	// 312 = 0x138
    NSSlider *cornerRadiusSlider;	// 320 = 0x140
    struct CGRect dirtyRect;	// 328 = 0x148
    BOOL _isMakingRectSelection;	// 360 = 0x168
    MSLayerGroup *_currentGroup;	// 368 = 0x170
    MSShapePathLayer *_shape;	// 376 = 0x178
}

@property(retain, nonatomic) MSShapePathLayer *shape; // @synthesize shape=_shape;
@property(nonatomic) __weak MSLayerGroup *currentGroup; // @synthesize currentGroup=_currentGroup;
@property(nonatomic) BOOL isMakingRectSelection; // @synthesize isMakingRectSelection=_isMakingRectSelection;
@property(retain, nonatomic) MSSelectionPath *candidateSelection; // @synthesize candidateSelection;
@property(retain, nonatomic) id verticalSnap; // @synthesize verticalSnap;
@property(retain, nonatomic) id horizontalSnap; // @synthesize horizontalSnap;
- (void).cxx_destruct;
- (BOOL)shouldHideExportBar;
- (void)finishEditingAction:(id)arg1;
- (void)closePathAction:(id)arg1;
- (BOOL)inspectorShouldShowBlendingProperties;
- (BOOL)inspectorShouldShowLayerSpecificProperties;
- (BOOL)inspectorShouldShowSharedStyles;
- (BOOL)inspectorShouldShowPositions;
- (unsigned long long)inspectorLocation;
- (id)nibName;
- (void)dealloc;
- (id)titleForRoundingPopUp;
- (void)adjustRoundingPopUpTitle;
- (void)menuNeedsUpdate:(id)arg1;
- (void)refreshAction:(id)arg1;
- (void)cornerRadiusAction:(id)arg1;
- (void)roundingPopUpAction:(id)arg1;
- (void)vectorModeSegmentedButtonAction:(id)arg1;
- (void)validateCornerRadiusButton;
- (id)selectionPaths;
@property(readonly, nonatomic) NSArray *selectedCurvePoints; // @dynamic selectedCurvePoints;
- (void)awakeFromNib;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1 axis:(id)arg2 point:(struct CGPoint)arg3;
- (void)setCurrentCurveValue:(struct CGPoint)arg1 axis:(id)arg2;
- (void)adjustCurvePointValueOnAxis:(id)arg1;
- (void)curvePointYAction:(id)arg1;
- (void)curvePointXAction:(id)arg1;
- (void)duplicate:(id)arg1;
- (struct CGPoint)pointInPageOrArtboardCoordinates:(struct CGPoint)arg1;
- (struct CGPoint)currentPointValueForPoint:(id)arg1;
- (void)adjustCurrentCurveXYValue;
- (void)reloadViewData;
- (struct CGPoint)_roundPoint:(struct CGPoint)arg1;
- (struct CGPoint)roundPoint:(struct CGPoint)arg1;
- (BOOL)shouldDrawLayerSelection;
- (void)changeColor:(id)arg1;
- (struct CGPoint)relativePoint:(struct CGPoint)arg1;
- (void)markShapeDirtyOfType:(unsigned long long)arg1;
- (id)dirtyFrame;
- (void)adjustFrame;
- (id)bezierPathAroundPoint:(id)arg1 andPoint:(id)arg2 xTol:(double)arg3 yTol:(double)arg4;
- (BOOL)point:(struct CGPoint)arg1 isBetweenPoint:(id)arg2 andPoint:(id)arg3;
- (struct MSShapeClickInfo)clickInfoForMouse:(struct CGPoint)arg1;
- (long long)indexOfSelectedPoint;
- (void)flagsChanged:(id)arg1;
- (void)drawVectorSelection:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1;
- (id)bezierPathForWire;
- (id)bezierWireForClosingPath;
- (void)drawWire;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)didUndoNotification:(id)arg1;
- (void)keyUp:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (long long)curveModeForPressedKey:(long long)arg1;
- (void)changeSelectedCurvePointsTo:(long long)arg1;
- (void)nudgeSelectedPointsForKey:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)deleteSelectedPoints;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)selectAll:(id)arg1;
- (void)delete:(id)arg1;
- (void)showCursorWithFlags:(unsigned long long)arg1;
- (BOOL)mouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)refreshWireIfNecessary;
- (void)clearSelectionPathsAndRefresh;
- (BOOL)didClickOutsideBounds:(struct CGPoint)arg1;
- (BOOL)mouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)mouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)refreshDragRect;
- (void)determineSelectedPointsByDrag;
- (BOOL)canAddNewPointOnMouseDownWithFlags:(unsigned long long)arg1;
- (BOOL)mouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1 toLayer:(id)arg2;
- (BOOL)mouseDownEvent:(id)arg1;
- (void)selectPointAndUpdate:(long long)arg1 curve:(long long)arg2;
- (BOOL)selectingPointShouldClosePath:(long long)arg1;
- (void)fitCurvePoint:(id)arg1 bySplittingCurvePath:(id)arg2 surroundingPoints:(id)arg3;
- (id)pointsAroundIndex:(long long)arg1;
- (void)insertPoint:(struct CGPoint)arg1 beforeIndex:(long long)arg2;
- (struct CGPoint)alignPoint:(struct CGPoint)arg1 withShiftTo:(struct CGPoint)arg2;
- (void)addPointForMouse:(struct CGPoint)arg1;
- (void)changeFromStraightToMirrored:(id)arg1 index:(long long)arg2;
- (void)expandHandlesForSelectionPath:(id)arg1;
- (void)expandHandlesForSelectedPoint;
- (id)curvePointForSelectionPath:(id)arg1;
- (void)handlerWillLoseFocus;
- (void)prepareShapeForEditing;
- (void)insertNewShapeForEditingAtPoint:(struct CGPoint)arg1;
- (id)toolbarIdentifier;
- (id)findSelectedShape;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;
- (struct CGPoint)snapPointIfEnabled:(struct CGPoint)arg1;
- (struct CGPoint)snapPoint:(struct CGPoint)arg1;
- (struct CGPoint)checkForPoint:(struct CGPoint)arg1 againstPoint:(struct CGPoint)arg2;
- (BOOL)point:(struct CGPoint)arg1 isCloseToPoint:(struct CGPoint)arg2;
- (void)snapsMouseUpHook;
- (void)drawSnaps;

@end

@interface MSShapeGroup : _MSShapeGroup
{
    BOOL skipNextArtisticStroke;	// 56 = 0x38
    int ignoreInvalidChildCounter;	// 60 = 0x3c
    BOOL _textRenderedOnPath;	// 64 = 0x40
}

+ (BOOL)groupBoundsShouldBeIntegral;
+ (id)shapeWithBezierPath:(id)arg1;
@property(nonatomic) BOOL textRenderedOnPath; // @synthesize textRenderedOnPath=_textRenderedOnPath;
@property(nonatomic) BOOL skipNextArtisticStroke; // @synthesize skipNextArtisticStroke;
- (BOOL)canRotate;
- (void)adjustStyleToFitSubPaths;
- (BOOL)shouldForceRendering;
- (BOOL)shouldBeSelectedInLayerList;
- (id)allCurvePoints;
- (void)debugWritePaths:(long long)arg1;
- (BOOL)isVerticalLine;
- (BOOL)isHorizontalLine;
- (void)makeLinePixelAligned;
- (BOOL)isLine;
- (BOOL)hasLines;
- (void)drawHoverWithZoom:(double)arg1;
- (void)layerStyleDidChange;
- (void)layerSizeDidChangeFromCorner:(long long)arg1;
- (void)invalidateCache;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (BOOL)isPartOfClippingMask;
- (void)moveTransformsToChildren;
- (void)reversePath;
- (void)simplify;
- (BOOL)shouldDrawArtisticStrokeForPath:(id)arg1;
@property(nonatomic) BOOL isClosed; // @dynamic isClosed;
- (void)setEdited:(BOOL)arg1;
- (id)inspectorViewControllers;
- (void)setHasClippingMask:(BOOL)arg1;
- (struct CGRect)affectedFrameOfLayer;
- (id)textOnShape;
- (void)addSlice:(id)arg1;
- (BOOL)isValidChild:(id)arg1;
- (void)ignoreInvalidChildDuringBlock:(CDUnknownBlockType)arg1;
- (struct CGRect)safeFrameForBezierPath:(id)arg1;
- (void)setBezierPath:(id)arg1;
- (id)decoratedBezierPatInAbsoluteFrame:(struct CGRect)arg1;
- (id)outlineStrokePath:(id)arg1;
- (id)decoratedBezierPath;
- (id)bezierPathOfSubPath:(id)arg1 inRect:(struct CGRect)arg2;
- (id)bezierPathInRect:(struct CGRect)arg1;
- (id)_bezierPathInSize:(struct CGSize)arg1;
- (void)applyPropertiesToBezier:(id)arg1;
- (id)bezierPath;
- (id)bezierPathWithTransforms;
- (struct CGRect)rectByAccountingForStyleSize:(struct CGRect)arg1;
- (BOOL)hitTestAsLine:(struct CGPoint)arg1;
- (BOOL)hitTest:(struct CGPoint)arg1;
- (id)handlerName;
- (BOOL)handleDoubleClick;
- (id)defaultName;
- (void)resizeRoot;
- (long long)selectedCorner:(struct CGPoint)arg1 zoom:(double)arg2;
- (void)dataArray:(id)arg1 didRemoveObject:(id)arg2;
- (void)initEmptyObject;
- (id)CSSAttributes;
- (id)CSSAttributeString;
- (id)bezierLinePreviewInRect:(struct CGRect)arg1;
- (void)drawLinePreviewInRect:(struct CGRect)arg1 honourSelected:(BOOL)arg2;
- (void)drawPreviewInRect:(struct CGRect)arg1 honourSelected:(BOOL)arg2;
- (id)lastPoint;
- (id)firstPoint;
- (struct CGPoint)rulerBase;
@property(nonatomic) double length; // @dynamic length;
@property(nonatomic) double y2; // @dynamic y2;
@property(nonatomic) double x2; // @dynamic x2;
@property(nonatomic) double y1; // @dynamic y1;
@property(nonatomic) double x1; // @dynamic x1;
- (void)setP2:(struct CGPoint)arg1;
- (void)setP1:(struct CGPoint)arg1;
- (struct CGPoint)p2;
- (struct CGPoint)p1;
- (void)migratePropertiesFromV27OrEarlierWithCoder:(id)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (Class)rendererClass;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;
- (id)elementNameWithAttributes:(id)arg1 path:(id *)arg2 pathAttributes:(id *)arg3 elementAttributes:(id *)arg4 exportAsPath:(char *)arg5 exporter:(id)arg6;
- (id)addMaskWithElement:(id)arg1 parentElement:(id)arg2 attributes:(id)arg3 exporter:(id)arg4;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (id)svgStyle;

@end

@interface MSShapeGroupRenderer : MSLayerGroupRenderer
{
}

+ (void)_doDrawLayer:(id)arg1 context:(id)arg2;
+ (void)doDrawLayer:(id)arg1 context:(id)arg2;
+ (BOOL)shouldDrawLayer:(id)arg1 context:(id)arg2;

@end

@interface MSShapePath : _MSShapePath
{
}

+ (id)pathWithBezierPath:(id)arg1 inRect:(struct CGRect)arg2;
+ (id)pathWithPoints:(id)arg1;
- (BOOL)isPolygon;
- (BOOL)isRectangle;
- (BOOL)isLine;
- (void)multiplyBy:(double)arg1;
- (id)bezierPathInRect:(struct CGRect)arg1;
- (BOOL)attemptToSimplifyBetweenPoint:(id)arg1 andPoint:(id)arg2;
- (BOOL)simplifyPathOnce;
- (void)simplifyPath;
- (unsigned long long)numberOfPoints;
- (id)lastPoint;
- (id)firstPoint;
- (id)pointAtIndex:(long long)arg1;
- (void)removeAllPoints;
- (void)removeLastPoint;
- (void)insertPoint:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addPoints:(id)arg1;
- (void)addPoint:(id)arg1;
- (void)setIsClosed:(BOOL)arg1;
- (id)layer;
- (id)initWithBezierPath:(id)arg1 inRect:(struct CGRect)arg2;
- (id)initWithPoints:(id)arg1;
- (unsigned long long)decodingConversionForProperty:(id)arg1;

@end

@interface MSShapePathLayer : _MSShapePathLayer <NSCoding>
{
    id decodedPaths;	// 56 = 0x38
    BOOL isEditing;	// 64 = 0x40
}

+ (id)shapeWithPath:(id)arg1;
+ (id)shapeWithShapePath:(id)arg1 inRect:(struct CGRect)arg2;
@property(nonatomic) BOOL isEditing; // @synthesize isEditing;
- (void).cxx_destruct;
- (BOOL)calculateHasBlendedLayer;
- (void)prepareObjectCopy:(id)arg1;
- (BOOL)shouldForceRendering;
- (id)pathStyle;
- (void)setEndDecorationType:(unsigned long long)arg1;
- (void)setStartDecorationType:(unsigned long long)arg1;
- (BOOL)shouldOwnStyle;
- (id)allCurvePoints;
- (id)bezierPathWithTransforms;
- (void)multiplyBy:(double)arg1;
- (void)setRotation:(double)arg1;
- (void)removeFromParent;
- (void)invalidateCache;
- (void)rectSizeDidChange:(id)arg1;
- (void)layerSizeDidChangeFromCorner:(long long)arg1;
- (BOOL)isPartOfClippingMask;
- (void)hideSelectionTemporarily;
@property(nonatomic) BOOL isClosed; // @dynamic isClosed;
- (void)upgradeShapes;
- (void)layerDidChange;
- (id)embedInShapeGroup;
- (void)setBooleanOperation:(long long)arg1;
- (BOOL)isNearlyEmpty;
- (struct CGPoint)relativePoint:(struct CGPoint)arg1;
- (struct CGPoint)absolutePoint:(struct CGPoint)arg1;
- (void)simplify;
- (struct CGPoint)pointCenteredAfterPointIndex:(long long)arg1;
@property(retain, nonatomic) BCBezierPath *bezierPath; // @dynamic bezierPath;
- (BOOL)handleDoubleClick;
- (id)bezierPathInRect:(struct CGRect)arg1;
- (void)adjustFrameAfterEditIntegral:(BOOL)arg1;
- (void)adjustFrameAfterEdit;
- (void)reversePath;
- (BOOL)shouldDrawSelection;
- (void)applyTransformation:(id)arg1;
- (void)flipHorizontal;
- (void)flipVertical;
- (BOOL)editable;
- (void)resetPoints;
- (void)removePathsAndReset;
- (void)closeLastPath:(BOOL)arg1;
- (id)handlerName;
- (id)defaultName;
- (void)initEmptyObject;
- (id)usedStyle;
- (id)bezierPathForHover;
- (void)drawPreviewInRect:(struct CGRect)arg1 honourSelected:(BOOL)arg2;
- (struct CGRect)boundsForCursorPreview;
- (id)bezierPathForCursorPreview;
- (id)insertionCursor;
- (BOOL)isLayerExportable;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (id)relativeRectWithExporter:(id)arg1;
- (id)addPolygonContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;
- (id)addShapeContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;

@end

@interface MSShareButtonHandler : NSObject <NSSharingServiceDelegate, NSSharingServicePickerDelegate>
{
    NSWindow *_window;	// 8 = 0x8
    MSLayer *_sliceLayer;	// 16 = 0x10
    MSContentDrawView *_canvas;	// 24 = 0x18
}

@property(retain, nonatomic) MSContentDrawView *canvas; // @synthesize canvas=_canvas;
@property(retain, nonatomic) MSLayer *sliceLayer; // @synthesize sliceLayer=_sliceLayer;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (id)imagesFromSlice:(id)arg1;
- (void)showShareMenuForLayer:(id)arg1 sender:(id)arg2 canvas:(id)arg3;

@end

@interface MSSharedLayer : _MSSharedLayer
{
}

- (id)newInstanceReplacingLayer:(id)arg1;
- (void)prepareToBecomeSharedObjectValue:(struct MSModelObject *)arg1;
- (unsigned long long)type;
- (id)newUnregisteredInstance;
- (id)newInstance;
- (id)symbol;
- (id)defaultName;

@end

@interface MSSharedLayerContainer : _MSSharedLayerContainer
{
}

- (id)layersToIterateOver;
- (void)syncInstance:(id)arg1 withTemplateInstance:(id)arg2 referenceInstance:(id)arg3;
- (BOOL)canMakeSymbolForLayers:(id)arg1;
- (id)firstNonSymbolContainerForGroup:(id)arg1;
- (BOOL)isLayerContainedByAnySymbol:(id)arg1;
- (id)sharedObjectContainingLayer:(id)arg1;
- (void)registerInstance:(id)arg1 withSharedStyle:(id)arg2;
- (unsigned long long)numberOfSymbols;
- (long long)indexOfSymbol:(id)arg1;
- (id)symbolAtIndex:(unsigned long long)arg1;
- (id)symbolWithID:(id)arg1;
- (id)symbolForInstance:(id)arg1;
- (BOOL)isSymbolForInstance:(id)arg1;
- (void)removeSymbol:(id)arg1;
- (id)mergeSymbolWithName:(id)arg1 symbolID:(id)arg2 instance:(id)arg3;
- (id)addSymbolWithName:(id)arg1 firstInstance:(id)arg2;
- (void)enumeratePotentialInstancesInLayer:(id)arg1 block:(CDUnknownBlockType)arg2;
- (Class)sharedObjectClass;

@end

@interface MSSharedLayerStyle : _MSSharedLayerStyle
{
}

- (unsigned long long)type;
- (id)newInstance;
@property(readonly, nonatomic) MSStyle *style;
- (id)defaultName;
- (void)migratePropertiesFromV23OrEarlierWithCoder:(id)arg1;

@end

@interface MSSharedLayerStyleContainer : _MSSharedLayerStyleContainer
{
    NSDictionary *_legacyLayerStylesForUpgrading;	// 8 = 0x8
}

@property(retain, nonatomic) NSDictionary *legacyLayerStylesForUpgrading; // @synthesize legacyLayerStylesForUpgrading=_legacyLayerStylesForUpgrading;
- (void).cxx_destruct;
- (void)registerInstance:(id)arg1 withSharedStyle:(id)arg2;
- (unsigned long long)numberOfSharedStyles;
- (long long)indexOfSharedStyle:(id)arg1;
- (id)sharedStyleAtIndex:(unsigned long long)arg1;
- (id)sharedStyleWithID:(id)arg1;
- (id)sharedStyleForInstance:(id)arg1;
- (BOOL)isSharedStyleForInstance:(id)arg1;
- (void)removeSharedStyle:(id)arg1;
- (id)mergeSharedStyleWithName:(id)arg1 sharedStyleID:(id)arg2 instance:(id)arg3;
- (id)addSharedStyleWithName:(id)arg1 firstInstance:(id)arg2;
- (void)enumeratePotentialInstancesInLayer:(id)arg1 block:(CDUnknownBlockType)arg2;
- (unsigned long long)validStyleType;
- (Class)sharedObjectClass;
- (void)upgradeWithDocument:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;

@end

@interface MSSharedLayerTextStyleContainer : _MSSharedLayerTextStyleContainer
{
}

- (unsigned long long)validStyleType;

@end

@interface MSSharedObject : _MSSharedObject
{
}

- (id)parentGroup;
- (void)prepareToBecomeSharedObjectValue:(struct MSModelObject *)arg1;
- (unsigned long long)type;
- (void)removeInvalidInstanceIDs:(id)arg1;
- (BOOL)isOutOfSyncWithInstance:(struct MSModelObject *)arg1;
- (id)container;
- (struct MSModelObject *)newUnregisteredInstance;
- (struct MSModelObject *)newInstance;
- (BOOL)isSharedObjectForInstance:(struct MSModelObject *)arg1;
- (void)unregisterInstance:(struct MSModelObject *)arg1;
- (void)registerInstance:(struct MSModelObject *)arg1;
- (id)defaultName;
- (void)objectDidInit;
- (id)initWithName:(id)arg1 sharedObjectID:(id)arg2 value:(struct MSModelObject *)arg3;
- (id)initWithName:(id)arg1 firstInstance:(struct MSModelObject *)arg2;

@end

@interface MSSharedObjectContainer : _MSSharedObjectContainer <MSSharedObjectContainerDelegate>
{
    id <MSSharedObjectContainerDelegate> _delegate;	// 8 = 0x8
}

@property(retain, nonatomic) id <MSSharedObjectContainerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)objectsSortedByName;
- (void)removeInvalidInstancesInLayers:(id)arg1;
- (void)enumeratePotentialInstancesInLayer:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)sharedObjectsInLayer:(id)arg1;
- (void)syncInstance:(struct MSModelObject *)arg1 withTemplateInstance:(struct MSModelObject *)arg2 referenceInstance:(struct MSModelObject *)arg3;
- (BOOL)syncSharedObjectWithInstance:(struct MSModelObject *)arg1;
- (id)layersToIterateOver;
- (void)unregisterInstance:(struct MSModelObject *)arg1;
- (void)registerInstance:(struct MSModelObject *)arg1 withSharedObject:(id)arg2;
- (unsigned long long)numberOfSharedObjects;
- (long long)indexOfSharedObject:(id)arg1;
- (id)sharedObjectAtIndex:(unsigned long long)arg1;
- (id)sharedObjectWithID:(id)arg1;
- (id)sharedObjectForInstance:(struct MSModelObject *)arg1;
- (BOOL)isSharedObjectForInstance:(struct MSModelObject *)arg1;
- (id)instancesOf:(id)arg1 inGroup:(id)arg2;
- (id)mergeSharedObjectWithName:(id)arg1 sharedObjectID:(id)arg2 instance:(struct MSModelObject *)arg3;
- (void)linkInstances:(id)arg1 fromSharedObject:(id)arg2;
- (void)unlinkInstances:(id)arg1 toSharedObject:(id)arg2;
- (void)registerUndoForUnlinkingInstances:(id)arg1 fromSharedObject:(id)arg2;
- (void)registerUndoForLinkingInstances:(id)arg1 toSharedObject:(id)arg2;
- (void)removeSharedObject:(id)arg1;
- (id)addSharedObjectWithName:(id)arg1 firstInstance:(struct MSModelObject *)arg2;
- (Class)sharedObjectClass;
- (id)rootLayersIncludingSymbols:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface MSSimpleGrid : _MSSimpleGrid
{
    NSColor *lightColor;	// 8 = 0x8
    NSColor *darkColor;	// 16 = 0x10
    double zoom;	// 24 = 0x18
}

- (void).cxx_destruct;
- (id)verticalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (id)horizontalGuidesForRulerData:(id)arg1 inRect:(struct CGRect)arg2;
- (void)drawVerticalLine:(id)arg1 atX:(double)arg2;
- (void)drawHorizontalLine:(id)arg1 atY:(double)arg2;
- (void)drawVerticalLinesInRect:(struct CGRect)arg1 baseX:(double)arg2;
- (void)drawHorizontalLinesInRect:(struct CGRect)arg1 baseY:(double)arg2;
- (void)drawInRect:(struct CGRect)arg1 baseLine:(struct CGPoint)arg2 atZoom:(double)arg3;
- (void)from:(double)arg1 doWhile:(CDUnknownBlockType)arg2 incrementBy:(double)arg3 run:(CDUnknownBlockType)arg4;
- (unsigned long long)decodingConversionForProperty:(id)arg1;

@end

@interface MSSliceDragView : NSView
{
    BOOL _previewImageIsVector;	// 152 = 0x98
    MSPage *_lightweightPageCopy;	// 160 = 0xa0
    NSImage *_previewImage;	// 168 = 0xa8
    MSSliceLayer *_sliceLayer;	// 176 = 0xb0
    NSData *_PNGData;	// 184 = 0xb8
    NSData *_PDFData;	// 192 = 0xc0
    NSData *_fileDragData;	// 200 = 0xc8
    long long _cachingCounter;	// 208 = 0xd0
    NSString *_fileDragFormat;	// 216 = 0xd8
}

@property(copy, nonatomic) NSString *fileDragFormat; // @synthesize fileDragFormat=_fileDragFormat;
@property(nonatomic) BOOL previewImageIsVector; // @synthesize previewImageIsVector=_previewImageIsVector;
@property(nonatomic) long long cachingCounter; // @synthesize cachingCounter=_cachingCounter;
@property(retain, nonatomic) NSData *fileDragData; // @synthesize fileDragData=_fileDragData;
@property(retain, nonatomic) NSData *PDFData; // @synthesize PDFData=_PDFData;
@property(retain, nonatomic) NSData *PNGData; // @synthesize PNGData=_PNGData;
@property(retain, nonatomic) MSSliceLayer *sliceLayer; // @synthesize sliceLayer=_sliceLayer;
@property(retain, nonatomic) NSImage *previewImage; // @synthesize previewImage=_previewImage;
@property(retain, nonatomic) MSPage *lightweightPageCopy; // @synthesize lightweightPageCopy=_lightweightPageCopy;
- (void).cxx_destruct;
- (void)delayedPrepareSlice:(id)arg1 size:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)prepareSlice:(id)arg1 size:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)clearCaches;
- (void)reloadWithSlice:(id)arg1 exportSize:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)reloadWithSlice:(id)arg1 exportSize:(id)arg2;
- (void)reloadWithSlice:(id)arg1;
- (struct CGRect)imageDrawRect;
- (void)drawRect:(struct CGRect)arg1;
- (void)sizeToFit;
- (void)writeToPasteboardWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSSliceExportOptions : NSViewController
{
    NSView *_optionsViewJPG;	// 104 = 0x68
    NSView *_optionsViewSaveForWeb;	// 112 = 0x70
}

+ (id)exportOptions;
@property(retain, nonatomic) NSView *optionsViewSaveForWeb; // @synthesize optionsViewSaveForWeb=_optionsViewSaveForWeb;
@property(retain, nonatomic) NSView *optionsViewJPG; // @synthesize optionsViewJPG=_optionsViewJPG;
- (void).cxx_destruct;
- (void)setExtensions:(id)arg1;

@end

@interface MSSliceExporter : NSObject
{
    BOOL _honorSaveForWebPreference;	// 8 = 0x8
    NSColorSpace *_colorSpace;	// 16 = 0x10
}

+ (id)dataForRequest:(id)arg1 colorSpace:(id)arg2 honorSaveForWeb:(BOOL)arg3;
+ (id)dataForRequest:(id)arg1 colorSpace:(id)arg2;
+ (id)dataForRequest:(id)arg1;
@property(nonatomic) BOOL honorSaveForWebPreference; // @synthesize honorSaveForWebPreference=_honorSaveForWebPreference;
@property(retain, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
- (void).cxx_destruct;
- (void)clearLayerCaches:(id)arg1;
- (id)savePanelWithDefaultFilename:(id)arg1 options:(id)arg2;
- (id)pathForSavingIndividualSlice:(id)arg1 options:(id)arg2;
- (id)openPanelWithOptions:(id)arg1;
- (id)directoryPathForSavingMultipleImagesWithOptions:(id)arg1;
- (void)displayNoSlicesWarning;
- (BOOL)warnForPossiblyOverwritingFilesWithSlices:(id)arg1 toFolder:(id)arg2;
- (void)saveSlices:(id)arg1 toFolder:(id)arg2;
- (void)exportSlice:(id)arg1;
- (void)exportSlices:(id)arg1;
- (void)writeSliceWithCurrentSettings:(id)arg1 toPathWithName:(id)arg2;
- (void)writeSlice:(id)arg1 toPathWithName:(id)arg2;
- (id)makeFilenameProperPathIfNecessary:(id)arg1;
- (id)dataForRequest:(id)arg1;

@end

@interface MSSliceLayer : _MSSliceLayer <MSLayerWithBackgroundColour>
{
    id <MSSliceLayerWatcher> _sliceWatcher;	// 56 = 0x38
}

@property(nonatomic) __weak id <MSSliceLayerWatcher> sliceWatcher; // @synthesize sliceWatcher=_sliceWatcher;
- (void).cxx_destruct;
- (BOOL)canRotate;
- (BOOL)isLayerExportable;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (id)inspectorViewControllerNames;
- (BOOL)canBeSelectedOnCanvas;
- (BOOL)canBeTransformed;
- (void)setName:(id)arg1;
- (void)prepareObjectCopy:(id)arg1;
- (void)initEmptyObject;
- (void)drawPreviewInRect:(struct CGRect)arg1 honourSelected:(BOOL)arg2;
- (id)defaultName;
- (BOOL)shouldConvertArrayPropertyWithName:(id)arg1;
- (void)migratePropertiesFromV22OrEarlierWithCoder:(id)arg1;

// Remaining properties
@property(nonatomic) BOOL hasBackgroundColor;

@end

@interface MSSliceLayerSection : MSLayerSection <NSTableViewDelegate, NSTableViewDataSource, NSTextFieldDelegate, NSSharingServicePickerDelegate, NSSharingServiceDelegate>
{
    NSMatrix *_includeOptions;	// 112 = 0x70
    NSTableView *_tableView;	// 120 = 0x78
    NSButton *_exportSingleSliceButton;	// 128 = 0x80
    NSButton *_trimCheckbox;	// 136 = 0x88
    NSButton *_shareButton;	// 144 = 0x90
    MSSliceDragView *_sliceDragView;	// 152 = 0x98
    NSMutableArray *_possiblyIncludedLayers;	// 160 = 0xa0
}

@property(retain, nonatomic) NSMutableArray *possiblyIncludedLayers; // @synthesize possiblyIncludedLayers=_possiblyIncludedLayers;
@property(retain, nonatomic) MSSliceDragView *sliceDragView; // @synthesize sliceDragView=_sliceDragView;
@property(retain, nonatomic) NSButton *shareButton; // @synthesize shareButton=_shareButton;
@property(retain, nonatomic) NSButton *trimCheckbox; // @synthesize trimCheckbox=_trimCheckbox;
@property(retain, nonatomic) NSButton *exportSingleSliceButton; // @synthesize exportSingleSliceButton=_exportSingleSliceButton;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSMatrix *includeOptions; // @synthesize includeOptions=_includeOptions;
- (void).cxx_destruct;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)currentView;
- (id)imagesFromSlice:(id)arg1;
- (void)shareAction:(id)arg1;
- (void)prepareShareButton;
- (void)trimBoxChecked:(id)arg1;
- (id)prefixForLayer:(id)arg1;
- (id)layerAtIndex:(long long)arg1;
- (id)includedLayersForSlice:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (id)firstSlice;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)calculatePossiblyIncludedLayers:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (id)init;

@end

@interface MSSliceMaker : NSObject
{
}

+ (void)configureSliceOptions:(id)arg1 forLayer:(id)arg2;
+ (id)sliceFromExportSize:(id)arg1 layer:(id)arg2 inRect:(struct CGRect)arg3;
+ (id)slicesFromExportableLayer:(id)arg1 sizes:(id)arg2 inRect:(struct CGRect)arg3;
+ (id)slicesFromExportableLayer:(id)arg1 inRect:(struct CGRect)arg2;
+ (id)slicesFromExportableLayer:(id)arg1 sizes:(id)arg2;
+ (id)slicesFromExportableLayer:(id)arg1;

@end

@interface MSSliceTrimming : NSObject
{
}

+ (struct CGRect)simpleSafeRectForSlice:(id)arg1;
+ (struct CGRect)safeRectForSlice:(id)arg1;
+ (id)basicSliceFromLayer:(id)arg1;
+ (struct CGRect)_trimmedRectForSlice:(id)arg1;
+ (struct CGRect)rect:(struct CGRect)arg1 forLayer:(id)arg2 adjustedForRoot:(id)arg3;
+ (struct CGRect)trimmedRectForSlice:(id)arg1;
+ (void)trimSlice:(id)arg1 toFitLayers:(id)arg2;

@end

@interface MSSmallButtonCell : NSButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSSmartRotateAction : MSProAction
{
}

- (id)label;
- (BOOL)isSelectable;
- (BOOL)validate;
- (void)performAction:(id)arg1;
- (void)smartRotate:(id)arg1;

@end

@interface MSSmartRotateEventHandler : MSEventHandler
{
    struct CGPoint rotationCenter;	// 128 = 0x80
    BOOL hasRotationCenterSelected;	// 144 = 0x90
    unsigned long long _numberOfRepetitions;	// 152 = 0x98
    NSArray *_shapeLayers;	// 160 = 0xa0
    NSArray *_shapeLayersCopies;	// 168 = 0xa8
}

@property(copy, nonatomic) NSArray *shapeLayersCopies; // @synthesize shapeLayersCopies=_shapeLayersCopies;
@property(copy, nonatomic) NSArray *shapeLayers; // @synthesize shapeLayers=_shapeLayers;
@property(nonatomic) unsigned long long numberOfRepetitions; // @synthesize numberOfRepetitions=_numberOfRepetitions;
- (void).cxx_destruct;
- (BOOL)shouldDrawLayerSelection;
- (id)imageName;
- (id)toolbarIdentifier;
- (void)dealloc;
- (void)willUndo:(id)arg1;
- (void)unregisterUndoObserver;
- (void)registerUndoObserver;
- (double)rotationForRepetitionAtIndex:(unsigned long long)arg1;
- (void)drawControlPoints;
- (void)drawInRect:(struct CGRect)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (struct CGPoint)tryToSnapPoint:(struct CGPoint)arg1 toMid:(struct CGPoint)arg2;
- (void)rotateCopies;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (id)currentGroup;
- (void)adjustGroup;
- (id)transformForRotatingShape:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)adjustFrameForShapeCopy:(id)arg1 shape:(id)arg2 index:(unsigned long long)arg3;
- (void)adjustBooleanOperationForShapeCopyIfNecessary:(id)arg1;
- (void)adjustRotationForShapeCopy:(id)arg1 atIndex:(unsigned long long)arg2 baseRotation:(double)arg3;
- (void)rotateCopy:(id)arg1 ofShape:(id)arg2 toIndex:(unsigned long long)arg3;
- (void)rotateCopiesForShape:(id)arg1 shapeIndex:(unsigned long long)arg2;
- (void)handlerWillLoseFocus;
- (void)determineOriginalRotationCenter;
- (void)createShapeCopies;
- (void)findShapes;
- (void)handlerGotFocus;

@end

@interface MSSmartRotateSheet : CHSheetController
{
    long long numberOfCopies;	// 80 = 0x50
    NSTextField *explanationLabel;	// 88 = 0x58
}

@property(nonatomic) long long numberOfCopies; // @synthesize numberOfCopies;
- (void).cxx_destruct;
- (id)doc;
- (void)setNilValueForKey:(id)arg1;
- (void)confirm:(id)arg1;
- (void)cancel:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSSnapHelperMethods : NSObject
{
}

+ (void)_drawBorderBarsForHeightOfRect:(struct CGRect)arg1 zoom:(double)arg2;
+ (void)_drawArrowsForHeightOfRect:(struct CGRect)arg1 zoom:(double)arg2;
+ (void)_drawLabelWithAmount:(long long)arg1 forHeightOfRect:(struct CGRect)arg2 zoom:(double)arg3;
+ (void)drawHeightOfRectInRect:(struct CGRect)arg1 amount:(long long)arg2 borderbars:(BOOL)arg3 zoom:(double)arg4;
+ (void)_drawBorderBarsForWidthOfRect:(struct CGRect)arg1 zoom:(double)arg2;
+ (void)_drawArrowsForWidthOfRect:(struct CGRect)arg1 zoom:(double)arg2;
+ (void)_drawLabelWithAmount:(long long)arg1 forWidthOfRect:(struct CGRect)arg2 zoom:(double)arg3;
+ (void)drawWidthOfRectInRect:(struct CGRect)arg1 amount:(long long)arg2 borderbars:(BOOL)arg3 zoom:(double)arg4;
+ (void)drawHeightOfFrameBesidesFrame:(struct CGRect)arg1 zoom:(double)arg2 borderBars:(BOOL)arg3;
+ (void)drawWidthOfFrameAboveFrame:(struct CGRect)arg1 zoom:(double)arg2 borderBars:(BOOL)arg3;
+ (id)snapColor;

@end

@interface MSSourceListView : PXListView
{
}

- (void)rightMouseUp:(id)arg1;
- (id)menuForEvent:(id)arg1;

@end

@interface MSSpiralShape : _MSSpiralShape
{
}

- (void)resetPoints;
- (id)defaultName;
- (void)initEmptyObject;
- (unsigned long long)decodingConversionForProperty:(id)arg1;

@end

@interface MSSpiralShapeAction : MSBaseShapeAction
{
}

- (void)spiralShape:(id)arg1;

@end

@interface MSSplitAction : MSBaseAction
{
}

- (id)imageName;
- (BOOL)validate;
- (void)splitGroup:(id)arg1;
- (void)performAction:(id)arg1;
- (void)split:(id)arg1;

@end

@interface MSSplitView : NSSplitView
{
}

- (void)drawDividerInRect:(struct CGRect)arg1;
- (double)dividerThickness;

@end

@interface MSSplitViewDelegate : NSObject <NSSplitViewDelegate>
{
    NSSplitView *splitView;	// 8 = 0x8
    NSWindow *window;	// 16 = 0x10
    long long leftSide;	// 24 = 0x18
    long long rightSide;	// 32 = 0x20
    BOOL isInVersionBrowser;	// 40 = 0x28
    NSView *savedInspectorView;	// 48 = 0x30
    NSView *layerListView;	// 56 = 0x38
    NSView *canvasView;	// 64 = 0x40
    NSView *inspectorView;	// 72 = 0x48
}

@property(nonatomic) __weak NSView *inspectorView; // @synthesize inspectorView;
@property(nonatomic) __weak NSView *canvasView; // @synthesize canvasView;
@property(nonatomic) __weak NSView *layerListView; // @synthesize layerListView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)didExitVersionBrowser;
- (void)didEnterVersionBrowser;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)dividerIndexBelongsToInspectorView:(long long)arg1;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (void)awakeFromNib;

@end

@interface MSSquareButtonCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSStackView : NSView
{
    long long _maximumHeight;	// 152 = 0x98
    NSColor *_backgroundColor;	// 160 = 0xa0
    id _keyResponder;	// 168 = 0xa8
}

@property(nonatomic) __weak id keyResponder; // @synthesize keyResponder=_keyResponder;
@property(retain, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) long long maximumHeight; // @synthesize maximumHeight=_maximumHeight;
- (void).cxx_destruct;
- (void)keyDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)adjustHeight:(unsigned long long)arg1 hasScrollViews:(BOOL)arg2;
- (unsigned long long)doStack;
- (long long)totalRequiredHeight;
- (BOOL)adjustScrollViewsToFitMaximumHeight;
- (void)stack:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSStackViewScrollView : NSScrollView
{
}

- (void)setFrame:(struct CGRect)arg1;

@end

@interface MSStackViewSeparatorView : NSView
{
}

+ (id)tallSeparator;
+ (id)separator;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSStandardRendererDelegate : NSObject <MSRenderingContextDelegate>
{
}

+ (id)sharedController;
- (BOOL)rendererShouldInterruptRendering;
- (BOOL)rendererNeedsToDrawRect:(struct CGRect)arg1;
- (BOOL)rendererShouldSkipDrawingLayer:(id)arg1;
- (BOOL)rendererShouldForceDrawingLayer:(id)arg1;

@end

@interface MSStarShape : _MSStarShape <NSCoding>
{
}

- (BOOL)shouldResetPointsOnResize;
- (id)inspectorViewControllers;
- (void)resetPoints;
- (id)defaultName;
- (struct CGRect)boundsForCursorPreview;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;

@end

@interface MSStarShapeAction : MSBaseShapeAction
{
}

- (void)starShape:(id)arg1;

@end

@interface MSStatsSubmitter : NSObject
{
}

+ (void)saveSubmission:(id)arg1;
+ (BOOL)shouldSubmit:(id)arg1;
+ (void)submitOS:(id)arg1 version:(id)arg2;
+ (void)getOS:(id *)arg1 version:(id *)arg2;
+ (void)submit;

@end

@interface MSStrokeWidthAction : MSEventHandlerAction
{
}

- (BOOL)showInToolbar;
- (id)tooltip;
- (BOOL)validate;
- (void)strokeWidth:(id)arg1;

@end

@interface MSStrokeWidthEventHandler : MSEventHandler
{
    MSShapeGroup *_shape;	// 128 = 0x80
    unsigned long long _selectedHandle;	// 136 = 0x88
    long long _selectedHandleSide;	// 144 = 0x90
}

@property(nonatomic) long long selectedHandleSide; // @synthesize selectedHandleSide=_selectedHandleSide;
@property(nonatomic) unsigned long long selectedHandle; // @synthesize selectedHandle=_selectedHandle;
@property(retain, nonatomic) MSShapeGroup *shape; // @synthesize shape=_shape;
- (void).cxx_destruct;
- (BOOL)shouldDrawLayerSelection;
- (void)drawInRect:(struct CGRect)arg1;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (void)delete:(id)arg1;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (double)positionOfPoint:(struct CGPoint)arg1 onPath:(id)arg2;
- (void)handlerWillLoseFocus;
- (void)handlerGotFocus;

@end

@interface MSStyle : _MSStyle <NSCoding, MSStylePartDelegate, MSSharedObjectInstance, NSCopying>
{
    id <MSStyleDelegate> _delegate;	// 8 = 0x8
}

+ (id)layerStyles;
@property(nonatomic) __weak id <MSStyleDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (double)thickestOuterStroke;
- (double)thickestInnerStroke;
- (BOOL)hasTextStyle;
- (unsigned long long)type;
- (id)parentStyle;
- (id)parentLayer;
- (BOOL)hasActiveBackgroundBlur;
- (BOOL)supportsAdvancedBorderSettings;
- (void)multiplyBy:(double)arg1;
- (void)prepareObjectCopy:(id)arg1;
- (id)outlineStrokePath:(id)arg1;
- (id)renderBitmapEffects:(id)arg1;
- (BOOL)hasBitmapStylesEnabled;
- (void)handleLightweightObjectChangeForKey:(id)arg1 sender:(id)arg2;
- (void)setTextStyle:(id)arg1;
- (void)layerStyleDidChange;
- (void)setNilValueForKey:(id)arg1;
- (BOOL)hasBlending;
- (id)firstEnabledInnerShadow;
- (id)firstEnabledShadow;
- (id)enabledStyleParts:(id)arg1;
- (id)enabledInnerShadows;
- (id)enabledShadows;
- (id)enabledBorders;
- (id)enabledFills;
- (BOOL)hasEnabledBorder;
- (BOOL)hasEnabledFill;
- (BOOL)hasEnabledShadow;
@property(readonly, nonatomic) MSStyleShadow *innerShadow; // @dynamic innerShadow;
@property(readonly, nonatomic) MSStyleShadow *shadow; // @dynamic shadow;
@property(retain, nonatomic) MSStyleFill *fill;
@property(retain, nonatomic) MSStyleBorder *border;
- (void)readInnerShadowsFromCoder:(id)arg1;
- (void)initFromPreAKWithCoder:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (unsigned long long)maxLevels;
- (void)addSVGFilterAttributes:(id)arg1 exporter:(id)arg2;
- (id)filtersForBlur:(id)arg1 exporter:(id)arg2;
- (id)filtersForShadow:(id)arg1 exporter:(id)arg2 isInner:(BOOL)arg3 index:(unsigned long long)arg4;
- (void)addSVGAttributes:(id)arg1 forExporter:(id)arg2 level:(unsigned long long)arg3 defaultNone:(BOOL)arg4;
- (id)itemFromCollection:(id)arg1 atLevel:(unsigned long long)arg2;

// Remaining properties
@property(retain, nonatomic) NSString *sharedObjectID;

@end

@interface MSStyleBasicFill : _MSStyleBasicFill
{
}

+ (id)defaultFillColor;
- (id)initWithCoder:(id)arg1;
- (void)initEmptyObject;

@end

@interface MSStyleBlur : _MSStyleBlur
{
}

- (void)multiplyBy:(double)arg1;
- (double)cropRadius;
- (id)renderBitmapEffects:(id)arg1;
- (void)setDecodedValue:(id)arg1 forKey:(id)arg2;

@end

@interface MSStyleBorder : _MSStyleBorder
{
}

+ (id)defaultFillColor;
- (void)setThickness:(double)arg1;
- (BOOL)supportsAdvancedBorderSettings;
- (void)multiplyBy:(double)arg1;
- (long long)patternFillType;
- (double)noiseIntensity;
- (id)defaultName;
- (void)initEmptyObject;
- (id)CSSAttributeString;
- (void)drawGradientBorder:(id)arg1 originalPath:(id)arg2 isArtistic:(BOOL)arg3 frame:(struct CGRect)arg4 context:(id)arg5;
- (BOOL)canDrawInnerStrokeForInnerPath:(id)arg1;
- (BOOL)canDrawInnerStrokeForPath:(id)arg1;
- (void)drawBorder:(id)arg1 advancedOptions:(id)arg2 context:(id)arg3;
- (void)addSVGAttributes:(id)arg1 forExporter:(id)arg2;

@end

@interface MSStyleBorderOptions : _MSStyleBorderOptions
{
}

- (BOOL)supportsAdvancedBorderSettings;
- (BOOL)shouldConvertArrayPropertyWithName:(id)arg1;
- (void)addSVGAttributes:(id)arg1 forExporter:(id)arg2;

@end

@interface MSStyleColorControls : _MSStyleColorControls
{
}

- (id)renderBitmapEffects:(id)arg1;

@end

@interface MSStyleFill : _MSStyleFill
{
    double _lightweightParentLayerCachedOpacity;	// 8 = 0x8
}

+ (id)defaultFillColor;
@property(nonatomic) double lightweightParentLayerCachedOpacity; // @synthesize lightweightParentLayerCachedOpacity=_lightweightParentLayerCachedOpacity;
- (BOOL)hasOpacity;
- (id)initWithCoder:(id)arg1;
- (void)setPatternTileScale:(double)arg1;
- (void)setPatternImage:(id)arg1;
- (id)defaultName;
- (void)initEmptyObject;
- (id)CSSAttributeString;
- (id)transformDecodedObjectIfNecessary:(id)arg1 key:(id)arg2;
- (void)addSVGAttributes:(id)arg1 forExporter:(id)arg2;

@end

@interface MSStyleFillRenderer : MSBaseRenderer
{
    BOOL _hasInnerStroke;	// 8 = 0x8
    MSRenderingContext *_context;	// 16 = 0x10
    MSStyleFill *_fill;	// 24 = 0x18
    BCBezierPath *_path;	// 32 = 0x20
    long long _fillIndex;	// 40 = 0x28
    double _zoomValue;	// 48 = 0x30
    struct CGRect _rect;	// 56 = 0x38
}

+ (void)drawFill:(id)arg1 forPath:(id)arg2 atIndex:(long long)arg3 inRect:(struct CGRect)arg4 hasInnerStroke:(BOOL)arg5 context:(id)arg6;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(nonatomic) BOOL hasInnerStroke; // @synthesize hasInnerStroke=_hasInnerStroke;
@property(nonatomic) long long fillIndex; // @synthesize fillIndex=_fillIndex;
@property(retain, nonatomic) BCBezierPath *path; // @synthesize path=_path;
@property(retain, nonatomic) MSStyleFill *fill; // @synthesize fill=_fill;
@property(retain, nonatomic) MSRenderingContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)drawPatternStretch;
- (void)prepareAlphaForContext:(struct CGContext *)arg1;
- (void)drawCGImageTile:(struct CGImage *)arg1;
- (struct CGImage *)CGImageForPatternTile;
- (void)drawPatternTile;
- (void)drawNoise;
- (void)drawPatternFill;
- (void)drawGradientFill;
- (void)drawColorFill;
- (long long)graphicsSettings;
- (void)render;

@end

@interface MSStyleImageRenderer : MSStyleRenderer
{
    BOOL _treatAsAlpha;	// 8 = 0x8
    MSBitmapLayer *_bitmapLayer;	// 16 = 0x10
}

+ (void)drawBitmapLayer:(id)arg1 context:(id)arg2 inRect:(struct CGRect)arg3;
@property(nonatomic) BOOL treatAsAlpha; // @synthesize treatAsAlpha=_treatAsAlpha;
@property(retain, nonatomic) MSBitmapLayer *bitmapLayer; // @synthesize bitmapLayer=_bitmapLayer;
- (void).cxx_destruct;
- (id)flipTransform;
- (void)drawNineSliceImage;
- (void)drawImage;
- (void)drawImageFills;
- (void)doDrawImage;
- (void)render;

@end

@interface MSStyleInnerShadow : _MSStyleInnerShadow
{
}

- (BOOL)colorEqualApproximately;
- (BOOL)isDefaultInnerShadow;
- (void)initEmptyObject;
- (id)CSSAttributeString;
- (void)_drawShadowForPath:(id)arg1 type:(unsigned long long)arg2 strokeType:(long long)arg3 fillShouldClip:(BOOL)arg4 lineWidth:(double)arg5 context:(id)arg6;

@end

@interface MSStylePart : _MSStylePart <NSCoding, NSCopying>
{
}

- (id)parentLayer;
- (id)parentStyle;
- (void)multiplyBy:(double)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)transformDecodedObjectIfNecessary:(id)arg1 key:(id)arg2;

@end

@interface MSStylePartCollection : MSArray
{
}

- (id)stylePartForInserting;
- (id)addNewStylePart;
- (void)moveStylePartFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)removeStylePartAtIndex:(unsigned long long)arg1;
- (void)removeStylePart:(id)arg1;
- (id)parentStyle;

@end

@interface MSStylePartInspectorViewController : CHViewController <NSPopoverDelegate, MSSectionProtocol, NSWindowDelegate, BCPopoverDelegate, MSColorInspectorDelegate>
{
    NSView *nameView;	// 104 = 0x68
    NSArray *_styleParts;	// 112 = 0x70
    NSArrayController *_arrayController;	// 120 = 0x78
    id <MSStylePartInspectorDelegate> _delegate;	// 128 = 0x80
    MSColorPreviewButton *_colorPickerButton;	// 136 = 0x88
    BCPopover *_popover;	// 144 = 0x90
}

+ (id)reusableControllerArray;
+ (id)stylePartViewController;
@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) MSColorPreviewButton *colorPickerButton; // @synthesize colorPickerButton=_colorPickerButton;
@property(nonatomic) __weak id <MSStylePartInspectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
@property(retain, nonatomic) NSArray *styleParts; // @synthesize styleParts=_styleParts;
- (void).cxx_destruct;
- (void)reloadInspectorStack:(id)arg1;
- (id)views;
- (void)didGetAddedToInspector;
- (BOOL)hasEnabledStyle;
- (void)prepare;
- (void)dealloc;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)fitScrollViewToParent;
- (void)popoverWillClose:(id)arg1;
- (void)checkBoxAction:(id)arg1;
- (BOOL)popoverShouldCloseWhenOtherPopoverOpens:(id)arg1 otherPopover:(id)arg2;
- (void)moveInspectorToFitColorPopoverIfNecessary:(id)arg1;
- (void)popoverWindowSizeDidChange:(id)arg1;
- (void)previewCellAction:(id)arg1;
- (void)awakeFromNib;
- (id)initWithDelegate:(id)arg1;
- (id)init;
- (void)prepareForReuse;

@end

@interface MSStylePathRenderer : MSStyleRenderer
{
}

+ (void)drawPath:(id)arg1 forStyle:(id)arg2 inRect:(struct CGRect)arg3 fallbackColor:(id)arg4 context:(id)arg5;
- (long long)shadowStrokeType;
- (unsigned long long)shadowDrawingType;
- (void)drawInnerShadow;
- (BOOL)shadowFillShouldClip;
- (void)drawShadows;
- (void)clipFillsInBlock:(CDUnknownBlockType)arg1;
- (void)drawFillWithFallbackColor:(id)arg1;
- (void)renderWithFallbackColor:(id)arg1;

@end

@interface MSStyleReflection : _MSStyleReflection
{
}

- (void)initEmptyObject;
- (id)invertTransformForRect:(double)arg1;
- (void)drawReflectionForRect:(struct CGRect)arg1 flipPoint:(double)arg2 context:(id)arg3 drawingCommand:(CDUnknownBlockType)arg4;
- (void)drawReflectionForRect:(struct CGRect)arg1 context:(id)arg2 drawingCommand:(CDUnknownBlockType)arg3;

@end

@interface MSStyleRenderer : MSBaseRenderer
{
    BCBezierPath *_path;	// 8 = 0x8
    MSStyle *_style;	// 16 = 0x10
    MSRenderingContext *_context;	// 24 = 0x18
    struct CGRect _rect;	// 32 = 0x20
}

@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(retain, nonatomic) MSRenderingContext *context; // @synthesize context=_context;
@property(retain, nonatomic) MSStyle *style; // @synthesize style=_style;
@property(retain, nonatomic) BCBezierPath *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (BOOL)artisticStrokeIsActive;
- (void)drawBorders;
- (void)applyDashPatternToBezierPath;
- (void)drawFills;
- (BOOL)shouldSkipDrawingShadow:(id)arg1;
- (BOOL)shouldAdvancedClipToAvoidOuterStrokeStrokeBleed;
- (BOOL)shouldAdvancedClipToAvoidInnerStrokeBleed;
- (id)clipPathForOuterStroke;
- (void)addClipForBlock:(CDUnknownBlockType)arg1;

@end

@interface MSStyleShadow : _MSStyleShadow
{
}

- (void)setOffsetY:(double)arg1;
- (void)setOffsetX:(double)arg1;
- (void)setBlurRadius:(double)arg1;
- (void)setSpread:(double)arg1;
- (BOOL)isDefaultShadow;
- (BOOL)isDefaultGlow;
- (void)multiplyBy:(double)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (void)initEmptyObject;
- (id)CSSAttributeString;
- (id)transformDecodedObjectIfNecessary:(id)arg1 key:(id)arg2;
- (void)initLegacyWithCoder:(id)arg1;
- (id)shadowForContext:(id)arg1;
- (void)restoreBlendingWithContext:(id)arg1;
- (void)prepareForBlendingWithContext:(id)arg1;
- (void)_drawShadowForPath:(id)arg1 type:(unsigned long long)arg2 strokeType:(long long)arg3 fillShouldClip:(BOOL)arg4 lineWidth:(double)arg5 context:(id)arg6;
- (void)drawShadowForPath:(id)arg1 type:(unsigned long long)arg2 strokeType:(long long)arg3 fillShouldClip:(BOOL)arg4 lineWidth:(double)arg5 context:(id)arg6;

@end

@interface MSStyleTextRenderer : MSStyleRenderer
{
}

+ (void)drawTextLayoutManager:(id)arg1 style:(id)arg2 atPoint:(struct CGPoint)arg3 inFrame:(struct CGRect)arg4 context:(id)arg5;
- (void)drawBorderForLayoutManager:(id)arg1 atPoint:(struct CGPoint)arg2;
- (struct CGPoint)originForDrawingLayoutManager:(id)arg1;
- (struct CGRect)boundingRectForDrawingTextInOriginalRect;
- (void)drawLayoutManager:(id)arg1 style:(id)arg2 aPoint:(struct CGPoint)arg3;
- (void)_renderWithLayoutManager:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)renderWithLayoutManager:(id)arg1 atPoint:(struct CGPoint)arg2;

@end

@interface MSStyledLayer : _MSStyledLayer <MSStyleDelegate>
{
    BOOL ignoreStyleDidChangeNotifications;	// 56 = 0x38
}

- (void)setStyle:(id)arg1;
- (id)usedStyle;
- (id)layersSharingStyle:(id)arg1;
- (id)renderBitmapEffects:(id)arg1;
- (BOOL)shouldRenderInTransparencyLayer;
- (BOOL)hasActiveBackgroundBlur;
- (BOOL)hasBitmapStylesEnabled;
- (BOOL)calculateHasBlendedLayer;
- (void)multiplyBy:(double)arg1;
- (void)layerStyleDidChange;
- (BOOL)shouldDrawArtisticStrokeForPath:(id)arg1;
- (id)outlineStrokePath:(id)arg1;
- (void)changeColor:(id)arg1;
- (struct CGRect)dirtyRectForRect:(struct CGRect)arg1;
- (struct CGRect)calculateRectByAccountingForStyleSize:(struct CGRect)arg1;
- (struct CGRect)baseRectByAccountingForStyleSize:(struct CGRect)arg1;
- (void)objectDidInit;
- (id)appendShadowAttributesToString:(id)arg1;
- (id)CSSAttributes;
- (id)previewFillColor:(BOOL)arg1;
- (id)previewBorderColor:(BOOL)arg1;
- (void)addGradientsToDocument:(id)arg1;

@end

@interface MSStyledLayerCachedInsets : NSObject
{
    double _top;	// 8 = 0x8
    double _left;	// 16 = 0x10
    double _bottom;	// 24 = 0x18
    double _right;	// 32 = 0x20
}

@property(nonatomic) double right; // @synthesize right=_right;
@property(nonatomic) double bottom; // @synthesize bottom=_bottom;
@property(nonatomic) double left; // @synthesize left=_left;
@property(nonatomic) double top; // @synthesize top=_top;

@end

@interface MSSubtractAction : MSBaseBooleanAction
{
}

- (void)performAction:(id)arg1;
- (void)booleanSubtract:(id)arg1;

@end

@interface MSSwitchModeButtonCell : NSButtonCell
{
}

- (void)drawSelectionBackgroundInRect:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSSymbolPreviewGenerator : NSObject
{
}

+ (id)renderInstanceOnTempPage:(id)arg1 ofSize:(struct CGSize)arg2;
+ (void)generateImageForSymbol:(id)arg1 imageSize:(struct CGSize)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface MSTabbedModePickerView : MSModePickerView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setPickerMode:(long long)arg1;

@end

@interface MSTextFieldKeyEventForwarder : MSUpDownTextField <NSTextDelegate>
{
}

- (id)keyEventFromString:(id)arg1;
- (void)sendKeyEventFromString:(id)arg1;
- (id)findCanvasView;
- (BOOL)addedTextContainsOnlyDigits:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;

@end

@interface MSTextFieldKeyEventForwarderMini : MSTextFieldKeyEventForwarder
{
}

- (double)incrementValue;

@end

@interface MSTextFieldKeyEventForwarderNano : MSTextFieldKeyEventForwarder
{
}

- (double)incrementValue;

@end

@interface MSTextLabelForUpDownField : NSTextField
{
    BOOL didMouseDown;	// 200 = 0xc8
    BOOL shouldOpenUndoGroupOnNextDrag;	// 201 = 0xc9
    BOOL hasOpenedUndoGroupOnDrag;	// 202 = 0xca
    double valueAtMouseDown;	// 208 = 0xd0
    struct CGPoint mouseDownLocation;	// 216 = 0xd8
    NSTextField<MSUpDownProtocol> *_upDownTextField;	// 232 = 0xe8
    NSArray *_textFields;	// 240 = 0xf0
}

@property(copy, nonatomic) NSArray *textFields; // @synthesize textFields=_textFields;
@property(nonatomic) __weak NSTextField<MSUpDownProtocol> *upDownTextField; // @synthesize upDownTextField=_upDownTextField;
- (void).cxx_destruct;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (BOOL)canScrub;
- (void)mouseDown:(id)arg1;
- (id)textField;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)awakeFromNib;
- (id)advancedUndoManager;

@end

@interface MSTextLayer : _MSTextLayer <NSTextStorageDelegate>
{
    NSLayoutManager *layout;	// 56 = 0x38
    NSTextContainer *container;	// 64 = 0x40
    BOOL isEditingText;	// 72 = 0x48
    int ignoreDelegateNotificationsCounter;	// 76 = 0x4c
    long long heightBeforeResizing;	// 80 = 0x50
    NSTextStorage *storageBeforeDragging;	// 88 = 0x58
    NSBezierPath *cachedBezierRepresentation;	// 96 = 0x60
    struct CGRect previousRectCache;	// 104 = 0x68
    id <MSTextLayerEditingDelegate> _editingDelegate;	// 136 = 0x88
    NSBezierPath *_lightweightFirstUnderlyingShapePath;	// 144 = 0x90
    double _lightweightFontSize;	// 152 = 0x98
}

@property(nonatomic) double lightweightFontSize; // @synthesize lightweightFontSize=_lightweightFontSize;
@property(retain, nonatomic) NSBezierPath *lightweightFirstUnderlyingShapePath; // @synthesize lightweightFirstUnderlyingShapePath=_lightweightFirstUnderlyingShapePath;
@property(nonatomic) id <MSTextLayerEditingDelegate> editingDelegate; // @synthesize editingDelegate=_editingDelegate;
@property(readonly, nonatomic) long long heightBeforeResizing; // @synthesize heightBeforeResizing;
@property(copy, nonatomic) NSTextStorage *storageBeforeDragging; // @synthesize storageBeforeDragging;
@property(nonatomic) struct CGRect previousRectCache; // @synthesize previousRectCache;
@property(retain, nonatomic) NSBezierPath *cachedBezierRepresentation; // @synthesize cachedBezierRepresentation;
- (void).cxx_destruct;
- (BOOL)constrainProportions;
- (id)usedFontNames;
- (void)drawHoverWithZoom:(double)arg1;
- (void)resizeToFitNewWidthComingFrom:(double)arg1;
- (void)resizeTextToFitNewHeight:(long long)arg1;
- (void)replaceTextStorageTextBy:(id)arg1;
- (void)makeLowercase:(id)arg1;
- (void)makeUppercase:(id)arg1;
- (void)multiplyBy:(double)arg1;
- (id)attributeForKey:(id)arg1;
- (void)addAttribute:(id)arg1 value:(id)arg2;
- (void)addAttributes:(id)arg1 forRange:(struct _NSRange)arg2;
- (void)setAttributes:(id)arg1 forRange:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 forRange:(struct _NSRange)arg3;
- (void)ignoreDelegateNotificationsInBlock:(CDUnknownBlockType)arg1;
- (id)inspectorViewControllerNames;
@property(copy, nonatomic) NSString *stringValue; // @dynamic stringValue;
- (BOOL)isFrameEqualForSync:(id)arg1;
- (BOOL)textStorageIsEqual:(id)arg1;
- (void)syncTextStorageTo:(id)arg1;
- (void)copyTextStorageTo:(id)arg1;
- (void)prepareObjectCopy:(id)arg1;
- (void)layerStyleDidChange;
- (BOOL)isEmpty;
- (BOOL)shouldUseCachedBezierRepresentation;
- (void)changeColor:(id)arg1;
@property(copy, nonatomic) NSDictionary *styleAttributes; // @dynamic styleAttributes;
- (void)setNilValueForKey:(id)arg1;
@property(copy, nonatomic) MSColor *textColor; // @dynamic textColor;
@property(nonatomic) double lineSpacing; // @dynamic lineSpacing;
- (double)baseLineHeight;
@property(nonatomic) double characterSpacing; // @dynamic characterSpacing;
@property(retain, nonatomic) NSString *fontPostscriptName; // @dynamic fontPostscriptName;
- (void)setFont:(id)arg1;
@property(nonatomic) double fontSize; // @dynamic fontSize;
- (void)changeTextColorTo:(id)arg1;
@property(nonatomic) unsigned long long textAlignment; // @dynamic textAlignment;
- (void)setLeading:(double)arg1;
- (double)leading;
- (id)paragraphStyle;
- (void)setKerning:(float)arg1;
- (float)kerning;
- (struct CGRect)dirtyRectForBounds;
- (void)markLayerDirtyOfType:(unsigned long long)arg1;
- (void)recordRelativeRect;
- (id)_bezierPathInBounds;
- (id)_bezierPath;
- (id)bezierPath;
- (id)bezierPathWithTransforms;
- (double)startingPositionOnPath:(id)arg1;
- (double)defaultLineHeight;
- (id)font;
- (void)changeFont:(id)arg1;
- (id)handlerName;
- (BOOL)shouldDrawSelection;
- (unsigned long long)selectionCornerMask;
- (struct CGRect)affectedFrameOfLayer;
- (id)layoutManager;
- (id)firstUnderlyingShape;
- (void)setIsEditingText:(BOOL)arg1;
- (BOOL)isEditingText;
- (void)prepareForUndo;
- (void)setStorageContents:(id)arg1;
- (id)container;
- (void)adjustFrameToFit;
- (void)finishEditing;
- (void)startEditing;
- (void)refreshForPropertyChanged:(id)arg1;
- (void)textStorageDidProcessEditing:(id)arg1;
- (void)syncTextStyleAttributes;
- (struct CGSize)textContainerSize;
- (id)createTextContainer;
- (id)createLayoutManager;
- (void)recreateTextObjects;
- (void)setUpText;
- (void)rectWidthDidChange:(id)arg1;
- (void)layerSizeDidChangeFromCorner:(long long)arg1;
- (void)setContainerSize:(struct CGSize)arg1;
- (void)adjustContainerWidthTo:(double)arg1;
- (void)setupBehaviour:(BOOL)arg1;
- (void)setTextBehaviour:(long long)arg1;
- (id)defaultName;
- (void)sanityCheckText;
- (void)setStyle:(id)arg1;
- (void)initObjectWithCoder:(id)arg1;
- (void)objectDidInit;
- (void)initEmptyObject;
- (id)initWithFrame:(struct CGRect)arg1 attributes:(id)arg2 type:(long long)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)CSSAttributes;
- (void)drawPreviewInRect:(struct CGRect)arg1 honourSelected:(BOOL)arg2;
- (BOOL)shouldRenderInTransparencyLayer;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (void)migratePropertiesFromV30OrEarlierWithCoder:(id)arg1;
- (void)migratePropertiesFromV34OrEarlierWithCoder:(id)arg1;
- (void)initLegacyWithCoder:(id)arg1;
- (Class)rendererClass;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;
- (id)elementForSpan:(id)arg1 origin:(struct CGPoint)arg2 exporter:(id)arg3 text:(id)arg4;
- (id)spanInfoForRun:(struct _NSRange)arg1 charAttributes:(id)arg2 text:(id)arg3;
- (void)addSVGAttributes:(id)arg1 forCharacterAttributes:(id)arg2 forExporter:(id)arg3 origin:(struct CGPoint *)arg4;
- (void)appendBaseTranslation:(id)arg1 exporter:(id)arg2;
- (id)svgStyle;

@end

@interface MSTextLayerEventHandler : MSEventHandler <NSTextViewDelegate, NSTextStorageDelegate, NSWindowDelegate, MSTextLayerEditingDelegate>
{
    MSTextLayerTextView *_textView;	// 128 = 0x80
    MSTextWindow *_textViewWindow;	// 136 = 0x88
    MSTextLayer *_textLayer;	// 144 = 0x90
}

@property(retain, nonatomic) MSTextLayer *textLayer; // @synthesize textLayer=_textLayer;
@property(retain, nonatomic) MSTextWindow *textViewWindow; // @synthesize textViewWindow=_textViewWindow;
@property(retain, nonatomic) MSTextLayerTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (void)dealloc;
- (id)undoManager;
- (BOOL)shouldDrawLayerSelection;
- (id)toolbarIdentifier;
- (void)doTextModification:(CDUnknownBlockType)arg1;
- (void)makeLowercase:(id)arg1;
- (void)makeUppercase:(id)arg1;
- (void)removeTextView;
- (void)handlerWillLoseFocus;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)selectAll:(id)arg1;
- (struct CGRect)windowFrameForDrawView;
- (struct CGRect)windowFrameForTextView;
- (void)zoomValueWillChangeTo:(double)arg1;
- (void)viewDidScroll:(id)arg1;
- (BOOL)mouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (void)adjustTextViewFrame;
- (void)textStorageDidProcessEditing:(id)arg1;
- (void)adjustForegroundColor;
- (void)beginEditing;
- (struct CGRect)frameForTextViewOnCanvasBasedOnBaseFrame:(struct CGRect)arg1;
- (struct CGRect)frameForTextView;
- (void)makeTextWindow;
- (void)makeTextView;
- (void)addTextView;
- (void)handlerGotFocus;

@end

@interface MSTextLayerRenderer : MSBaseLayerRenderer
{
}

+ (void)_drawLayer:(id)arg1 onPath:(id)arg2 atLength:(long long)arg3 context:(id)arg4;
+ (void)drawLayer:(id)arg1 onPath:(id)arg2 atLength:(long long)arg3 context:(id)arg4;
+ (double)startingPositionForTextLayer:(id)arg1 onShape:(id)arg2;
+ (void)drawTextLayerInsideTransform:(id)arg1 context:(id)arg2;
+ (void)drawTextLayer:(id)arg1 onUnderlyingPath:(id)arg2 context:(id)arg3;
+ (void)doDrawLayer:(id)arg1 context:(id)arg2;
+ (BOOL)shouldDrawLayer:(id)arg1 context:(id)arg2;

@end

@interface MSTextLayerSection : MSLayerSection <NSMenuDelegate, BCPopoverDelegate, MSColorInspectorDelegate>
{
    NSView *_basicView;	// 112 = 0x70
    NSView *_symbolExclusionView;	// 120 = 0x78
    NSButton *_fontFamilyButton;	// 128 = 0x80
    NSPopUpButton *_fontWeightPopUpButton;	// 136 = 0x88
    NSTextField *_fontSizeField;	// 144 = 0x90
    MSColorPreviewButton *_colorPickerButton;	// 152 = 0x98
    NSTextField *_kerningField;	// 160 = 0xa0
    NSTextField *_lineHeightField;	// 168 = 0xa8
    MSLineHeightTextFieldCell *_lineHeightCell;	// 176 = 0xb0
    NSTextField *_paragraphHeightField;	// 184 = 0xb8
    NSSegmentedControl *_alignmentButton;	// 192 = 0xc0
    BCPopover *_popover;	// 200 = 0xc8
}

@property(retain, nonatomic) BCPopover *popover; // @synthesize popover=_popover;
@property(retain, nonatomic) NSSegmentedControl *alignmentButton; // @synthesize alignmentButton=_alignmentButton;
@property(retain, nonatomic) NSTextField *paragraphHeightField; // @synthesize paragraphHeightField=_paragraphHeightField;
@property(retain, nonatomic) MSLineHeightTextFieldCell *lineHeightCell; // @synthesize lineHeightCell=_lineHeightCell;
@property(retain, nonatomic) NSTextField *lineHeightField; // @synthesize lineHeightField=_lineHeightField;
@property(retain, nonatomic) NSTextField *kerningField; // @synthesize kerningField=_kerningField;
@property(retain, nonatomic) MSColorPreviewButton *colorPickerButton; // @synthesize colorPickerButton=_colorPickerButton;
@property(retain, nonatomic) NSTextField *fontSizeField; // @synthesize fontSizeField=_fontSizeField;
@property(retain, nonatomic) NSPopUpButton *fontWeightPopUpButton; // @synthesize fontWeightPopUpButton=_fontWeightPopUpButton;
@property(retain, nonatomic) NSButton *fontFamilyButton; // @synthesize fontFamilyButton=_fontFamilyButton;
@property(retain, nonatomic) NSView *symbolExclusionView; // @synthesize symbolExclusionView=_symbolExclusionView;
@property(retain, nonatomic) NSView *basicView; // @synthesize basicView=_basicView;
- (void).cxx_destruct;
- (void)colorMagnifierAction:(id)arg1;
- (BOOL)canHandleColorMagnifierAction;
- (id)views;
- (id)textStorages;
- (BOOL)textLayerContainedInSymbol;
- (id)firstOccurrenceOfAttributeWithName:(id)arg1;
- (void)updateKerningForFontChangeTo:(id)arg1 string:(id)arg2 range:(struct _NSRange)arg3 effectiveRange:(struct _NSRange)arg4 oldPointSize:(double)arg5;
- (void)changeFontPropertiesInBlock:(CDUnknownBlockType)arg1;
- (void)changeFontPropertiesOfTextObjectsInBlock:(CDUnknownBlockType)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)reloadFontWeightPopUp;
- (id)firstColor;
- (id)currentFontFamilyName;
- (void)changeFontFamilyTo:(id)arg1;
- (void)changeParagraphStyleInBlock:(CDUnknownBlockType)arg1;
- (id)textView;
- (void)alignmentButtonAction:(id)arg1;
- (id)currentView;
- (void)paragraphHeightAction:(id)arg1;
- (void)lineHeightAction:(id)arg1;
- (void)kerningAction:(id)arg1;
- (void)colorInspector:(id)arg1 didChangeToColor:(id)arg2;
- (void)changeTextLayerFont:(id)arg1;
- (void)showColorPickerAction:(id)arg1;
- (void)showParagraphStylingAction:(id)arg1;
- (void)fontSizeAction:(id)arg1;
- (void)fontWeightAction:(id)arg1;
- (void)fontFamilyAction:(id)arg1;
- (void)viewControllerWillDisappear;
- (void)dealloc;
- (double)defaultLineHeight;
- (double)lineHeight;
- (void)reloadLineHeightField;
- (void)reloadData;
- (void)textViewDidChange:(id)arg1;
- (void)awakeFromNib;

@end

@interface MSTextLayerTextView : NSTextView
{
    NSTimer *_hideSelectionTimer;	// 160 = 0xa0
    NSDictionary *_selectedTextAttributesBackup;	// 168 = 0xa8
}

@property(copy, nonatomic) NSDictionary *selectedTextAttributesBackup; // @synthesize selectedTextAttributesBackup=_selectedTextAttributesBackup;
@property(retain, nonatomic) NSTimer *hideSelectionTimer; // @synthesize hideSelectionTimer=_hideSelectionTimer;
- (void).cxx_destruct;
- (void)dealloc;
- (void)didChangeSelection:(id)arg1;
- (void)didChangeText;
- (void)selectSimilar:(id)arg1;
- (void)hideSelectionTimerFired:(id)arg1;
- (id)makeHideSelectionTimer;
- (void)paste:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (void)hideSelectionTemporarily;
- (void)mouseDown:(id)arg1;
- (BOOL)hitTestFromEvent:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

@end

@interface MSTextOnPathAction : MSProAction
{
}

- (id)textLayers;
- (BOOL)validate;
- (BOOL)isActive;
- (void)performAction:(id)arg1;
- (void)textOnPath:(id)arg1;

@end

@interface MSTextOrStyleShareButtonCell : NSButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSTextStyle : _MSTextStyle
{
}

+ (id)styleWithAttributes:(id)arg1;
- (void)syncOwningTextLayerWithThisStyle;
- (void)setAttributes:(id)arg1;
- (id)treeAsDictionary;

@end

@interface MSTextStyleMenuPreview : NSObject
{
}

+ (id)attributedStringPreviewForTextStyle:(id)arg1 includeStyleInfo:(BOOL)arg2;
+ (void)applyStyle:(id)arg1 toMenuItem:(id)arg2 includeStyleInfo:(BOOL)arg3;

@end

@interface MSTextWindow : NSWindow
{
    MSContentDrawView *_drawView;	// 256 = 0x100
    NSTextView *_textView;	// 264 = 0x108
}

+ (struct CGRect)adjustFrameWidth:(struct CGRect)arg1 alignment:(unsigned long long)arg2;
+ (struct CGRect)adjustFrameHeight:(struct CGRect)arg1;
+ (struct CGRect)makeBiggerRect:(struct CGRect)arg1 withBehaviour:(long long)arg2 alignment:(unsigned long long)arg3;
@property(retain, nonatomic) NSTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) MSContentDrawView *drawView; // @synthesize drawView=_drawView;
- (void).cxx_destruct;
- (BOOL)canBecomeKeyWindow;
- (void)addTextView:(id)arg1;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (void)moveToRect:(struct CGRect)arg1 drawViewRect:(struct CGRect)arg2 behaviour:(long long)arg3;
- (id)initWithRect:(struct CGRect)arg1 drawViewRect:(struct CGRect)arg2;

@end

@interface MSTile : MSBaseRenderTile
{
    BOOL _drawPixelated;	// 24 = 0x18
    BOOL _disableSubpixelAntialiasing;	// 25 = 0x19
    BOOL _drawDottedDirtyRect;	// 26 = 0x1a
    BOOL _drawGroupOutline;	// 27 = 0x1b
    BOOL _drawShapeOutline;	// 28 = 0x1c
    BOOL _shouldHideOverlayControls;	// 29 = 0x1d
    double _zoomValue;	// 32 = 0x20
    MSEventHandlerManager *_handlerManager;	// 40 = 0x28
    id <MSTileDelegate> _tileDelegate;	// 48 = 0x30
    MSOverlayTile *_overlayTile;	// 56 = 0x38
    MSContentTile *_contentTile;	// 64 = 0x40
    NSThread *_thread;	// 72 = 0x48
    MSPage *_pageForContent;	// 80 = 0x50
    MSPage *_pageForOverlay;	// 88 = 0x58
    NSColorSpace *_colorSpaceForContent;	// 96 = 0x60
    NSArray *_artboardFrames;	// 104 = 0x68
    struct CGPoint _distanceFromScrollOrigin;	// 112 = 0x70
}

@property(retain, nonatomic) NSArray *artboardFrames; // @synthesize artboardFrames=_artboardFrames;
@property(retain, nonatomic) NSColorSpace *colorSpaceForContent; // @synthesize colorSpaceForContent=_colorSpaceForContent;
@property(retain, nonatomic) MSPage *pageForOverlay; // @synthesize pageForOverlay=_pageForOverlay;
@property(retain, nonatomic) MSPage *pageForContent; // @synthesize pageForContent=_pageForContent;
@property(retain, nonatomic) NSThread *thread; // @synthesize thread=_thread;
@property(retain, nonatomic) MSContentTile *contentTile; // @synthesize contentTile=_contentTile;
@property(retain, nonatomic) MSOverlayTile *overlayTile; // @synthesize overlayTile=_overlayTile;
@property(nonatomic) BOOL shouldHideOverlayControls; // @synthesize shouldHideOverlayControls=_shouldHideOverlayControls;
@property(nonatomic) __weak id <MSTileDelegate> tileDelegate; // @synthesize tileDelegate=_tileDelegate;
@property(retain, nonatomic) MSEventHandlerManager *handlerManager; // @synthesize handlerManager=_handlerManager;
@property(nonatomic) BOOL drawShapeOutline; // @synthesize drawShapeOutline=_drawShapeOutline;
@property(nonatomic) BOOL drawGroupOutline; // @synthesize drawGroupOutline=_drawGroupOutline;
@property(nonatomic) BOOL drawDottedDirtyRect; // @synthesize drawDottedDirtyRect=_drawDottedDirtyRect;
@property(nonatomic) BOOL disableSubpixelAntialiasing; // @synthesize disableSubpixelAntialiasing=_disableSubpixelAntialiasing;
@property(nonatomic) BOOL drawPixelated; // @synthesize drawPixelated=_drawPixelated;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(nonatomic) struct CGPoint distanceFromScrollOrigin; // @synthesize distanceFromScrollOrigin=_distanceFromScrollOrigin;
- (void).cxx_destruct;
- (id)description;
- (void)moveToPosition:(struct CGPoint)arg1;
- (struct CGRect)rectForContentTile;
- (double)scaleForContentTile;
- (void)pixelGridDidChange;
- (void)drawPage:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawArtboardBackgroundsInContext:(struct CGContext *)arg1;
- (void)drawContentInContext:(struct CGContext *)arg1;
- (void)drawOverlayInContext:(struct CGContext *)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (struct CGRect)normalizeRect:(struct CGRect)arg1 origin:(struct CGPoint)arg2;
- (void)refreshOverlayRect:(struct CGRect)arg1 page:(id)arg2;
- (void)scheduleContentRefresh:(id)arg1;
- (void)refreshContentRect:(struct CGRect)arg1 page:(id)arg2;
- (BOOL)shouldDrawPixelated;
- (void)enableDebugFramesInner:(BOOL)arg1 outer:(BOOL)arg2;
- (id)init;

@end

@interface MSTilePlacer : NSObject
{
    MSContentDrawView *_contentView;	// 8 = 0x8
    NSMutableDictionary *_tiles;	// 16 = 0x10
}

@property(retain, nonatomic) NSMutableDictionary *tiles; // @synthesize tiles=_tiles;
@property(nonatomic) __weak MSContentDrawView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (void)dealloc;
- (id)allTileIDs;
- (id)allTiles;
- (id)idForTile:(id)arg1;
- (void)setPositionForTile:(id)arg1 withID:(id)arg2;
- (BOOL)layer:(id)arg1 shouldInheritContentsScale:(double)arg2 fromWindow:(id)arg3;
- (id)tilesWithIDs:(id)arg1;
- (void)addTiles:(id)arg1 shouldRedraw:(BOOL)arg2;
- (void)addMissingTilesFrom:(id)arg1;
- (void)unregisterTilesWithIDs:(id)arg1;
- (void)removeTilesWithIDsFromSuperLayer:(id)arg1;
- (void)removeTilesWithIDs:(id)arg1;
- (void)removeTilesNotIncludedIn:(id)arg1;
- (struct CGPoint)originForFirstTile;
- (id)requiredTileIdentifiersWithExtraMargin:(BOOL)arg1;
- (void)repositionExistingTiles;
- (void)tile;
- (void)moveTiles;
- (id)init;

@end

@interface MSTileRefresh : NSObject
{
    MSPage *_page;	// 8 = 0x8
    NSColorSpace *_colorSpace;	// 16 = 0x10
    NSArray *_artboardFrames;	// 24 = 0x18
    struct CGRect _contentRect;	// 32 = 0x20
}

@property(retain, nonatomic) NSArray *artboardFrames; // @synthesize artboardFrames=_artboardFrames;
@property(retain, nonatomic) NSColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property(retain, nonatomic) MSPage *page; // @synthesize page=_page;
@property(nonatomic) struct CGRect contentRect; // @synthesize contentRect=_contentRect;
- (void).cxx_destruct;

@end

@interface MSTileRemoveCollector : NSObject <MSTileDelegate>
{
    long long _tilesToFinishRendering;	// 8 = 0x8
    CALayer *_masterTile;	// 16 = 0x10
    id <MSTileRemoveCollector> _delegate;	// 24 = 0x18
}

@property(nonatomic) __weak id <MSTileRemoveCollector> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CALayer *masterTile; // @synthesize masterTile=_masterTile;
- (void).cxx_destruct;
- (void)clear;
- (void)collectTiles:(id)arg1;
- (void)tileDidDraw:(id)arg1 page:(id)arg2;

@end

@interface MSTileRenderer : NSObject <DKContextDelegate>
{
    BOOL _shouldDrawPixelated;	// 8 = 0x8
    BOOL _disableSubpixelAntialiasing;	// 9 = 0x9
    BOOL _drawDottedDirtyRect;	// 10 = 0xa
    BOOL _drawGroupOutline;	// 11 = 0xb
    BOOL _drawShapeOutline;	// 12 = 0xc
    MSPage *_page;	// 16 = 0x10
    double _zoomValue;	// 24 = 0x18
    struct CGRect _tileRect;	// 32 = 0x20
    struct CGRect _dirtyRect;	// 64 = 0x40
}

@property(nonatomic) struct CGRect dirtyRect; // @synthesize dirtyRect=_dirtyRect;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(nonatomic) BOOL drawShapeOutline; // @synthesize drawShapeOutline=_drawShapeOutline;
@property(nonatomic) BOOL drawGroupOutline; // @synthesize drawGroupOutline=_drawGroupOutline;
@property(nonatomic) BOOL drawDottedDirtyRect; // @synthesize drawDottedDirtyRect=_drawDottedDirtyRect;
@property(nonatomic) BOOL disableSubpixelAntialiasing; // @synthesize disableSubpixelAntialiasing=_disableSubpixelAntialiasing;
@property(nonatomic) BOOL shouldDrawPixelated; // @synthesize shouldDrawPixelated=_shouldDrawPixelated;
@property(nonatomic) struct CGRect tileRect; // @synthesize tileRect=_tileRect;
@property(retain, nonatomic) MSPage *page; // @synthesize page=_page;
- (void).cxx_destruct;
- (void)dealloc;
- (BOOL)rendererShouldInterruptRendering;
- (BOOL)rendererNeedsToDrawRect:(struct CGRect)arg1;
- (BOOL)rendererShouldSkipDrawingLayer:(id)arg1;
- (BOOL)rendererShouldForceDrawingLayer:(id)arg1;
- (void)prepareContext:(struct CGContext *)arg1;
- (id)contextWithCGContext:(struct CGContext *)arg1 colorSpace:(id)arg2;
- (void)renderInContext:(struct CGContext *)arg1 colorSpace:(id)arg2;

@end

@interface MSTileThreadPool : NSObject
{
    long long nextThreadIndex;	// 8 = 0x8
    NSMutableArray *_threads;	// 16 = 0x10
}

+ (id)thread;
+ (id)sharedController;
@property(retain, nonatomic) NSMutableArray *threads; // @synthesize threads=_threads;
- (void).cxx_destruct;
- (id)thread;
- (void)threadMain;
- (id)init;

@end

@interface MSToggleBorderAction : MSBaseAction
{
}

- (void)toggleBorder:(id)arg1;
- (void)performAction:(id)arg1;

@end

@interface MSToggleFillAction : MSBaseAction
{
}

- (void)toggleFill:(id)arg1;
- (void)performAction:(id)arg1;

@end

@interface MSToggleGridAction : MSProAction
{
}

- (BOOL)validate;
- (BOOL)dynamicTitle;
- (id)label;
- (id)imageName;
- (void)performAction:(id)arg1;
- (void)toggleGrid:(id)arg1;

@end

@interface MSToggleLayoutAction : MSProAction
{
}

- (BOOL)validate;
- (BOOL)dynamicTitle;
- (id)label;
- (id)imageName;
- (void)performAction:(id)arg1;
- (void)toggleLayout:(id)arg1;

@end

@interface MSTogglePixelGridAction : MSProAction
{
}

- (id)label;
- (BOOL)dynamicTitle;
- (BOOL)validateMenuItem:(id)arg1;
- (id)imageName;
- (BOOL)isShowingPixelatedView;
- (void)performAction:(id)arg1;
- (void)togglePixelGrid:(id)arg1;

@end

@interface MSTogglePresentationModeAction : MSBaseAction
{
    NSWindow *_fullScreenWindow;	// 16 = 0x10
}

@property(retain, nonatomic) NSWindow *fullScreenWindow; // @synthesize fullScreenWindow=_fullScreenWindow;
- (void).cxx_destruct;
- (void)dealloc;
- (void)removeObserver;
- (id)fullScreenOptions;
- (id)fullScreenView;
- (void)fullScreenWindowDidResignMain:(id)arg1;
- (struct CGRect)rectOfCanvasOnScreen;
- (void)enterFullScreen;
- (void)exitFullScreen;
- (void)togglePresentationMode:(id)arg1;

@end

@interface MSToggleRulersAction : MSProAction
{
}

- (id)label;
- (id)imageName;
- (BOOL)dynamicTitle;
- (void)toggleRulersAndShowMessage;
- (void)performAction:(id)arg1;
- (void)toggleRulers:(id)arg1;

@end

@interface MSToolbar : NSToolbar
{
    BOOL shouldChange;	// 128 = 0x80
}

- (void)setSizeMode:(unsigned long long)arg1;
- (void)finishedSetUp;

@end

@interface MSToolbarConstructor : NSObject <NSToolbarDelegate>
{
    MSDocument *doc;	// 8 = 0x8
    MSToolbar *toolbar;	// 16 = 0x10
}

+ (id)toolbarForDocument:(id)arg1;
@property(nonatomic) __weak MSDocument *doc; // @synthesize doc;
- (void).cxx_destruct;
- (void)dealloc;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)allActions;
- (id)standardToolbarIdentifiers;
- (void)constructToolbarForWindow:(id)arg1;
- (void)toolbarSizeDidChange:(id)arg1;
- (id)toolbar;
- (id)initWithDocument:(id)arg1;

@end

@interface MSToolsMenuAction : MSProAction
{
}

- (id)children;

@end

@interface MSTransformAction : MSEventHandlerAction
{
}

- (id)tooltip;
- (void)performAction:(id)arg1;
- (void)transform:(id)arg1;
- (BOOL)validate;

@end

@interface MSTransformEventHandler : MSPointsEventHandler
{
    MSShapeDictionary *shapeDictionary;	// 160 = 0xa0
    MSLayerGroup *currentGroup;	// 168 = 0xa8
    struct CGRect originalRect;	// 176 = 0xb0
    unsigned long long directionLock;	// 208 = 0xd0
    struct CGPoint firstSelectedLocation;	// 216 = 0xd8
    DKDistortionTransform *_transform;	// 232 = 0xe8
    MSPointArray *_transformPoints;	// 240 = 0xf0
    MSPointArray *_mouseDownPoints;	// 248 = 0xf8
    NSMutableArray *_originalPoints;	// 256 = 0x100
}

@property(retain, nonatomic) NSMutableArray *originalPoints; // @synthesize originalPoints=_originalPoints;
@property(retain, nonatomic) MSPointArray *mouseDownPoints; // @synthesize mouseDownPoints=_mouseDownPoints;
@property(retain, nonatomic) MSPointArray *transformPoints; // @synthesize transformPoints=_transformPoints;
@property(retain, nonatomic) DKDistortionTransform *transform; // @synthesize transform=_transform;
- (void).cxx_destruct;
- (void)dealloc;
- (void)concatTransformsForDrawSnaps;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (BOOL)shouldDrawLayerSelection;
- (void)drawHandleLines;
- (void)resetTransformsForLayer:(id)arg1;
- (void)transformShape;
- (id)cursorForCorner:(long long)arg1;
- (BOOL)absoluteMouseMoved:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseUp:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (BOOL)absoluteMouseDragged:(struct CGPoint)arg1 flags:(unsigned long long)arg2;
- (void)keyDown:(unsigned short)arg1 flags:(unsigned long long)arg2;
- (struct CGPoint)adjustPoint:(struct CGPoint)arg1;
- (id)bounds;
- (id)currentGroup;
- (void)movePointsRelatedToCorner:(long long)arg1 newLocation:(struct CGPoint)arg2 previous:(struct CGPoint)arg3;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (void)replacePointAtIndexWithUndo:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (void)replacePointAtCorner:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (struct CGPoint)pointAtCorner:(long long)arg1;
- (BOOL)absoluteMouseDown:(struct CGPoint)arg1 clickCount:(int)arg2 flags:(unsigned long long)arg3;
- (id)points;
- (void)handlerWillLoseFocus;
- (id)snapsForShape;
- (id)pointsToSnap;
- (void)recordOriginalShapes;
- (void)handlerGotFocus;
- (id)initWithManager:(id)arg1;

@end

@interface MSTriangleShape : _MSTriangleShape
{
}

- (id)defaultName;
- (void)resetPoints;
- (void)initEmptyObject;
- (struct CGRect)boundsForCursorPreview;
- (unsigned long long)decodingConversionForProperty:(id)arg1;
- (id)addContentToElement:(id)arg1 attributes:(id)arg2 exporter:(id)arg3 action:(unsigned long long *)arg4;

@end

@interface MSTriangleShapeAction : MSBaseShapeAction
{
}

- (void)triangleShape:(id)arg1;

@end

@interface MSUnarchiver : NSKeyedUnarchiver
{
    long long _version;	// 136 = 0x88
    SEL _propertyDecoder;	// 144 = 0x90
}

+ (id)unarchiveObjectFromURL:(id)arg1 actualVersion:(long long *)arg2;
+ (id)unarchiveObjectWithData:(id)arg1 actualVersion:(long long *)arg2;
+ (id)unarchiveObjectWithData:(id)arg1 asVersion:(long long)arg2;
+ (id)unarchiveObjectWithData:(id)arg1;
+ (void)defineReplacementClasses;
+ (void)initialize;
@property(readonly, nonatomic) SEL propertyDecoder; // @synthesize propertyDecoder=_propertyDecoder;
@property(readonly, nonatomic) long long version; // @synthesize version=_version;
- (void)setDecodingVersion:(long long)arg1;

@end

@interface MSUngroupAction : MSBaseAction
{
}

- (void)ungroupGroup:(id)arg1;
- (void)performAction:(id)arg1;
- (void)ungroup:(id)arg1;
- (BOOL)layerCanBeUngrouped:(id)arg1;
- (BOOL)validate;
- (id)tooltip;

@end

@interface MSUnionAction : MSBaseBooleanAction
{
}

- (void)performAction:(id)arg1;
- (void)booleanUnion:(id)arg1;

@end

@interface MSUpDownComboBox : NSComboBox <NSTextViewDelegate, MSUpDownProtocol>
{
    id _refreshDelegate;	// 208 = 0xd0
    MSUpDownController *_upDownController;	// 216 = 0xd8
}

@property(retain, nonatomic) MSUpDownController *upDownController; // @synthesize upDownController=_upDownController;
@property(nonatomic) __weak id refreshDelegate; // @synthesize refreshDelegate=_refreshDelegate;
- (void).cxx_destruct;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)keyUp:(id)arg1;
- (double)incrementValue;
- (double)minimumValue;
- (void)awakeFromNib;

@end

@interface MSUpDownController : NSResponder
{
    BOOL hasOpenedUndoGroup;	// 16 = 0x10
    BOOL didChangeTextDuringEditing;	// 17 = 0x11
    NSTextField<MSUpDownProtocol> *_textField;	// 24 = 0x18
    MSIntegratedStepper *_stepper;	// 32 = 0x20
    double _incrementValue;	// 40 = 0x28
    double _forcedMinimum;	// 48 = 0x30
}

@property(nonatomic) double forcedMinimum; // @synthesize forcedMinimum=_forcedMinimum;
@property(nonatomic) double incrementValue; // @synthesize incrementValue=_incrementValue;
@property(retain, nonatomic) MSIntegratedStepper *stepper; // @synthesize stepper=_stepper;
@property(retain, nonatomic) NSTextField<MSUpDownProtocol> *textField; // @synthesize textField=_textField;
- (void).cxx_destruct;
- (BOOL)isEditable;
- (BOOL)isEnabled;
- (BOOL)hasValidFirstResponder;
- (double)floatValue;
- (id)advancedUndoManager;
- (double)incrementValueAccountingForModifierFlags;
- (double)adjustValueForMinimum:(double)arg1;
- (void)decrement;
- (double)adjustValueForMaximum:(double)arg1;
- (void)increment;
- (void)keyUp;
- (void)setFloatValueAndNotifyBindings:(double)arg1;
- (void)cancelOperation:(id)arg1;
- (BOOL)cancelTextEditingForInvalidReplacementString:(id)arg1;
- (BOOL)doCommandBySelector:(SEL)arg1;
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing;
- (BOOL)becomeFirstResponder;
- (BOOL)eventIsInsideView:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)hideStepper;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)makeStepper;
- (id)initWithTextField:(id)arg1 incrementValue:(double)arg2 createStepper:(BOOL)arg3 minimumValue:(double)arg4;

@end

@interface MSUpDownMiniTextField : MSUpDownTextField
{
}

- (double)incrementValue;

@end

@interface MSUpDownNanoTextField : MSUpDownTextField
{
}

- (double)incrementValue;

@end

@interface MSUpDownTextField : NSTextField <NSTextViewDelegate, MSUpDownProtocol>
{
    id _refreshDelegate;	// 200 = 0xc8
    MSUpDownController *_upDownController;	// 208 = 0xd0
}

@property(retain, nonatomic) MSUpDownController *upDownController; // @synthesize upDownController=_upDownController;
@property(nonatomic) __weak id refreshDelegate; // @synthesize refreshDelegate=_refreshDelegate;
- (void).cxx_destruct;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)keyUp:(id)arg1;
- (double)incrementValue;
- (void)awakeFromNib;

@end

@interface MSVectorizeStrokeAction : MSBaseAction
{
}

- (id)imageName;
- (BOOL)validate;
- (void)transferStylePropertiesFromShape:(id)arg1 toVectorizedShape:(id)arg2;
- (id)outlinedPathForShape:(id)arg1;
- (void)vectorizeStrokeForShape:(id)arg1;
- (void)performAction:(id)arg1;
- (void)vectorizeStroke:(id)arg1;

@end

@interface MSVectorizeTextAction : MSProAction
{
}

- (BOOL)validate;
- (id)imageName;
- (id)label;
- (void)refreshAndRemoveOldLayer:(id)arg1;
- (void)copyStylePropertiesFromLayer:(id)arg1 toShape:(id)arg2;
- (id)rawCopyOfStyle:(id)arg1;
- (void)copyTextPropertiesFromLayer:(id)arg1 toShape:(id)arg2;
- (void)insertAndSelectShape:(id)arg1 inGroup:(id)arg2;
- (void)performAction:(id)arg1;
- (void)vectorizeLayer:(id)arg1;

@end

@interface MSVersionedArchive : NSObject
{
    NSURL *_url;	// 8 = 0x8
    NSData *_data;	// 16 = 0x10
    unsigned long long _version;	// 24 = 0x18
    NSString *_alternateFolder;	// 32 = 0x20
}

+ (id)globalDirectory;
+ (id)globalArchiveWithName:(id)arg1 extension:(id)arg2 version:(long long)arg3;
@property(retain, nonatomic) NSString *alternateFolder; // @synthesize alternateFolder=_alternateFolder;
@property(nonatomic) unsigned long long version; // @synthesize version=_version;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (BOOL)archiveRootObject:(id)arg1 error:(id *)arg2;
- (id)unarchiveRootObjectVersion:(long long *)arg1 error:(id *)arg2;
- (id)existingURL;
- (id)existingURLBasedOnFullURL:(id)arg1;
- (id)versionedURLWithBase:(id)arg1 extension:(id)arg2 version:(unsigned long long)arg3;
- (id)initWithURL:(id)arg1 version:(long long)arg2;

@end

@interface MSVerticalRulerView : MSRulerView
{
}

- (id)rulerAxis;
- (id)snapLineWithPosition:(double)arg1 inRect:(struct CGRect)arg2;
- (id)occupiedRegionForRect:(struct CGRect)arg1 withOffset:(long long)arg2 zoom:(double)arg3;
- (id)bezierPathForLineAtPosition:(double)arg1 inRect:(struct CGRect)arg2;
- (void)refreshGuideInDrawViewAtIndex:(long long)arg1;
- (void)setResizeCursor;
- (double)relevantAxisForPoint:(struct CGPoint)arg1;
- (long long)rulerHeight;
- (long long)rulerLength;
- (BOOL)isFlipped;
- (void)drawBackground;
- (void)drawMetric:(id)arg1 atPoint:(struct CGPoint)arg2 drawBackground:(BOOL)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (void)displayOverlayHelp:(id)arg1;

@end

@interface MSVerticallyCenteredTextFieldCell : NSTextFieldCell
{
}

- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (struct CGRect)rectForTextDrawing:(struct CGRect)arg1;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSViewMenuAction : MSProAction
{
}

- (id)menu;
- (id)tooltip;
- (id)children;

@end

@interface MSViewPort : NSObject
{
    double _zoomValue;	// 8 = 0x8
    struct CGPoint _scrollOrigin;	// 16 = 0x10
}

+ (double)cappedZoom:(double)arg1;
+ (id)viewPortWithScrollOrigin:(struct CGPoint)arg1 zoom:(double)arg2;
@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
- (id)description;
- (BOOL)isEqual:(id)arg1;

@end

@interface MSWelcomeBackgroundView : NSView
{
}

- (BOOL)mouseDownCanMoveWindow;

@end

@interface MSWelcomeColorStripView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSWelcomeWindow : NSWindow
{
}

- (void)moveButtonOutOfView:(id)arg1;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1;
- (void)resizeContentView;
- (void)windowDidResize:(id)arg1;
- (void)awakeFromNib;
- (BOOL)canBecomeKeyWindow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface MSWelcomeWindowBigButton : MSHoverButton
{
}

- (void)setState:(long long)arg1;
- (void)dealloc;
- (void)mouseExited:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MSWelcomeWindowBigButtonCell : MSHoverButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface MSWelcomeWindowButtonCell : MSHoverButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSWelcomeWindowContentView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSWelcomeWindowController : NSWindowController <NSWindowDelegate, NSTextFieldDelegate>
{
    NSButton *_confirmButton;	// 80 = 0x50
    NSButton *_closeButton;	// 88 = 0x58
    NSTextField *_emailField;	// 96 = 0x60
    NSView *_movieView;	// 104 = 0x68
    NSView *_normalView;	// 112 = 0x70
}

@property(retain, nonatomic) NSView *normalView; // @synthesize normalView=_normalView;
@property(retain, nonatomic) NSView *movieView; // @synthesize movieView=_movieView;
@property(retain, nonatomic) NSTextField *emailField; // @synthesize emailField=_emailField;
@property(retain, nonatomic) NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) NSButton *confirmButton; // @synthesize confirmButton=_confirmButton;
- (void).cxx_destruct;
- (void)windowWillClose:(id)arg1;
- (void)openTemplateNamed:(id)arg1;
- (void)openWebDesignTemplate:(id)arg1;
- (void)openIOSIconTemplate:(id)arg1;
- (void)openIOSDesignTemplate:(id)arg1;
- (void)subscribeToNewsletter:(id)arg1;
- (void)likeUsOnFacebook:(id)arg1;
- (void)followUsOnTwitter:(id)arg1;
- (void)contactSupport:(id)arg1;
- (void)readManual:(id)arg1;
- (void)openIntroDocument:(id)arg1;
- (void)playMovie:(id)arg1;
- (void)showWhatsNew:(id)arg1;
- (BOOL)signUpFieldsContainsValidEmail;
- (void)controlTextDidChange:(id)arg1;
- (void)confirm:(id)arg1;

@end

@interface MSWelcomeWindowFieldBorder : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSWelcomeWindowPlayButtonCell : MSWelcomeWindowButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface MSWhiteHeaderView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface MSZoomAction : MSBaseAction
{
}

- (id)zoomValueString;
- (BOOL)validateToolbarItem:(id)arg1;
- (void)zoomValueDidChange;
- (void)zoomModeToggle:(id)arg1;
- (id)zoomViewAtSize:(unsigned long long)arg1;
- (id)toolbarItemWithSize:(unsigned long long)arg1;

@end

@interface MSZoomBlurEventHandler : MSPointsEventHandler
{
    MSStyleBlur *_blurStyle;	// 160 = 0xa0
}

@property(retain, nonatomic) MSStyleBlur *blurStyle; // @synthesize blurStyle=_blurStyle;
- (void).cxx_destruct;
- (struct CGPoint)convertPointToAbsoluteCoordinates:(struct CGPoint)arg1;
- (void)replacePointAtIndex:(long long)arg1 withPoint:(struct CGPoint)arg2;
- (id)currentGroup;
- (id)points;

@end

@interface NSAffineTransform (CHAffineTransform_Additions)
+ (id)transformFromStruct:(struct _CHTransformStruct)arg1 aroundPoint:(struct CGPoint)arg2 inPlace:(BOOL)arg3;
+ (id)transformFromStruct:(struct _CHTransformStruct)arg1 aroundPoint:(struct CGPoint)arg2;
+ (id)rotationTransformWithDegrees:(long long)arg1 aroundPoint:(struct CGPoint)arg2;
+ (id)transformWithOffset:(struct CGPoint)arg1;
+ (id)transformByScaling:(double)arg1;
+ (id)transformByTranslatingXBy:(double)arg1 yBy:(double)arg2;
- (struct CGAffineTransform)CGAffineTransform;
- (id)invertedTransform;
- (void)transactionWithBlock:(CDUnknownBlockType)arg1;
- (void)rotateWithDegrees:(double)arg1 aroundPoint:(struct CGPoint)arg2;
- (void)translateByOffset:(struct CGPoint)arg1;
@end

@interface NSApplication (CHApplicationAdditions)
- (id)applicationVersion;
- (id)majorVersion;
- (id)applicationName;
@end

@interface NSArray (CHArrayExtensions)
+ (id)arrayByMergingArrays:(id)arg1;
- (id)rotateTwoDimensionalArray;
- (id)uniqueObjects;
- (id)subArrayToIndex:(long long)arg1;
- (id)objectAtIndexOrNil:(unsigned long long)arg1;
- (BOOL)isValidIndex:(unsigned long long)arg1;
- (id)dictionaryBySplittingArrayUsingKey:(id)arg1;
- (id)arrayByAddingObjects:(id)arg1;
- (id)arrayByRemovingObject:(id)arg1;
- (id)sortedArrayUsingKey:(id)arg1;
- (id)sortedArray;
- (id)arrayByRemovingNull;
- (id)filteredByObjectsOfClass:(Class)arg1;
- (BOOL)containsOnlyObjectsOfClass:(Class)arg1;
- (id)mutableCopyDeep;
- (id)copyDeep;
- (BOOL)containsObjectOfClass:(Class)arg1;
- (id)reversedArray;
- (id)end;
- (id)tail;
- (id)firstObject;
@end

@interface NSArray (DescriptionDictionary)
- (id)descriptionDictionary;
@end

@interface NSArray (ModelDefaultValueSupport)
- (BOOL)hasDefaultValues;
@end

@interface NSArray (NSArray_Blocks)
+ (id)arrayWithCapacity:(unsigned long long)arg1 fill:(CDUnknownBlockType)arg2;
- (BOOL)containsObjectPassingTest:(CDUnknownBlockType)arg1;
- (unsigned long long)indexOfFirstObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)firstObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)firstObject;
- (double)sum:(CDUnknownBlockType)arg1;
- (id)mapWithIndex:(CDUnknownBlockType)arg1;
- (id)map:(CDUnknownBlockType)arg1;
@end

@interface NSArray (NSArray_SmallBlocks)
- (id)filterUsingBlockWithIndex:(CDUnknownBlockType)arg1;
- (id)filteredArrayUsingBlock:(CDUnknownBlockType)arg1;
- (void)eachWithIndex:(CDUnknownBlockType)arg1;
- (void)each:(CDUnknownBlockType)arg1;
@end

@interface NSArray (NSArray_Splitting)
- (id)joinWords;
- (id)front;
@end

@interface NSArray (Scripting)
- (unsigned long long)length;
@end

@interface NSAttributedString (CHAttributedStringAdditions)
+ (id)attributedStringWithString:(id)arg1 font:(id)arg2;
+ (id)attributedStringWithString:(id)arg1 attributes:(id)arg2;
@end

@interface NSAttributedString (CHAttributedStringSizeAdditions)
- (double)heightWithFont:(id)arg1 maxWidth:(double)arg2;
@end

@interface NSBezierPath (AppendByRemovingMoveTo)
- (void)appendBezierPathRemovingInitialMoveToPoint:(id)arg1;
@end

@interface NSBezierPath (Boolean)
- (id)fb_xor:(id)arg1;
- (id)fb_difference:(id)arg1;
- (id)fb_intersect:(id)arg1;
- (id)fb_union:(id)arg1;
@end

@interface NSBezierPath (CHBezierPathAdditions)
+ (id)bezierCurveFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
+ (id)bezierPathFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (void)writeDebugFileNamed:(id)arg1;
- (BOOL)isClosed;
- (struct CGRect)safeBounds;
- (id)bezierPathByGrowingBy_deprecated:(double)arg1;
- (void)drawInnerShadow:(id)arg1;
- (id)bezierPathWithOuterPathOfSize:(double)arg1;
- (struct CGPath *)mutableCGPathCopy;
- (struct CGPath *)CGPath;
- (id)outlinePath;
- (void)applyPropertiesToContext:(struct CGContext *)arg1;
- (void)clipInBlock:(CDUnknownBlockType)arg1;
- (void)strokeInside;
- (void)strokeOutside;
@end

@interface NSBezierPath (EPS)
+ (id)bezierPathFromEPSString:(id)arg1;
+ (id)epsStringByTrimmingHeaderAndFooter:(id)arg1;
@end

@interface NSBezierPath (NSBezierPath_Bending)
- (id)bendToBezierPath:(id)arg1 atOffset:(double)arg2;
- (void)addCurveSement:(id)arg1 toBezierPath:(id)arg2 bendingOverPath:(id)arg3 atOffset:(double)arg4;
- (void)addShortCurveSegment:(id)arg1 toBezierPath:(id)arg2 bendingOverPath:(id)arg3 atOffset:(double)arg4;
- (void)addLineSement:(id)arg1 toBezierPath:(id)arg2 bendingOverPath:(id)arg3 atOffset:(double)arg4;
- (void)addShortLineSement:(id)arg1 toBezierPath:(id)arg2 bendingOverPath:(id)arg3 atOffset:(double)arg4;
- (struct CGPoint)putPoint:(struct CGPoint)arg1 onBezierPath:(id)arg2 offset:(long long)arg3;
@end

@interface NSBezierPath (NSBezierPath_BooleanBridge)
- (id)bezierPathBySubtractingPaths:(id)arg1;
- (id)booleanExclusiveOrWith:(id)arg1;
- (id)booleanSubtractWith:(id)arg1;
- (id)booleanIntersectWith:(id)arg1;
- (id)booleanUnionWith:(id)arg1;
- (void)debugWriteBooleanOp:(long long)arg1 withPath:(id)arg2;
- (id)booleanOp:(long long)arg1 withPath:(id)arg2;
@end

@interface NSBezierPath (NSBezierPath_Enumerator)
- (BOOL)customIsEqual:(id)arg1;
- (void)appendBezierPathItem:(id)arg1;
- (id)lastItem;
- (id)itemAtIndex:(long long)arg1;
- (id)bezierCurves;
- (id)reverseEnumerator;
- (id)enumerator;
@end

@interface NSBezierPath (NSBezierPath_Slopes)
- (id)bezierPathByRearrangingSubPathsIfNecessary;
- (id)bezierPathByReplacingElementAtIndexWithMoveTo:(long long)arg1;
- (id)bezierPathByReplacingClosePathByLineToComponents;
- (id)bezierPathByRemovingSubsequentMoveToComponents;
- (id)bezierPathByReplacingMoveToByLineToComponents;
- (id)bezierPathByApplyingModifierBlock:(CDUnknownBlockType)arg1;
- (id)subDivideAtPoint:(struct CGPoint)arg1;
- (void)drawDebugWithZoom:(double)arg1;
- (id)bezierPathBySmootheningSubPath:(double)arg1;
- (struct CGPoint)pointAtIndex:(long long)arg1;
- (void)appendBezierPathByRemovingMoveToPoint:(id)arg1;
- (id)bezierPathByJoiningWithBezierPath:(id)arg1;
- (id)bezierPathByTranslatingXBy:(double)arg1 yBy:(double)arg2;
- (BOOL)isEqualToBezierPath:(id)arg1;
- (id)placeOnBezierPath:(id)arg1 atOffset:(long long)arg2;
- (double)lengthWithMaximumError:(double)arg1;
- (double)length;
- (id)bezierPathByTrimmingToLength:(double)arg1 withMaximumError:(double)arg2;
- (id)expandPathBy:(double)arg1;
- (id)bezierPathByTrimmingToLength:(double)arg1;
- (id)bezierPathFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (id)bezierPathByTrimmingFromLength:(double)arg1 withMaximumError:(double)arg2;
- (id)bezierPathByTrimmingFromLength:(double)arg1;
- (double)slopeOfPointAtIndex:(long long)arg1;
- (struct CGPoint)pointOnPathAtLength:(double)arg1 slope:(double *)arg2;
- (struct CGPoint)pointOnPathAtLength:(double)arg1;
- (double)slopeOnPathAtLength:(double)arg1;
- (struct CGPoint)firstPoint;
- (struct CGPoint)lastPoint;
@end

@interface NSBezierPath (NSBezierPath_Various)
+ (id)bezierPathWithSubPaths:(id)arg1;
+ (id)bezierCurveFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4;
+ (id)bezierPathFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (BOOL)containsRect:(struct CGRect)arg1;
- (void)debugWriteToFileNamed:(id)arg1;
- (void)setDashPattern:(id)arg1;
- (id)simplifyWithMargin:(long long)arg1;
- (id)simplify;
- (id)subPaths;
- (id)scaleBy:(double)arg1;
@end

@interface NSBezierPath (NSPrivate)
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;
+ (id)bezierPathWithPathFromContext:(struct CGContext *)arg1;
- (id)strokedPathHelperContext;
- (void)setCGPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
@end

@interface NSBezierPath (NaNChecks)
+ (void)nanSafeSwizzleSelector:(SEL)arg1 overrideSelector:(SEL)arg2;
+ (void)load;
- (void)bc_nan_curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)bc_nan_lineToPoint:(struct CGPoint)arg1;
- (void)bc_nan_moveToPoint:(struct CGPoint)arg1;
@end

@interface NSBezierPath (SVGBezierPath)
+ (id)bezierPathFromSVGFile:(id)arg1;
- (id)svgAttributes;
- (void)addSVGArcWithAngle:(double)arg1 radius:(struct CGSize)arg2 from:(struct CGPoint)arg3 to:(struct CGPoint)arg4 largeArc:(BOOL)arg5 sweep:(BOOL)arg6;
- (void)writeSVGToFile:(id)arg1;
@end

@interface NSBezierPathEnumerator : NSObject <NSFastEnumeration>
{
    NSBezierPath *bezierPath;	// 8 = 0x8
    BOOL reverse;	// 16 = 0x10
}

@property(nonatomic) BOOL reverse; // @synthesize reverse;
@property(retain, nonatomic) NSBezierPath *bezierPath; // @synthesize bezierPath;
- (void).cxx_destruct;
- (id)pathItems;
- (void)dealloc;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;

@end

@interface NSBezierPathItem : NSObject
{
    struct CGPoint points[3];	// 8 = 0x8
    unsigned long long _type;	// 56 = 0x38
}

@property(nonatomic) unsigned long long type; // @synthesize type=_type;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)bezierPathStartingAtPoint:(struct CGPoint)arg1;
- (struct CGPoint *)points;
- (void)setPoints:(struct CGPoint *)arg1;

@end

@interface NSBitmapImageRep (CHBitmapRepAdditions)
- (id)PNGRepresentationWithInterlaced:(BOOL)arg1;
- (id)JPGRepresentationWithCompression:(double)arg1 progressive:(BOOL)arg2;
@end

@interface NSBitmapImageRep (DrawKit)
+ (id)bitmapImageRepWithSize:(struct CGSize)arg1 flags:(unsigned long long)arg2 colorSpace:(id)arg3 drawingBlock:(CDUnknownBlockType)arg4;
- (id)bitSafeBitmapImageRep;
- (id)bitmapImageRepByFlippingVerticalFlags:(unsigned long long)arg1;
- (id)bitmapImageRepByCroppingToRect:(struct CGRect)arg1;
- (struct CGRect)bitSafeFastRectForTrimming;
- (struct CGRect)rectForTrimming;
@end

@interface NSCoder (ModelEncodingSupport)
- (id)decodeImageDataForKey:(id)arg1;
- (struct CGPoint)decodePointFromStringForKey:(id)arg1;
- (struct CGRect)decodeRectFromStringForKey:(id)arg1;
- (double)decodeDoubleFromObjectForKey:(id)arg1;
- (float)decodeFloatFromObjectForKey:(id)arg1;
- (long long)decodeIntegerFromObjectForKey:(id)arg1;
- (long long)decodeInt64FromObjectForKey:(id)arg1;
- (int)decodeInt32FromObjectForKey:(id)arg1;
- (int)decodeIntFromObjectForKey:(id)arg1;
- (BOOL)decodeBoolFromObjectForKey:(id)arg1;
- (void)encodeImageData:(id)arg1 forKey:(id)arg2;
- (void)encodePointAsString:(struct CGPoint)arg1 forKey:(id)arg2;
- (void)encodeRectAsString:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeDoubleAsObject:(double)arg1 forKey:(id)arg2;
- (void)encodeFloatAsObject:(float)arg1 forKey:(id)arg2;
- (void)encodeIntegerAsObject:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt64AsObject:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32AsObject:(int)arg1 forKey:(id)arg2;
- (void)encodeIntAsObject:(int)arg1 forKey:(id)arg2;
- (void)encodeBoolAsObject:(BOOL)arg1 forKey:(id)arg2;
@end

@interface NSColor (CHColorExtensions)
+ (id)colorWithGray:(float)arg1 alpha:(float)arg2;
+ (id)colorWithGray:(float)arg1;
- (BOOL)isWhite;
- (BOOL)fuzzyIsEqual:(id)arg1;
- (struct CGColor *)newCGColor;
@end

@interface NSColor (NSColor_String)
- (id)stringValueWithAlpha:(BOOL)arg1;
- (id)hexValue;
- (id)hexColorValueForInteger:(long long)arg1;
@end

@interface NSColor (ScreenAccuracy)
- (id)colorUsingColorSpaceWithoutConverting:(id)arg1;
- (id)colorByCappingLightness;
@end

@interface NSColor (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSColorPanel (NSColorPanelSetColor)
- (void)setColorWithoutNotifying:(id)arg1;
- (BOOL)shouldIgnoreChangeColorMessage;
@end

@interface NSControlClickFixTextField : NSTextField
{
}

- (void)mouseDown:(id)arg1;

@end

@interface NSCursor (CHCursorExtensions)
+ (id)cursorWithImageNamed:(id)arg1 hotSpot:(struct CGPoint)arg2;
+ (id)cursorWithImageNamed:(id)arg1;
@end

@interface NSCursor (NSCursorResizeExtensions)
+ (id)rotateBottomCursor;
+ (id)rotateTopCursor;
+ (id)rotateRightCursor;
+ (id)rotateLeftCursor;
+ (id)rotateTopRightCursor;
+ (id)rotateTopLeftCursor;
+ (id)rotateBottomLeftCursor;
+ (id)rotateBottomRightCursor;
+ (id)resizeBottomLeftToTopRightCursor;
+ (id)resizeTopLeftToBottomRightCursor;
+ (id)resizeVerCursor;
+ (id)resizeHorCursor;
+ (id)penCloseCursor;
+ (id)penAddCursor;
+ (id)penCursor;
+ (id)cursorWithName:(id)arg1 hotSpot:(struct CGPoint)arg2;
@end

@interface NSData (BCReceiptUtilities)
- (id)hexString;
@end

@interface NSData (Base64)
+ (id)cs_dataFromBase64String:(id)arg1;
- (id)cs_base64EncodedString;
@end

@interface NSData (Base64)
+ (id)dataWithBase64Encoding_xcd:(id)arg1;
- (id)base64Encoding_xcd;
@end

@interface NSDictionary (CHDictionaryExtensions)
- (id)mutableCopyDeep;
- (id)mapDictionary:(CDUnknownBlockType)arg1;
@end

@interface NSDictionary (DescriptionDictionary)
- (id)descriptionDictionary;
@end

@interface NSEvent (EventShouldDrag)
- (BOOL)shouldStartDrag;
@end

@interface NSFileManager (CHFileManagerExtensions)
- (BOOL)fileIsFolder:(id)arg1;
- (id)shallowSubpathsOfDirectoryAtURL:(id)arg1;
- (id)visibleSubpathsOfDirectoryWithoutGoingIntoPackages:(id)arg1;
- (id)visibleSubpathsOfDirectoryAtURLWithoutGoingIntoPackages:(id)arg1;
- (BOOL)createDirectoryIfNecessary:(id)arg1;
- (id)visibleSubpathsOfDirectory:(id)arg1;
@end

@interface NSFileWrapper (MSConvenience)
+ (id)fileWrapperFromData:(id)arg1;
+ (id)fileWrapperFromObject:(id)arg1;
+ (id)directoryFileWrapperFromDictionary:(id)arg1;
- (id)dictionaryContentsOfFileWithName:(id)arg1;
- (id)stringContentsOfFileWithName:(id)arg1;
@end

@interface NSFont (CHFontAttributes)
- (id)stringAttributesWithColor:(id)arg1;
- (id)stringAttributes;
@end

@interface NSFont (SVG)
- (void)addSVGAttributes:(id)arg1 forExporter:(id)arg2;
@end

@interface NSGradient (CHGradientExtensions)
+ (void)drawHorizontalGradientInRect:(struct CGRect)arg1 leftColor:(id)arg2 rightColor:(id)arg3;
+ (void)drawVerticalGradientInRect:(struct CGRect)arg1 topColor:(id)arg2 bottomColor:(id)arg3;
@end

@interface NSGradient (SketchModel)
- (id)easeInOutGradient;
- (id)interpolatedGradientWithExtraStops:(unsigned long long)arg1 function:(CDUnknownBlockType)arg2;
@end

@interface NSGraphicsContext (DrawKit)
@end

@interface NSImage (Chocolat)
- (id)firstBitmapImageRep;
- (id)firstBitmapImageRepOrCreateIfNecessary;
- (void)drawFlippedInRect:(struct CGRect)arg1 fraction:(double)arg2;
- (void)drawFlippedAtPoint:(struct CGPoint)arg1 fraction:(double)arg2;
- (void)drawFlippedAtPoint:(struct CGPoint)arg1;
- (id)pressedImage;
- (id)hoverImage;
- (id)selectedImage;
- (void)flipVertical;
- (void)flipHorizontal;
- (void)drawProportionallyInRect:(struct CGRect)arg1 operation:(unsigned long long)arg2 fraction:(double)arg3;
- (id)scaledImageToSize:(struct CGSize)arg1;
- (void)drawInRect:(struct CGRect)arg1 fraction:(double)arg2;
- (void)drawAtPoint:(struct CGPoint)arg1 fraction:(double)arg2;
- (void)drawAtPoint:(struct CGPoint)arg1;
@end

@interface NSImage (DrawKit)
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 fraction:(double)arg3 respectFlipped:(BOOL)arg4 colorSpace:(id)arg5;
- (id)bitSafeBitmapImageRep;
@end

@interface NSImage (MSSmallerArchiving)
+ (id)imageFromDataArchive:(id)arg1;
- (id)PDFImageRep;
- (id)EPSImageRep;
- (BOOL)hasEPSData;
- (id)bitmapData;
- (BOOL)hasPDFData;
- (id)dataForArchiving;
@end

@interface NSImage (NSImageBlocksDrawing)
+ (id)drawImageFlipped:(BOOL)arg1 withSize:(struct CGSize)arg2 withBlock:(CDUnknownBlockType)arg3;
+ (id)drawImageFlippedWithSize:(struct CGSize)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (id)drawImageWithSize:(struct CGSize)arg1 withBlock:(CDUnknownBlockType)arg2;
@end

@interface NSImage (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSMenu (CHMenuAdditions)
- (void)addItemsFromArray:(id)arg1;
- (void)insertItemsFromArray:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)isInMainMenu;
- (id)addSmallItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 submenu:(id)arg4;
- (id)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 representedObject:(id)arg4;
- (id)addItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)addItemWithTruncatedTitle:(id)arg1 small:(BOOL)arg2 target:(id)arg3 action:(SEL)arg4;
- (id)addItemWithTitle:(id)arg1 small:(BOOL)arg2 target:(id)arg3 action:(SEL)arg4;
- (id)addItemWithTitle:(id)arg1 action:(SEL)arg2;
@end

@interface NSMenu (ECLogging)
- (void)removeFromParentEC;
- (void)removeAllItemsEC;
@end

@interface NSMenu (NSMenu_Blocks)
+ (id)menuWithItems:(id)arg1;
@end

@interface NSMenuItem (CHMenuItemAdditions)
+ (id)itemWithTitle:(id)arg1 action:(SEL)arg2;
+ (id)smallItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (BOOL)isInMainMenu;
@end

@interface NSMutableArray (NSMutableArrayAdditions)
- (void)addObjectIfNotNil:(id)arg1;
- (void)onlyKeepObjectsFromClass:(Class)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)removeFirstObject;
@end

@interface NSMutableArray (NSMutableArray_CHBlocks)
+ (id)arrayWithCapacity:(unsigned long long)arg1 fill:(CDUnknownBlockType)arg2;
- (void)removeObjectsPassingTest:(CDUnknownBlockType)arg1;
@end

@interface NSMutableArray (SVGNodeAdditions)
+ (id)illegalIdentifierChars;
- (void)addAttributeWithName:(id)arg1 percentageFractionalValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 percentageValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 numberValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 pixelValue:(double)arg2;
- (void)addAttributeWithName:(id)arg1 stringValue:(id)arg2;
- (void)addAttributeForID:(id)arg1;
- (unsigned long long)indexOfAttributeWithName:(id)arg1;
@end

@interface NSMutableAttributedString (CHMutableAttributedString)
- (id)attributeOrNil:(id)arg1 atIndex:(unsigned long long)arg2;
@end

@interface NSMutableAttributedString (CHMutableAttributedStringAdditions)
- (void)appendString:(id)arg1 attributes:(id)arg2;
@end

@interface NSMutableAttributedString (Stripping)
- (void)removeUnsupportedAttributes;
@end

@interface NSMutableData (append)
- (void)jr_appendFormat:(id)arg1;
- (void)jr_appendString:(id)arg1;
@end

@interface NSMutableDictionary (CHMutableDictionaryExtensions)
- (id)valueForKey:(id)arg1 orBySettingMissingValue:(id)arg2;
- (void)addValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSMutableSet (NSMutableSetAdditions)
- (void)addObjectIfNotNil:(id)arg1;
@end

@interface NSObject (DescriptionDictionary)
- (id)descriptionDictionary;
@end

@interface NSObject (ModelDefaultValueSupport)
- (BOOL)hasDefaultValues;
@end

@interface NSObject (ModelSyncSupport)
- (BOOL)isEqualForSync:(id)arg1;
@end

@interface NSObject (NSObjectAddObservers)
- (void)removeObserver:(id)arg1 forKeyPaths:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPaths:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
@end

@interface NSObject (NSObject_SmallBlocks)
- (void)changeKey:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
@end

@interface NSObject (ParentSupport)
- (void)setAkParentObject:(id)arg1;
- (id)akParentObject;
@end

@interface NSObject (SVG)
- (id)safeCastToClass:(Class)arg1;
@end

@interface NSObject (SVGExport)
- (void)addSVGAttributes:(id)arg1 forExporter:(id)arg2;
@end

@interface NSObject (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSParagraphStyle (SVG)
- (void)addSVGAttributes:(id)arg1 forExporter:(id)arg2;
@end

@interface NSParagraphStyle (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSScreen (MSRetina)
+ (double)currentContentsScale;
+ (BOOL)isOnRetinaScreen;
- (double)currentContentsScale;
- (BOOL)isOnRetinaScreen;
@end

@interface NSSet (CHSetExtensions)
- (id)sortedArrayUsingKey:(id)arg1;
@end

@interface NSSet (NSSet_SmallBlocks)
- (id)mapSet:(CDUnknownBlockType)arg1;
- (void)each:(CDUnknownBlockType)arg1;
@end

@interface NSShadow (CHShadowExtensions)
+ (void)clearShadow;
+ (id)shadowWithColor:(id)arg1 offset:(struct CGSize)arg2 blur:(double)arg3;
@property(nonatomic) double blurRadius; // @dynamic blurRadius;
@property(nonatomic) double offsetY; // @dynamic offsetY;
@property(nonatomic) double offsetX; // @dynamic offsetX;
@end

@interface NSShadow (DrawKit)
- (struct CGRect)boundingBoxForRect:(struct CGRect)arg1 withSpread:(double)arg2;
- (id)shadowWithXOffset:(double)arg1 context:(id)arg2;
- (void)transparencyLayerForRect:(struct CGRect)arg1 context:(id)arg2 inBlock:(CDUnknownBlockType)arg3;
- (void)drawInnerShadowForPath:(id)arg1 spread:(double)arg2 context:(id)arg3;
- (double)lineWidthForStrokeType:(long long)arg1 spread:(double)arg2 lineWidth:(double)arg3;
- (void)drawShadowWithTransparencyLayerForPath:(id)arg1 strokeType:(long long)arg2 spread:(double)arg3 lineWidth:(double)arg4;
- (void)drawShadowFillAndStrokeForPath:(id)arg1 strokeType:(long long)arg2 spread:(double)arg3 lineWidth:(double)arg4;
- (void)drawShadowStrokeForPath:(id)arg1 strokeType:(long long)arg2 spread:(double)arg3 lineWidth:(double)arg4;
- (void)drawShadowFillForPath:(id)arg1 spread:(double)arg2;
- (void)drawShadowForPath:(id)arg1 type:(unsigned long long)arg2 strokeType:(long long)arg3 fillShouldClip:(BOOL)arg4 spread:(double)arg5 lineWidth:(double)arg6 context:(id)arg7;
- (void)drawShadowForBlock:(CDUnknownBlockType)arg1 rect:(struct CGRect)arg2 spread:(double)arg3 context:(id)arg4;
@end

@interface NSSplitView (CHViewAdditions)
- (id)enclosingSplitView;
@end

@interface NSString (CHStringAdditions)
- (long long)fontSizeToFitStringWithAttributes:(id)arg1 inSize:(struct CGSize)arg2 maximumFontSize:(long long)arg3;
- (void)fitStringAttributes:(id)arg1 inHeight:(long long)arg2;
- (void)fitStringAttributes:(id)arg1 inWidth:(long long)arg2;
- (void)fitStringAttributes:(id)arg1 inSize:(struct CGSize)arg2;
- (long long)fontSizeToFitStringWithAttributes:(id)arg1 inHeight:(long long)arg2;
- (long long)fontSizeToFitStringWithAttributes:(id)arg1 inWidth:(long long)arg2;
- (long long)fontSizeToFitStringWithAttributes:(id)arg1 inSize:(struct CGSize)arg2;
- (double)heightWithFont:(id)arg1 maxWidth:(double)arg2;
@end

@interface NSString (CHStringExtensions)
+ (id)stringWithNumber:(double)arg1 suffix:(id)arg2;
+ (id)stringWithFloat:(double)arg1;
+ (id)stringWithInteger:(long long)arg1;
+ (id)stringWithFirstCommonCharactersInArray:(id)arg1;
+ (id)stringWithPathComponents:(id)arg1;
- (BOOL)containsSubstring:(id)arg1;
- (id)trimmedString;
- (id)stringWithFirstCharacterLowercase;
- (BOOL)endsWith:(id)arg1;
- (BOOL)startsWith:(id)arg1;
- (id)stringByAppendingPathComponents:(id)arg1;
- (id)stringByDeletingSuffix:(id)arg1;
- (id)stringByDeletingPrefix:(id)arg1;
- (id)stringByPrefixingIfNessary:(id)arg1;
@end

@interface NSString (CHStringPathExtensions)
- (id)expandTilde;
- (id)withExtension:(id)arg1;
- (id)withoutExtension;
- (id)extension;
- (id)lastChild;
- (id)child:(id)arg1;
- (id)parent;
@end

@interface NSString (ECCore)
- (BOOL)matchesString:(id)arg1 divergingAtLine1:(unsigned long long *)arg2 andLine2:(unsigned long long *)arg3 diverged:(id *)arg4 expected:(id *)arg5 window:(long long)arg6;
- (BOOL)matchesString:(id)arg1 divergingAtLine1:(unsigned long long *)arg2 andLine2:(unsigned long long *)arg3 diverged:(id *)arg4 expected:(id *)arg5;
- (id)linesFrom:(long long)arg1 to:(long long)arg2 lines:(id)arg3;
- (BOOL)matchesString:(id)arg1 divergingAtLine:(unsigned long long *)arg2 after:(id *)arg3 diverged:(id *)arg4 expected:(id *)arg5;
- (BOOL)matchesString:(id)arg1 divergingAfter:(id *)arg2 atIndex:(unsigned long long *)arg3 divergentChar:(unsigned short *)arg4 expectedChar:(unsigned short *)arg5;
- (id)firstLines:(unsigned long long)arg1;
- (id)lastLines:(unsigned long long)arg1;
- (id)stringBySplittingMixedCaps;
- (id)componentsSeparatedByMixedCaps;
@end

@interface NSString (ModelDefaultValueSupport)
- (BOOL)hasDefaultValues;
@end

@interface NSString (NSIntegerString)
+ (id)stringWithInt:(long long)arg1 suffix:(id)arg2;
@end

@interface NSString (NSString_Color)
+ (id)staticColorDictionary;
- (id)colorValue;
@end

@interface NSString (NSString_Splitting)
- (BOOL)containsWordsInString:(id)arg1;
- (id)stringbyDeletingLastWord;
- (id)stringByAppendingWord:(id)arg1;
- (id)stringByPrependingWord:(id)arg1;
- (id)lastWord;
- (id)words;
- (id)simpleWords;
@end

@interface NSString (SVG)
- (id)cssStyleAttributes;
- (id)svgURL;
@end

@interface NSString (UIStringDrawingCompatibility)
- (struct CGSize)sizeWithFont:(id)arg1;
- (void)drawCenteredAtPoint:(struct CGPoint)arg1 withFont:(id)arg2 color:(id)arg3;
- (void)drawAtPoint:(struct CGPoint)arg1 withFont:(id)arg2;
@end

@interface NSString (URLEncoding)
- (id)cs_urlEncodedStringWithEncoding:(unsigned long long)arg1;
- (id)cs_urlEncodedString;
@end

@interface NSTextStorage (CHTextStorage)
@end

@interface NSTextStorage (MSCalculateBounds)
- (struct CGRect)computeFlexibleLayout;
- (struct CGRect)calculateFlexibleBounds:(struct CGRect)arg1;
- (struct CGRect)computeFixedLayout;
- (struct CGRect)calculateFixedBounds:(struct CGRect)arg1;
- (struct CGRect)boundsForTextBehaviour:(long long)arg1 original:(struct CGRect)arg2;
@end

@interface NSTextStorage (MSList)
- (id)paragraphStyle;
- (id)attributeForKey:(id)arg1;
- (id)stringByStrippingMarkers:(id)arg1 oldList:(id)arg2 index:(long long)arg3;
- (id)stringByStrippingNewlinesSpacesAndTabs:(id)arg1;
- (id)stripListMarkers:(id)arg1 oldList:(id)arg2 lineIndex:(long long)arg3;
- (id)strippedLinesFromTextStorage:(id)arg1 oldList:(id)arg2;
- (id)combineLines:(id)arg1 intoList:(id)arg2;
- (id)normalTabStops;
- (id)listTabStops;
- (void)updateListFrom:(id)arg1 toList:(id)arg2;
- (void)updateListStyle:(id)arg1;
- (id)currentListStyle;
@end

@interface NSTextStorage (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSTimer (NSTimer_Blocks)
+ (void)msExecuteSimpleBlock:(id)arg1;
+ (id)scheduledTimerWithTimeInterval:(double)arg1 repeats:(BOOL)arg2 block:(CDUnknownBlockType)arg3;
@end

@interface NSToolbar (CHToolbarExtensions)
- (id)itemWithIdentifier:(id)arg1;
@end

@interface NSTrackingArea (CHTrackingAreaExtensions)
+ (unsigned long long)defaultOptions;
+ (id)trackingAreaWithOptions:(unsigned long long)arg1 owner:(id)arg2;
+ (id)mouseEnterExitTrackingArea:(id)arg1;
@end

@interface NSURL (CHStringPathExtensions)
- (id)withExtension:(id)arg1;
@end

@interface NSURL (CSAPI)
- (id)cs_queryValueForKey:(id)arg1;
- (id)cs_queryValuesForKeys:(id)arg1 error:(id *)arg2;
@end

@interface NSURLRequest (postForm)
+ (id)requestWithURL:(id)arg1 postForm:(id)arg2;
@end

@interface NSUserDefaults (CHUserDefaultsAdditions)
+ (BOOL)registerBool:(BOOL)arg1 forKey:(id)arg2;
+ (float)registerFloat:(double)arg1 forKey:(id)arg2;
+ (long long)registerInteger:(long long)arg1 forKey:(id)arg2;
+ (id)registerObject:(id)arg1 forKey:(id)arg2;
@end

@interface NSUserDefaults (NSUserDefaultsAdditions)
- (void)registerObject:(id)arg1 forKey:(id)arg2;
- (void)registerColor:(id)arg1 forKey:(id)arg2;
- (void)registerFloat:(float)arg1 forKey:(id)arg2;
- (void)registerBool:(BOOL)arg1 forKey:(id)arg2;
- (void)registerInt:(int)arg1 forKey:(id)arg2;
- (id)colorForKey:(id)arg1;
- (void)setColor:(id)arg1 forKey:(id)arg2;
@end

@interface NSValue (TreeAsDictionarySupport)
- (id)treeAsDictionary;
@end

@interface NSView (Block_Animation)
- (void)animateToFrameOriginX:(long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)animateToFrameOrigin:(struct CGPoint)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)animateToFrameOriginX:(long long)arg1;
@end

@interface NSView (CHViewAdditions)
- (id)enclosingSplitView;
- (id)imageRepresentation;
- (void)setNeedsDisplay;
- (void)setFrameOriginY:(double)arg1;
- (void)setFrameOriginX:(double)arg1;
- (void)setFrameWidth:(double)arg1;
- (void)setFrameHeight:(double)arg1;
@end

@interface NSViewController (LoadViewSwizzling)
@end

@interface NSWindow (Chocolat)
- (struct CGPoint)convertPointFromScreen:(struct CGPoint)arg1;
@end

@interface NSWorkspace (CHWorkspaceAdditions)
- (id)applicationSupportDirectoryWithSubDirectory:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)applicationSupportDirectory;
@end

@interface NSXMLDocument (SVGDocument)
+ (id)SVGDocumentWithBezierPath:(id)arg1;
- (id)bezierPathElement:(id)arg1;
- (id)data;
- (id)description;
- (id)createSVGForBezierPath:(id)arg1;
@end

@interface NSXMLElement (SVG)
- (id)cssClassNamesWithBase:(id)arg1;
- (id)urlLink;
- (id)simplifyAttributesIgnoringElements:(id)arg1 attributes:(id)arg2;
- (void)removeAttributesMatchingParentIgnoringAttributes:(id)arg1;
- (id)attributesWithStyleMergedDefaults:(id)arg1;
- (id)nodeOrParentNodeWithName:(id)arg1;
- (id)colorFromAttributeWithName:(id)arg1;
- (double)doubleValueFromPercentageAttributeWithName:(id)arg1 orDefault:(double)arg2;
- (double)doubleValueFromPercentageAttributeWithName:(id)arg1 alternate:(id)arg2;
- (double)doubleValueFromPercentageAttributeWithName:(id)arg1;
- (struct CGRect)rectValue;
- (struct CGRect)rectValueFromAttributeWithName:(id)arg1;
- (long long)intValueFromAttributeWithName:(id)arg1;
- (id)stringFromAttributeWithName:(id)arg1;
- (id)numbersFromAttributeWithName:(id)arg1 scale:(double)arg2;
- (id)numbersFromAttributeWithName:(id)arg1;
- (double)doubleValueFromAttributeWithName:(id)arg1 scale:(double)arg2;
- (double)doubleValueFromAttributeWithName:(id)arg1 alternate:(id)arg2;
- (double)doubleValueFromAttributeWithName:(id)arg1;
- (id)numberFromAttributeWithName:(id)arg1 scale:(double)arg2;
- (id)numberFromAttributeWithName:(id)arg1;
- (BOOL)gotAttributeWithName:(id)arg1;
@end

@interface NSXMLNode (SVG)
+ (id)attributeWithName:(id)arg1 percentageFractionalValue:(double)arg2;
+ (id)attributeWithName:(id)arg1 percentageValue:(double)arg2;
+ (id)attributeWithName:(id)arg1 numberValue:(double)arg2;
+ (id)attributeWithName:(id)arg1 pixelValue:(double)arg2;
+ (id)numbersFromString:(id)arg1 scale:(double)arg2;
+ (id)numberFromString:(id)arg1 scale:(double)arg2;
+ (double)doubleFromString:(id)arg1 scale:(double)arg2;
- (id)cssClassNamesWithBase:(id)arg1;
- (id)simplifyAttributesIgnoringElements:(id)arg1 attributes:(id)arg2;
- (id)numberValuesWithScale:(double)arg1;
- (id)numberValues;
- (struct CGRect)rectValue;
- (long long)integerValue;
- (double)doubleValueWithScale:(double)arg1;
- (double)doubleValue;
- (id)numberValueWithScale:(double)arg1;
- (id)numberValue;
- (double)doubleValueFromAttributeWithName:(id)arg1;
@end

@interface PDFFunction : NSObject
{
    NSData *_samples;	// 8 = 0x8
    NSDictionary *_parameters;	// 16 = 0x10
    unsigned long long _numberOfInputComponents;	// 24 = 0x18
    unsigned long long _numberOfOutputComponents;	// 32 = 0x20
    unsigned long long _bitsPerSample;	// 40 = 0x28
    unsigned long long _bytesPerSampleComponent;	// 48 = 0x30
    unsigned long long _bytesPerSample;	// 56 = 0x38
    unsigned long long _numberOfSamples;	// 64 = 0x40
    NSArray *_range;	// 72 = 0x48
    NSArray *_domain;	// 80 = 0x50
}

+ (id)functionWithInfo:(id)arg1;
@property(retain, nonatomic) NSArray *domain; // @synthesize domain=_domain;
@property(retain, nonatomic) NSArray *range; // @synthesize range=_range;
@property(nonatomic) unsigned long long numberOfSamples; // @synthesize numberOfSamples=_numberOfSamples;
@property(nonatomic) unsigned long long bytesPerSample; // @synthesize bytesPerSample=_bytesPerSample;
@property(nonatomic) unsigned long long bytesPerSampleComponent; // @synthesize bytesPerSampleComponent=_bytesPerSampleComponent;
@property(nonatomic) unsigned long long bitsPerSample; // @synthesize bitsPerSample=_bitsPerSample;
@property(nonatomic) unsigned long long numberOfOutputComponents; // @synthesize numberOfOutputComponents=_numberOfOutputComponents;
@property(nonatomic) unsigned long long numberOfInputComponents; // @synthesize numberOfInputComponents=_numberOfInputComponents;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(retain, nonatomic) NSData *samples; // @synthesize samples=_samples;
- (void).cxx_destruct;
- (void)mapInputs:(double [16])arg1 toOutputs:(double [16])arg2;
- (void)setupStitchedWithDictionary:(id)arg1;
- (double)valueForX:(double)arg1 c0:(double)arg2 c1:(double)arg3 n:(double)arg4;
- (void)setupExponentialWithDictionary:(id)arg1;
- (void)extractParameters:(id)arg1;
- (void)setupSampledWithDictionary:(id)arg1;
- (void)setupWithDictionary:(id)arg1;
- (void)setupWithStream:(id)arg1;
- (id)initWithInfo:(id)arg1;

@end

@interface PDFOperatorInfo : NSObject
{
    SEL _selector;	// 8 = 0x8
    CDUnknownFunctionPointerType _callback;	// 16 = 0x10
    NSString *_operatorName;	// 24 = 0x18
    NSString *_methodName;	// 32 = 0x20
}

@property(retain, nonatomic) NSString *methodName; // @synthesize methodName=_methodName;
@property(retain, nonatomic) NSString *operatorName; // @synthesize operatorName=_operatorName;
@property(nonatomic) CDUnknownFunctionPointerType callback; // @synthesize callback=_callback;
@property(nonatomic) SEL selector; // @synthesize selector=_selector;
- (void).cxx_destruct;
- (id)description;

@end

@interface PDFParser : NSObject <PDFParser>
{
    NSString *_name;	// 8 = 0x8
    PDFScanner *_scanner;	// 16 = 0x10
    struct CGPDFDocument *_document;	// 24 = 0x18
}

@property(nonatomic) struct CGPDFDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) PDFScanner *scanner; // @synthesize scanner=_scanner;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)parseWithProgress:(CDUnknownBlockType)arg1;
- (unsigned long long)pageCount;
- (void)loadDocumentFromData:(id)arg1;
- (void)loadDocumentFromURL:(id)arg1;
- (id)initWithScanner:(id)arg1;

@end

@interface PDFPattern : NSObject
{
    unsigned long long _shadingType;	// 8 = 0x8
    PDFFunction *_function;	// 16 = 0x10
    id _space;	// 24 = 0x18
    NSArray *_coords;	// 32 = 0x20
}

+ (id)patternWithResource:(id)arg1;
@property(retain, nonatomic) NSArray *coords; // @synthesize coords=_coords;
@property(retain, nonatomic) id space; // @synthesize space=_space;
@property(retain, nonatomic) PDFFunction *function; // @synthesize function=_function;
@property(nonatomic) unsigned long long shadingType; // @synthesize shadingType=_shadingType;
- (void).cxx_destruct;
- (void)setupFromDictionary:(id)arg1;
- (void)setupFromStream:(id)arg1;
- (id)initWithResource:(id)arg1;

@end

@interface PDFScanner : NSObject
{
    NSDictionary *_dictionary;	// 8 = 0x8
    struct CGPDFOperatorTable *_table;	// 16 = 0x10
    struct CGPDFScanner *_scanner;	// 24 = 0x18
    struct CGPDFContentStream *_stream;	// 32 = 0x20
}

+ (id)convertObject:(union CGPDFObject *)arg1;
+ (id)convertDictionary:(struct CGPDFDictionary *)arg1;
+ (id)convertArray:(struct CGPDFArray *)arg1;
@property(nonatomic) struct CGPDFContentStream *stream; // @synthesize stream=_stream;
@property(nonatomic) struct CGPDFScanner *scanner; // @synthesize scanner=_scanner;
@property(nonatomic) struct CGPDFOperatorTable *table; // @synthesize table=_table;
@property(retain, nonatomic) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void).cxx_destruct;
- (void)operatorglyphBoundsWithInfo:(id)arg1;
- (void)registerOperatorglyphBounds;
- (void)operatordeclareGlyphWithInfo:(id)arg1;
- (void)registerOperatordeclareGlyph;
- (void)operatorendTextWithInfo:(id)arg1;
- (void)registerOperatorendText;
- (void)operatortextArrayWithInfo:(id)arg1;
- (void)registerOperatortextArray;
- (void)operatortextWithInfo:(id)arg1;
- (void)registerOperatortext;
- (void)operatortextSetMatrixWithInfo:(id)arg1;
- (void)registerOperatortextSetMatrix;
- (void)operatornextLineAndTextWithSpacingWithInfo:(id)arg1;
- (void)registerOperatornextLineAndTextWithSpacing;
- (void)operatornextLineAndTextWithInfo:(id)arg1;
- (void)registerOperatornextLineAndText;
- (void)operatornextLineWithInfo:(id)arg1;
- (void)registerOperatornextLine;
- (void)operatortextNextLineSetLeadingWithInfo:(id)arg1;
- (void)registerOperatortextNextLineSetLeading;
- (void)operatortextNextLineWithInfo:(id)arg1;
- (void)registerOperatortextNextLine;
- (void)operatortextModeWithInfo:(id)arg1;
- (void)registerOperatortextMode;
- (void)operatortextScalingWithInfo:(id)arg1;
- (void)registerOperatortextScaling;
- (void)operatortextRiseWithInfo:(id)arg1;
- (void)registerOperatortextRise;
- (void)operatortextLeadingWithInfo:(id)arg1;
- (void)registerOperatortextLeading;
- (void)operatortextWordSpacingWithInfo:(id)arg1;
- (void)registerOperatortextWordSpacing;
- (void)operatortextCharacterSpacingWithInfo:(id)arg1;
- (void)registerOperatortextCharacterSpacing;
- (void)operatorsetFontWithInfo:(id)arg1;
- (void)registerOperatorsetFont;
- (void)operatorbeginTextWithInfo:(id)arg1;
- (void)registerOperatorbeginText;
- (void)operatorendImageWithInfo:(id)arg1;
- (void)registerOperatorendImage;
- (void)operatorbeginImageWithInfo:(id)arg1;
- (void)registerOperatorbeginImage;
- (void)operatordefineMarkedContentPointWithInfo:(id)arg1;
- (void)registerOperatordefineMarkedContentPoint;
- (void)operatorendMarkedContentWithInfo:(id)arg1;
- (void)registerOperatorendMarkedContent;
- (void)operatorbeginMarkedContentWithInfo:(id)arg1;
- (void)registerOperatorbeginMarkedContent;
- (void)operatorbeginMarkedContentWithPropertyWithInfo:(id)arg1;
- (void)registerOperatorbeginMarkedContentWithProperty;
- (void)operatorendCompatibilityWithInfo:(id)arg1;
- (void)registerOperatorendCompatibility;
- (void)operatorbeginCompatibilityWithInfo:(id)arg1;
- (void)registerOperatorbeginCompatibility;
- (void)operatorfillWithShadingPatternWithInfo:(id)arg1;
- (void)registerOperatorfillWithShadingPattern;
- (void)operatorfillEvenOddWithInfo:(id)arg1;
- (void)registerOperatorfillEvenOdd;
- (void)operatorfillObsoleteWithInfo:(id)arg1;
- (void)registerOperatorfillObsolete;
- (void)operatorfillWithInfo:(id)arg1;
- (void)registerOperatorfill;
- (void)operatorfillStrokeEvenOddWithInfo:(id)arg1;
- (void)registerOperatorfillStrokeEvenOdd;
- (void)operatorfillStrokeWithInfo:(id)arg1;
- (void)registerOperatorfillStroke;
- (void)operatorcloseFillStrokeEvenOddWithInfo:(id)arg1;
- (void)registerOperatorcloseFillStrokeEvenOdd;
- (void)operatorcloseFillStrokeWithInfo:(id)arg1;
- (void)registerOperatorcloseFillStroke;
- (void)operatorclipEvenOddWithInfo:(id)arg1;
- (void)registerOperatorclipEvenOdd;
- (void)operatorclipWithInfo:(id)arg1;
- (void)registerOperatorclip;
- (void)operatorsetFlatnessToleranceWithInfo:(id)arg1;
- (void)registerOperatorsetFlatnessTolerance;
- (void)operatorsetFillCMYKWithInfo:(id)arg1;
- (void)registerOperatorsetFillCMYK;
- (void)operatorsetStrokeCMYKWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeCMYK;
- (void)operatorsetFillRGBWithInfo:(id)arg1;
- (void)registerOperatorsetFillRGB;
- (void)operatorsetStrokeRGBWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeRGB;
- (void)operatorsetFillColourNameWithInfo:(id)arg1;
- (void)registerOperatorsetFillColourName;
- (void)operatorsetStrokeColourNameWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeColourName;
- (void)operatorsetFillColourWithInfo:(id)arg1;
- (void)registerOperatorsetFillColour;
- (void)operatorsetStrokeColourWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeColour;
- (void)operatorsetStrokeGreyWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeGrey;
- (void)operatorsetFillGreyWithInfo:(id)arg1;
- (void)registerOperatorsetFillGrey;
- (void)operatorsetColourRenderingIntentWithInfo:(id)arg1;
- (void)registerOperatorsetColourRenderingIntent;
- (void)operatorsetFillColourSpaceWithInfo:(id)arg1;
- (void)registerOperatorsetFillColourSpace;
- (void)operatorsetStrokeColourSpaceWithInfo:(id)arg1;
- (void)registerOperatorsetStrokeColourSpace;
- (void)operatorstrokePathWithInfo:(id)arg1;
- (void)registerOperatorstrokePath;
- (void)operatorcloseAndStrokePathWithInfo:(id)arg1;
- (void)registerOperatorcloseAndStrokePath;
- (void)operatorsetMitreLimitWithInfo:(id)arg1;
- (void)registerOperatorsetMitreLimit;
- (void)operatorsetLineDashWithInfo:(id)arg1;
- (void)registerOperatorsetLineDash;
- (void)operatorsetLineCapWithInfo:(id)arg1;
- (void)registerOperatorsetLineCap;
- (void)operatorsetLineJoinWithInfo:(id)arg1;
- (void)registerOperatorsetLineJoin;
- (void)operatorsetLineWidthWithInfo:(id)arg1;
- (void)registerOperatorsetLineWidth;
- (void)operatorrestoreGraphicStateWithInfo:(id)arg1;
- (void)registerOperatorrestoreGraphicState;
- (void)operatorsaveGraphicStateWithInfo:(id)arg1;
- (void)registerOperatorsaveGraphicState;
- (void)operatorsetGraphicStateWithInfo:(id)arg1;
- (void)registerOperatorsetGraphicState;
- (void)operatorconcatMatrixWithInfo:(id)arg1;
- (void)registerOperatorconcatMatrix;
- (void)operatorprocessXObjectWithInfo:(id)arg1;
- (void)registerOperatorprocessXObject;
- (void)operatordefineMarkedPointWithInfo:(id)arg1;
- (void)registerOperatordefineMarkedPoint;
- (void)operatorappendRectangleWithInfo:(id)arg1;
- (void)registerOperatorappendRectangle;
- (void)operatorendPathWithInfo:(id)arg1;
- (void)registerOperatorendPath;
- (void)operatorclosePathWithInfo:(id)arg1;
- (void)registerOperatorclosePath;
- (void)operatorcurveToFinalPointReplicatedWithInfo:(id)arg1;
- (void)registerOperatorcurveToFinalPointReplicated;
- (void)operatorcurveToInitialPointReplicatedWithInfo:(id)arg1;
- (void)registerOperatorcurveToInitialPointReplicated;
- (void)operatorcurveToWithInfo:(id)arg1;
- (void)registerOperatorcurveTo;
- (void)operatorlineToWithInfo:(id)arg1;
- (void)registerOperatorlineTo;
- (void)operatormoveToWithInfo:(id)arg1;
- (void)registerOperatormoveTo;
- (void)glyphBounds;
- (void)declareGlyph;
- (void)endText;
- (void)offset:(double)arg1;
- (void)appendText:(id)arg1;
- (void)nextLineWithOffset:(struct CGPoint)arg1;
- (void)setTextMatrix:(id)arg1;
- (void)endImage;
- (void)imageData;
- (void)beginImage;
- (void)endMarkedContent;
- (void)beginMarkedContent;
- (void)beginMarkedContentWithProperty;
- (void)endCompatibility;
- (void)beginCompatibility;
- (void)fillWithShadingPattern:(id)arg1;
- (void)fillWithWinding:(unsigned long long)arg1;
- (void)strokeWithWinding:(unsigned long long)arg1;
- (void)clipWithWinding:(unsigned long long)arg1;
- (void)setMitreLimit:(double)arg1;
- (void)concatMatrix:(id)arg1;
- (void)restoreGraphicState;
- (void)saveGraphicState;
- (void)processImage:(id)arg1 info:(id)arg2;
- (void)processForm:(id)arg1;
- (void)processXObject:(id)arg1;
- (void)defineMarkedPoint;
- (void)endPath;
- (void)closePath;
- (void)setTextMode:(unsigned long long)arg1;
- (void)setTextScale:(double)arg1;
- (void)setTextRise:(double)arg1;
- (void)setTextLeading:(double)arg1;
- (void)setTextWordSpacing:(double)arg1;
- (void)setTextCharacterSpacing:(double)arg1;
- (void)setFontName:(id)arg1 size:(double)arg2;
- (void)beginText;
- (void)setOverprintMode:(long long)arg1;
- (void)setStrokeAlphaConstant:(double)arg1;
- (void)setFillAlphaConstant:(double)arg1;
- (void)setStrokePattern:(id)arg1;
- (void)setFillPattern:(id)arg1;
- (void)setStrokeColour:(id)arg1;
- (void)setFillColour:(id)arg1;
- (void)setColourRenderingIntent:(int)arg1;
- (void)setFillColourSpace:(id)arg1 mapping:(id)arg2;
- (void)setStrokeColourSpace:(id)arg1 mapping:(id)arg2;
- (void)setLineDash:(id)arg1 phase:(long long)arg2;
- (void)setLineCap:(unsigned long long)arg1;
- (void)setLineJoin:(unsigned long long)arg1;
- (void)setLineWidth:(double)arg1;
- (void)appendRectangle:(struct CGRect)arg1;
- (void)curveTo:(struct CGPoint)arg1 control1:(struct CGPoint)arg2 control2:(struct CGPoint)arg3;
- (void)lineTo:(struct CGPoint)arg1;
- (void)moveTo:(struct CGPoint)arg1;
- (int)currentRenderingIntent;
- (id)currentStrokeColorSpaceMapping;
- (id)currentStrokeColorSpace;
- (id)currentFillColorSpaceMapping;
- (id)currentFillColorSpace;
- (double)currentLeading;
- (struct CGPoint)currentPoint;
- (id)tryToPopObject;
- (id)popObject;
- (id)popArray;
- (id)popName;
- (id)popString;
- (id)popNumber;
- (BOOL)popBool;
- (long long)popInteger;
- (double)popDouble;
- (id)popPattern;
- (id)popColorForColorSpace:(id)arg1 mapping:(id)arg2;
- (id)popCMYKColor;
- (id)popRGBColor;
- (id)popTransform;
- (struct CGPoint)popPoint;
- (struct CGImage *)newImageFromStream:(id)arg1 details:(id *)arg2;
- (void)interpretObjectStream:(id)arg1;
- (void)interpretImageStream:(id)arg1;
- (id)data:(id)arg1 filteredWith:(id)arg2;
- (id)inflate:(id)arg1;
- (int)renderingIntentNamed:(id)arg1;
- (id)colorSpaceWithParameters:(id)arg1 mapping:(id *)arg2;
- (id)colorSpaceWithInfo:(id)arg1 mapping:(id *)arg2;
- (id)colorSpaceNamed:(id)arg1 mapping:(id *)arg2;
- (id)defaultColorSpaceNamed:(id)arg1;
- (id)resourceNamed:(id)arg1 ofKind:(id)arg2;
- (void)scanStream:(struct CGPDFContentStream *)arg1 dictionary:(id)arg2;
- (void)scanPage:(struct CGPDFPage *)arg1 parser:(id)arg2;
- (id)addOperator:(CDUnknownFunctionPointerType)arg1 name:(id)arg2 description:(id)arg3;
- (void)registerAllOperators;
- (void)logUnusedParametersWithInfo:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PDFStream : NSObject
{
    int _format;	// 8 = 0x8
    struct CGPDFStream *_stream;	// 16 = 0x10
    NSData *_data;	// 24 = 0x18
    NSDictionary *_dictionary;	// 32 = 0x20
}

@property(retain, nonatomic) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(nonatomic) int format; // @synthesize format=_format;
@property(nonatomic) struct CGPDFStream *stream; // @synthesize stream=_stream;
- (void).cxx_destruct;
- (id)initWithStream:(struct CGPDFStream *)arg1;

@end

@interface PXListDocumentView : NSView
{
    PXListView *_listView;	// 152 = 0x98
    unsigned long long _dropHighlight;	// 160 = 0xa0
}

@property(nonatomic) unsigned long long dropHighlight; // @synthesize dropHighlight=_dropHighlight;
@property(nonatomic) __weak PXListView *listView; // @synthesize listView=_listView;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)isFlipped;

@end

@interface PXListView : NSScrollView
{
    id <PXListViewDelegate> _delegate;	// 232 = 0xe8
    NSMutableArray *_reusableCells;	// 240 = 0xf0
    NSMutableArray *_visibleCells;	// 248 = 0xf8
    struct _NSRange _currentRange;	// 256 = 0x100
    unsigned long long _numberOfRows;	// 272 = 0x110
    NSMutableIndexSet *_selectedRows;	// 280 = 0x118
    struct _NSRange _visibleRange;	// 288 = 0x120
    double _totalHeight;	// 304 = 0x130
    double *_cellYOffsets;	// 312 = 0x138
    double _cellSpacing;	// 320 = 0x140
    BOOL _allowsEmptySelection;	// 328 = 0x148
    BOOL _allowsMultipleSelection;	// 329 = 0x149
    long long _lastSelectedRow;	// 336 = 0x150
    BOOL _verticalMotionCanBeginDrag;	// 344 = 0x158
    BOOL _usesLiveResize;	// 345 = 0x159
    double _widthPriorToResize;	// 352 = 0x160
    unsigned long long _dropRow;	// 360 = 0x168
    unsigned long long _dropHighlight;	// 368 = 0x170
}

@property(nonatomic) BOOL usesLiveResize; // @synthesize usesLiveResize=_usesLiveResize;
@property(nonatomic) BOOL verticalMotionCanBeginDrag; // @synthesize verticalMotionCanBeginDrag=_verticalMotionCanBeginDrag;
@property(nonatomic) BOOL allowsEmptySelection; // @synthesize allowsEmptySelection=_allowsEmptySelection;
@property(nonatomic) BOOL allowsMultipleSelection; // @synthesize allowsMultipleSelection=_allowsMultipleSelection;
@property(nonatomic) double cellSpacing; // @synthesize cellSpacing=_cellSpacing;
- (void).cxx_destruct;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)windowSizing:(id)arg1;
- (void)viewDidEndLiveResize;
- (void)layoutCellsForResizeEvent;
- (void)viewWillStartLiveResize;
- (void)scrollRowToVisible:(unsigned long long)arg1;
- (void)contentViewBoundsDidChange:(id)arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)layoutCell:(id)arg1 atRow:(unsigned long long)arg2;
- (void)layoutCells;
- (void)cacheCellLayout;
- (struct CGRect)rectOfRow:(unsigned long long)arg1;
- (struct CGRect)contentViewRect;
- (void)postSelectionDidChangeNotification;
- (void)deselectRows;
- (void)deselectRowIndexes:(id)arg1;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
@property(retain, nonatomic) NSIndexSet *selectedRows;
@property(nonatomic) unsigned long long selectedRow;
- (void)deselectAll:(id)arg1;
- (void)updateCells;
- (void)addCellsFromVisibleRange;
- (id)visibleCellsForRowIndexes:(id)arg1;
- (id)cellForRowAtIndex:(unsigned long long)arg1;
- (id)visibleCellForRow:(unsigned long long)arg1;
- (struct _NSRange)visibleRange;
- (id)visibleCells;
- (id)dequeueCellWithReusableIdentifier:(id)arg1;
- (void)enqueueCell:(id)arg1;
- (unsigned long long)numberOfRows;
- (void)reloadData;
- (void)reloadRowAtIndex:(long long)arg1;
@property(nonatomic) __weak id <PXListViewDelegate> delegate;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setDropRow:(unsigned long long)arg1 dropHighlight:(unsigned long long)arg2;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)draggingEnded:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)cellForDropHighlight:(unsigned long long *)arg1 row:(unsigned long long *)arg2;
- (unsigned long long)indexOfRowAtPoint:(struct CGPoint)arg1 returningProposedDropHighlight:(unsigned long long *)arg2;
- (void)setShowsDropHighlight:(BOOL)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 event:(id)arg2 clickedCell:(id)arg3 offset:(struct CGPoint *)arg4;
- (BOOL)attemptDragWithMouseDown:(id)arg1 inCell:(id)arg2;
- (void)handleMouseDownOutsideCells:(id)arg1;
- (void)handleMouseDown:(id)arg1 inCell:(id)arg2;
- (void)handleMouseDragged:(id)arg1 inCell:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)canBecomeKeyView;

@end

@interface PXListViewCell : NSView
{
    NSString *_reusableIdentifier;	// 152 = 0x98
    PXListView *_listView;	// 160 = 0xa0
    unsigned long long _row;	// 168 = 0xa8
    unsigned long long _dropHighlight;	// 176 = 0xb0
}

+ (id)cellLoadedFromNibNamed:(id)arg1 bundle:(id)arg2 reusableIdentifier:(id)arg3;
+ (id)cellLoadedFromNibNamed:(id)arg1 reusableIdentifier:(id)arg2;
@property(nonatomic) unsigned long long row; // @synthesize row=_row;
@property(copy, nonatomic) NSString *reusableIdentifier; // @synthesize reusableIdentifier=_reusableIdentifier;
@property(nonatomic) unsigned long long dropHighlight; // @synthesize dropHighlight=_dropHighlight;
@property(nonatomic) __weak PXListView *listView; // @synthesize listView=_listView;
- (void).cxx_destruct;
- (void)selectionDidChange;
- (BOOL)accessibilityIsIgnored;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (void)drawRect:(struct CGRect)arg1;
@property(readonly, nonatomic, getter=isSelected) BOOL selected;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithReusableIdentifier:(id)arg1;

@end

@interface SVGBasicShape : _SVGBasicShape
{
}

- (id)shapeGroupForLayer:(id)arg1;

@end

@interface SVGCircleShape : _SVGCircleShape
{
}

- (void)processSelf:(id)arg1;
- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGClipPath : _SVGClipPath
{
}

- (BOOL)dontCollapse;
- (BOOL)containsDrawables;

@end

@interface SVGColor : NSObject
{
    double _red;	// 8 = 0x8
    double _green;	// 16 = 0x10
    double _blue;	// 24 = 0x18
    double _alpha;	// 32 = 0x20
}

+ (id)colorWithSVGString:(id)arg1;
+ (id)namedColor:(id)arg1;
+ (id)rgbColorRed:(long long)arg1 green:(long long)arg2 blue:(long long)arg3;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithNSColor:(id)arg1;
+ (id)availableRGBColorSpaces;
+ (id)staticColorDictionary;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(nonatomic) double blue; // @synthesize blue=_blue;
@property(nonatomic) double green; // @synthesize green=_green;
@property(nonatomic) double red; // @synthesize red=_red;
- (id)stringValueWithAlpha:(BOOL)arg1 alphaMultiplication:(double)arg2;
- (id)stringValueWithAlpha:(BOOL)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)svgRepresentation;
- (id)hexValue;

@end

@interface SVGDescription : SVGElement
{
}

+ (id)elementOfType:(id)arg1 xml:(id)arg2 importer:(id)arg3 parent:(id)arg4;

@end

@interface SVGDrawableElement : _SVGDrawableElement
{
    NSXMLElement *_deferredClipping;	// 8 = 0x8
}

+ (id)styleDefaults;
@property(retain, nonatomic) NSXMLElement *deferredClipping; // @synthesize deferredClipping=_deferredClipping;
- (void).cxx_destruct;
- (id)drawableParent;
- (BOOL)containsDrawables;
- (BOOL)dontCollapse;
- (id)svgAttributesDescription;
- (void)processStyles:(id)arg1 parent:(id)arg2;
- (void)processClipping:(id)arg1 parent:(id)arg2;
- (unsigned long long)processChild:(id)arg1 index:(unsigned long long)arg2;
- (void)processDeferredClippingAtIndex:(unsigned long long)arg1;
- (void)processStyles:(id)arg1;
- (void)processSelf:(id)arg1;
- (id)initWithImporter:(id)arg1 xml:(id)arg2;
- (id)gradientFromSVGGradient:(id)arg1 layer:(id)arg2;
- (void)applyEffectsToLayer:(id)arg1;
- (void)applyScaling:(double)arg1 recursivelyToStyleOfLayer:(id)arg2 parentStyle:(id)arg3;
- (void)applyTransform:(id)arg1 toLayer:(id)arg2;
- (void)adjustSizeForChildrenOfLayer:(id)arg1 parentLayer:(id)arg2;
- (id)adjustOwnLayer:(id)arg1 parentLayer:(id)arg2;
- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)emptyLayerWithParentLayer:(id)arg1;
- (id)makeOwnLayerWithParentLayer:(id)arg1;
- (id)makeLayerGroupWithParentLayer:(id)arg1;
- (id)makeLayerWithParentLayer:(id)arg1 progress:(CDUnknownBlockType)arg2;

@end

@interface SVGElement : _SVGElement
{
    NSXMLElement *_xml;	// 8 = 0x8
    SVGImporter *_importer;	// 16 = 0x10
}

+ (id)elementOfType:(id)arg1 xml:(id)arg2 importer:(id)arg3 parent:(id)arg4;
@property(retain, nonatomic) SVGImporter *importer; // @synthesize importer=_importer;
@property(retain, nonatomic) NSXMLElement *xml; // @synthesize xml=_xml;
- (void).cxx_destruct;
- (id)styleAttributesForElement:(id)arg1 defaults:(id)arg2;
- (id)relativeURLForLink:(id)arg1;
- (void)resolvedValue:(id)arg1 forProperty:(id)arg2;
- (id)drawableParent;
- (BOOL)containsDrawables;
- (id)name;
- (void)addReferenceToIdentifier:(id)arg1 type:(id)arg2 property:(id)arg3;
- (id)svgAttributesDescription;
- (id)svgDescription;
- (id)elementOfType:(id)arg1 xml:(id)arg2 parent:(id)arg3;
- (void)processStyles:(id)arg1;
- (void)processStyles;
- (void)process;
- (void)processChildren:(id)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)processChildren:(id)arg1;
- (unsigned long long)processChild:(id)arg1 index:(unsigned long long)arg2;
- (void)processIdentifier:(id)arg1;
- (void)processSelf:(id)arg1;
- (id)initWithImporter:(id)arg1 xml:(id)arg2;
- (id)makeLayerWithParentLayer:(id)arg1 progress:(CDUnknownBlockType)arg2;
- (id)adjustOwnLayer:(id)arg1 parentLayer:(id)arg2;
- (void)nameLayer:(id)arg1;
- (id)effectiveLayerName;
- (void)adjustSizeForChildrenOfLayer:(id)arg1 parentLayer:(id)arg2;
- (void)makeChildLayersWithParentLayer:(id)arg1 progress:(CDUnknownBlockType)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGEllipseShape : _SVGEllipseShape
{
}

- (void)processSelf:(id)arg1;
- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGExporter : NSObject
{
    BOOL _exportDetailed;	// 8 = 0x8
    NSXMLElement *_defs;	// 16 = 0x10
    NSXMLDocument *_doc;	// 24 = 0x18
    NSXMLElement *_root;	// 32 = 0x20
    NSAffineTransform *_initialMove;	// 40 = 0x28
    MSExportRequest *_slice;	// 48 = 0x30
    NSString *_mask;	// 56 = 0x38
    NSMutableDictionary *_gradients;	// 64 = 0x40
    unsigned long long _nextUniqueID;	// 72 = 0x48
    struct CGSize _documentSize;	// 80 = 0x50
    struct CGRect _sliceRect;	// 96 = 0x60
}

@property(nonatomic) unsigned long long nextUniqueID; // @synthesize nextUniqueID=_nextUniqueID;
@property(retain, nonatomic) NSMutableDictionary *gradients; // @synthesize gradients=_gradients;
@property(nonatomic) BOOL exportDetailed; // @synthesize exportDetailed=_exportDetailed;
@property(retain, nonatomic) NSString *mask; // @synthesize mask=_mask;
@property(nonatomic) struct CGRect sliceRect; // @synthesize sliceRect=_sliceRect;
@property(retain, nonatomic) MSExportRequest *slice; // @synthesize slice=_slice;
@property(retain, nonatomic) NSAffineTransform *initialMove; // @synthesize initialMove=_initialMove;
@property(retain, nonatomic) NSXMLElement *root; // @synthesize root=_root;
@property(nonatomic) struct CGSize documentSize; // @synthesize documentSize=_documentSize;
@property(retain, nonatomic) NSXMLDocument *doc; // @synthesize doc=_doc;
@property(retain, nonatomic) NSXMLElement *defs; // @synthesize defs=_defs;
- (void).cxx_destruct;
- (id)groupElementWithAffineTransform:(id)arg1;
- (id)groupElementWithTranslateX:(int)arg1 Y:(int)arg2;
- (id)radialGradientAttributes:(id)arg1;
- (id)linearGradientAttributes:(id)arg1;
- (id)stopsForGradient:(id)arg1;
- (id)gradientElement:(id)arg1;
- (void)addGradient:(id)arg1;
- (id)hashForGradient:(id)arg1;
- (id)addDefinitionWithWithName:(id)arg1 children:(id)arg2 attributes:(id)arg3;
- (id)uniqueIDForElementWithName:(id)arg1;
- (void)setDescription:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)normalizePath:(id)arg1;
- (struct CGPoint)normalizePoint:(struct CGPoint)arg1;
- (id)data;
- (id)description;
- (void)exportPage:(id)arg1;
- (id)initWithName:(id)arg1 slice:(id)arg2 detailed:(BOOL)arg3;

@end

@interface SVGFill : _SVGFill
{
}

+ (id)fillForXML:(id)arg1 element:(id)arg2 parent:(id)arg3;
+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (void)setupFromString:(id)arg1 opacity:(id)arg2;

@end

@interface SVGFont : _SVGFont
{
}

+ (id)fontForXML:(id)arg1 element:(id)arg2 parent:(id)arg3;
+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (id)representedFont;

@end

@interface SVGGradient : _SVGGradient
{
}

- (id)stopsElements;
- (id)svgAttributesDescription;
- (struct CGPoint)to;
- (struct CGPoint)from;
- (void)setupLinearGradientWithXML:(id)arg1;
- (void)setupRadialGradientWithXML:(id)arg1;
- (void)processSelf:(id)arg1;

@end

@interface SVGGradientStop : _SVGGradientStop
{
}

+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (void)processSelf:(id)arg1;

@end

@interface SVGGroupElement : _SVGGroupElement
{
}

- (id)svgAttributesDescription;

@end

@interface SVGImage : _SVGImage
{
}

+ (void)initialize;
- (void)processSelf:(id)arg1;
- (void)applyEffectsToLayer:(id)arg1;
- (void)adjustSizeForChildrenOfLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGImporter : NSObject
{
    Class _defaultElementClass;	// 8 = 0x8
    NSDictionary *_elementClasses;	// 16 = 0x10
    SVGElement *_root;	// 24 = 0x18
    NSString *_source;	// 32 = 0x20
    NSMutableDictionary *_references;	// 40 = 0x28
    NSMutableDictionary *_styles;	// 48 = 0x30
    NSURL *_url;	// 56 = 0x38
    unsigned long long _drawableElementCount;	// 64 = 0x40
}

@property(nonatomic) unsigned long long drawableElementCount; // @synthesize drawableElementCount=_drawableElementCount;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSMutableDictionary *styles; // @synthesize styles=_styles;
@property(retain, nonatomic) NSMutableDictionary *references; // @synthesize references=_references;
@property(retain, nonatomic) NSString *source; // @synthesize source=_source;
@property(retain, nonatomic) SVGElement *root; // @synthesize root=_root;
@property(retain, nonatomic) NSDictionary *elementClasses; // @synthesize elementClasses=_elementClasses;
@property(nonatomic) Class defaultElementClass; // @synthesize defaultElementClass=_defaultElementClass;
- (void).cxx_destruct;
- (id)styleAttributesForElement:(id)arg1 defaults:(id)arg2;
- (void)registerStyles:(id)arg1 forKeys:(id)arg2;
- (void)addedDrawableElement:(id)arg1;
- (id)relativeURLForLink:(id)arg1;
- (void)processReferences:(id)arg1 withElement:(id)arg2;
- (void)addReferenceToIdentifier:(id)arg1 type:(id)arg2 target:(id)arg3 property:(id)arg4;
- (void)registerElementWithIdentifier:(id)arg1 type:(id)arg2 element:(id)arg3;
- (id)referenceEntriesForType:(id)arg1;
- (id)elementOfType:(id)arg1 xml:(id)arg2 parent:(id)arg3;
- (void)processFile;
- (id)importObjectGraph;
- (id)initWithXMLString:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithURL:(id)arg1;

@end

@interface SVGLineShape : _SVGLineShape
{
}

- (void)processSelf:(id)arg1;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGLink : _SVGLink
{
}

- (void)resolvedValue:(id)arg1 forProperty:(id)arg2;
- (void)processSelf:(id)arg1;
- (id)effectiveLayerName;

@end

@interface SVGMask : _SVGMask
{
}

- (void)resolvedValue:(id)arg1 forProperty:(id)arg2;
- (void)processSelf:(id)arg1;

@end

@interface SVGPathInterpreter : NSObject
{
    BOOL _lastCommand;	// 8 = 0x8
    struct CGPoint _lastPoint;	// 16 = 0x10
    struct CGPoint _lastControl;	// 32 = 0x20
}

+ (id)bezierPathFromPoints:(id)arg1;
+ (id)bezierPathFromCommands:(id)arg1 isPathClosed:(char *)arg2;
@property(nonatomic) BOOL lastCommand; // @synthesize lastCommand=_lastCommand;
@property(nonatomic) struct CGPoint lastControl; // @synthesize lastControl=_lastControl;
@property(nonatomic) struct CGPoint lastPoint; // @synthesize lastPoint=_lastPoint;
- (void)appendAComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendaComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendvComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendhComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendVComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendHComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendsComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendTComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendtComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendQComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendqComponents:(id)arg1 toBezierPath:(id)arg2;
- (struct CGPoint)lastControlReflected;
- (void)appendCurveQuadPoint1:(struct CGPoint)arg1 quadPoint2:(struct CGPoint)arg2 toBezierPath:(id)arg3;
- (void)appendcComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendlComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendmComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendSComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendCComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendLComponents:(id)arg1 toBezierPath:(id)arg2;
- (void)appendMComponents:(id)arg1 toBezierPath:(id)arg2;
- (id)bezierPathFromCommands:(id)arg1 isPathClosed:(char *)arg2;
- (id)bezierPathFromPoints:(id)arg1;

@end

@interface SVGPathScanner : NSObject
{
    NSScanner *_scanner;	// 8 = 0x8
    NSCharacterSet *_number;	// 16 = 0x10
    NSString *_commandBuffer;	// 24 = 0x18
    unsigned long long _commandPosition;	// 32 = 0x20
}

@property(nonatomic) unsigned long long commandPosition; // @synthesize commandPosition=_commandPosition;
@property(retain, nonatomic) NSString *commandBuffer; // @synthesize commandBuffer=_commandBuffer;
@property(retain, nonatomic) NSCharacterSet *number; // @synthesize number=_number;
@property(retain, nonatomic) NSScanner *scanner; // @synthesize scanner=_scanner;
- (void).cxx_destruct;
- (double)nextFloat;
- (BOOL)nextCommand;
- (id)initWithString:(id)arg1;

@end

@interface SVGPathShape : _SVGPathShape
{
}

- (id)svgAttributesDescription;
- (void)processSelf:(id)arg1;
- (void)processPath:(id)arg1;
- (void)nameLayer:(id)arg1;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGPolygonShape : _SVGPolygonShape
{
}

- (void)processPath:(id)arg1;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGRectangleShape : _SVGRectangleShape
{
}

- (void)processSelf:(id)arg1;
- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGStroke : _SVGStroke
{
}

+ (id)strokeForXML:(id)arg1 element:(id)arg2 parent:(id)arg3;
+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (void)setupFromString:(id)arg1 opacity:(id)arg2;

@end

@interface SVGStyle : SVGElement
{
}

+ (id)elementOfType:(id)arg1 xml:(id)arg2 importer:(id)arg3 parent:(id)arg4;

@end

@interface SVGSymbolElement : _SVGSymbolElement
{
}

@end

@interface SVGText : _SVGText
{
}

+ (id)styleDefaults;
- (id)svgAttributesDescription;
- (id)name;
- (void)processSelf:(id)arg1;
- (double)doubleValueFromXML:(id)arg1 attributeWithName:(id)arg2 orParent:(id)arg3;
- (void)applyEffectsToLayer:(id)arg1;
- (id)enclosingLayerForLayer:(id)arg1 parentLayer:(id)arg2;
- (id)makeOwnLayerWithParentLayer:(id)arg1;

@end

@interface SVGTextSpan : NSObject
{
    NSString *_text;	// 8 = 0x8
    NSDictionary *_attributes;	// 16 = 0x10
    struct CGRect _rect;	// 24 = 0x18
}

@property(retain, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;

@end

@interface SVGTitle : SVGElement
{
}

+ (id)elementOfType:(id)arg1 xml:(id)arg2 importer:(id)arg3 parent:(id)arg4;

@end

@interface SVGTransformImporter : NSObject
{
}

+ (id)matrixTransformFromComponents:(id)arg1;
+ (id)rotateTransformFromComponents:(id)arg1;
+ (id)scaleTransformFromComponents:(id)arg1;
+ (id)translateTransformFromComponents:(id)arg1;
+ (id)transformFromName:(id)arg1 components:(id)arg2;
+ (id)transformFromString:(id)arg1;

@end

@interface SketchRenderingStub : NSObject
{
}

- (void)doTheStuff;

@end

@interface _MSArtboard : MSRect
{
    MSSimpleGrid *_grid;	// 32 = 0x20
    MSRulerData *_horizontalRulerData;	// 40 = 0x28
    NSString *_name;	// 48 = 0x30
    MSRulerData *_verticalRulerData;	// 56 = 0x38
}

@property(copy, nonatomic) MSRulerData *verticalRulerData; // @synthesize verticalRulerData=_verticalRulerData;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) MSRulerData *horizontalRulerData; // @synthesize horizontalRulerData=_horizontalRulerData;
@property(copy, nonatomic) MSSimpleGrid *grid; // @synthesize grid=_grid;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveVerticalRulerData:(id)arg1;
- (id)primitiveVerticalRulerData;
- (void)setPrimitiveName:(id)arg1;
- (id)primitiveName;
- (void)setPrimitiveHorizontalRulerData:(id)arg1;
- (id)primitiveHorizontalRulerData;
- (void)setPrimitiveGrid:(id)arg1;
- (id)primitiveGrid;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSArtboardGroup : MSLayerGroup
{
    BOOL _hasBackgroundColor;	// 56 = 0x38
    BOOL _includeBackgroundColorInExport;	// 57 = 0x39
    MSColor *_backgroundColor;	// 64 = 0x40
    MSSimpleGrid *_grid;	// 72 = 0x48
    MSRulerData *_horizontalRulerData;	// 80 = 0x50
    MSLayoutGrid *_layout;	// 88 = 0x58
    MSRulerData *_verticalRulerData;	// 96 = 0x60
}

@property(copy, nonatomic) MSRulerData *verticalRulerData; // @synthesize verticalRulerData=_verticalRulerData;
@property(retain, nonatomic) MSLayoutGrid *layout; // @synthesize layout=_layout;
@property(nonatomic) BOOL includeBackgroundColorInExport; // @synthesize includeBackgroundColorInExport=_includeBackgroundColorInExport;
@property(copy, nonatomic) MSRulerData *horizontalRulerData; // @synthesize horizontalRulerData=_horizontalRulerData;
@property(nonatomic) BOOL hasBackgroundColor; // @synthesize hasBackgroundColor=_hasBackgroundColor;
@property(retain, nonatomic) MSSimpleGrid *grid; // @synthesize grid=_grid;
@property(copy, nonatomic) MSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveVerticalRulerData:(id)arg1;
- (id)primitiveVerticalRulerData;
- (void)setPrimitiveLayout:(id)arg1;
- (id)primitiveLayout;
- (void)setPrimitiveIncludeBackgroundColorInExport:(BOOL)arg1;
- (BOOL)primitiveIncludeBackgroundColorInExport;
- (void)setPrimitiveHorizontalRulerData:(id)arg1;
- (id)primitiveHorizontalRulerData;
- (void)setPrimitiveHasBackgroundColor:(BOOL)arg1;
- (BOOL)primitiveHasBackgroundColor;
- (void)setPrimitiveGrid:(id)arg1;
- (id)primitiveGrid;
- (void)setPrimitiveBackgroundColor:(id)arg1;
- (id)primitiveBackgroundColor;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSArtisticStroke : MSModelObject
{
    MSArray *_handles;	// 8 = 0x8
}

@property(retain, nonatomic) MSArray *handles; // @synthesize handles=_handles;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveHandles:(id)arg1;
- (id)primitiveHandles;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSArtisticStrokeHandle : MSModelObject
{
    double _leftHandle;	// 8 = 0x8
    double _positionOnPath;	// 16 = 0x10
    double _rightHandle;	// 24 = 0x18
}

@property(nonatomic) double rightHandle; // @synthesize rightHandle=_rightHandle;
@property(nonatomic) double positionOnPath; // @synthesize positionOnPath=_positionOnPath;
@property(nonatomic) double leftHandle; // @synthesize leftHandle=_leftHandle;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveRightHandle:(double)arg1;
- (double)primitiveRightHandle;
- (void)setPrimitivePositionOnPath:(double)arg1;
- (double)primitivePositionOnPath;
- (void)setPrimitiveLeftHandle:(double)arg1;
- (double)primitiveLeftHandle;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSBaseGrid : MSModelObject
{
    BOOL _isEnabled;	// 8 = 0x8
}

@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveIsEnabled:(BOOL)arg1;
- (BOOL)primitiveIsEnabled;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSBitmapLayer : MSStyledLayer
{
    MSImageData *_image;	// 56 = 0x38
    NSObject *_imageToLoad;	// 64 = 0x40
    struct CGRect _clippingMask;	// 72 = 0x48
    struct CGRect _nineSliceCenterRect;	// 104 = 0x68
}

@property(nonatomic) struct CGRect nineSliceCenterRect; // @synthesize nineSliceCenterRect=_nineSliceCenterRect;
@property(retain, nonatomic) NSObject *imageToLoad; // @synthesize imageToLoad=_imageToLoad;
@property(retain, nonatomic) MSImageData *image; // @synthesize image=_image;
@property(nonatomic) struct CGRect clippingMask; // @synthesize clippingMask=_clippingMask;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveNineSliceCenterRect:(struct CGRect)arg1;
- (struct CGRect)primitiveNineSliceCenterRect;
- (void)setPrimitiveImageToLoad:(id)arg1;
- (id)primitiveImageToLoad;
- (void)setPrimitiveImage:(id)arg1;
- (id)primitiveImage;
- (void)setPrimitiveClippingMask:(struct CGRect)arg1;
- (struct CGRect)primitiveClippingMask;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSColor : MSModelObject
{
    double _alpha;	// 8 = 0x8
    double _blue;	// 16 = 0x10
    double _green;	// 24 = 0x18
    double _red;	// 32 = 0x20
}

@property(nonatomic) double red; // @synthesize red=_red;
@property(nonatomic) double green; // @synthesize green=_green;
@property(nonatomic) double blue; // @synthesize blue=_blue;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveRed:(double)arg1;
- (double)primitiveRed;
- (void)setPrimitiveGreen:(double)arg1;
- (double)primitiveGreen;
- (void)setPrimitiveBlue:(double)arg1;
- (double)primitiveBlue;
- (void)setPrimitiveAlpha:(double)arg1;
- (double)primitiveAlpha;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSCurvePoint : MSModelObject
{
    BOOL _hasCurveFrom;	// 8 = 0x8
    BOOL _hasCurveTo;	// 9 = 0x9
    double _cornerRadius;	// 16 = 0x10
    long long _curveMode;	// 24 = 0x18
    struct CGPoint _curveFrom;	// 32 = 0x20
    struct CGPoint _curveTo;	// 48 = 0x30
    struct CGPoint _point;	// 64 = 0x40
}

@property(nonatomic) struct CGPoint point; // @synthesize point=_point;
@property(nonatomic) BOOL hasCurveTo; // @synthesize hasCurveTo=_hasCurveTo;
@property(nonatomic) BOOL hasCurveFrom; // @synthesize hasCurveFrom=_hasCurveFrom;
@property(nonatomic) struct CGPoint curveTo; // @synthesize curveTo=_curveTo;
@property(nonatomic) long long curveMode; // @synthesize curveMode=_curveMode;
@property(nonatomic) struct CGPoint curveFrom; // @synthesize curveFrom=_curveFrom;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitivePoint:(struct CGPoint)arg1;
- (struct CGPoint)primitivePoint;
- (void)setPrimitiveHasCurveTo:(BOOL)arg1;
- (BOOL)primitiveHasCurveTo;
- (void)setPrimitiveHasCurveFrom:(BOOL)arg1;
- (BOOL)primitiveHasCurveFrom;
- (void)setPrimitiveCurveTo:(struct CGPoint)arg1;
- (struct CGPoint)primitiveCurveTo;
- (void)setPrimitiveCurveMode:(long long)arg1;
- (long long)primitiveCurveMode;
- (void)setPrimitiveCurveFrom:(struct CGPoint)arg1;
- (struct CGPoint)primitiveCurveFrom;
- (void)setPrimitiveCornerRadius:(double)arg1;
- (double)primitiveCornerRadius;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSCustomShapeLayer : MSShapePathLayer
{
}

- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSDecoration : MSModelObject
{
    NSBezierPath *_decoration;	// 8 = 0x8
    double _positionOnPath;	// 16 = 0x10
}

@property(nonatomic) double positionOnPath; // @synthesize positionOnPath=_positionOnPath;
@property(copy, nonatomic) NSBezierPath *decoration; // @synthesize decoration=_decoration;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitivePositionOnPath:(double)arg1;
- (double)primitivePositionOnPath;
- (void)setPrimitiveDecoration:(id)arg1;
- (id)primitiveDecoration;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSDocumentData : MSModelObject
{
    BOOL _enableLayerInteraction;	// 8 = 0x8
    BOOL _enableSliceInteraction;	// 9 = 0x9
    unsigned long long _currentPageIndex;	// 16 = 0x10
    MSImageCollection *_images;	// 24 = 0x18
    MSSharedLayerStyleContainer *_layerStyles;	// 32 = 0x20
    MSSharedLayerContainer *_layerSymbols;	// 40 = 0x28
    MSSharedLayerTextStyleContainer *_layerTextStyles;	// 48 = 0x30
    MSArray *_pages;	// 56 = 0x38
}

@property(retain, nonatomic) MSArray *pages; // @synthesize pages=_pages;
@property(retain, nonatomic) MSSharedLayerTextStyleContainer *layerTextStyles; // @synthesize layerTextStyles=_layerTextStyles;
@property(retain, nonatomic) MSSharedLayerContainer *layerSymbols; // @synthesize layerSymbols=_layerSymbols;
@property(retain, nonatomic) MSSharedLayerStyleContainer *layerStyles; // @synthesize layerStyles=_layerStyles;
@property(retain, nonatomic) MSImageCollection *images; // @synthesize images=_images;
@property(nonatomic) BOOL enableSliceInteraction; // @synthesize enableSliceInteraction=_enableSliceInteraction;
@property(nonatomic) BOOL enableLayerInteraction; // @synthesize enableLayerInteraction=_enableLayerInteraction;
@property(nonatomic) unsigned long long currentPageIndex; // @synthesize currentPageIndex=_currentPageIndex;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitivePages:(id)arg1;
- (id)primitivePages;
- (void)setPrimitiveLayerTextStyles:(id)arg1;
- (id)primitiveLayerTextStyles;
- (void)setPrimitiveLayerSymbols:(id)arg1;
- (id)primitiveLayerSymbols;
- (void)setPrimitiveLayerStyles:(id)arg1;
- (id)primitiveLayerStyles;
- (void)setPrimitiveImages:(id)arg1;
- (id)primitiveImages;
- (void)setPrimitiveEnableSliceInteraction:(BOOL)arg1;
- (BOOL)primitiveEnableSliceInteraction;
- (void)setPrimitiveEnableLayerInteraction:(BOOL)arg1;
- (BOOL)primitiveEnableLayerInteraction;
- (void)setPrimitiveCurrentPageIndex:(unsigned long long)arg1;
- (unsigned long long)primitiveCurrentPageIndex;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSExportOptions : MSModelObject
{
    BOOL _shouldTrim;	// 8 = 0x8
    MSArray *_includedLayerIds;	// 16 = 0x10
    unsigned long long _layerOptions;	// 24 = 0x18
    MSArray *_sizes;	// 32 = 0x20
}

@property(retain, nonatomic) MSArray *sizes; // @synthesize sizes=_sizes;
@property(nonatomic) BOOL shouldTrim; // @synthesize shouldTrim=_shouldTrim;
@property(nonatomic) unsigned long long layerOptions; // @synthesize layerOptions=_layerOptions;
@property(retain, nonatomic) MSArray *includedLayerIds; // @synthesize includedLayerIds=_includedLayerIds;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveSizes:(id)arg1;
- (id)primitiveSizes;
- (void)setPrimitiveShouldTrim:(BOOL)arg1;
- (BOOL)primitiveShouldTrim;
- (void)setPrimitiveLayerOptions:(unsigned long long)arg1;
- (unsigned long long)primitiveLayerOptions;
- (void)setPrimitiveIncludedLayerIds:(id)arg1;
- (id)primitiveIncludedLayerIds;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSExportSize : MSModelObject
{
    NSString *_format;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    double _scale;	// 24 = 0x18
    long long _visibleScaleType;	// 32 = 0x20
}

@property(nonatomic) long long visibleScaleType; // @synthesize visibleScaleType=_visibleScaleType;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *format; // @synthesize format=_format;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveVisibleScaleType:(long long)arg1;
- (long long)primitiveVisibleScaleType;
- (void)setPrimitiveScale:(double)arg1;
- (double)primitiveScale;
- (void)setPrimitiveName:(id)arg1;
- (id)primitiveName;
- (void)setPrimitiveFormat:(id)arg1;
- (id)primitiveFormat;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSGradient : MSModelObject
{
    BOOL _shouldSmoothenOpacity;	// 8 = 0x8
    double _elipseLength;	// 16 = 0x10
    long long _gradientType;	// 24 = 0x18
    MSPointArray *_points;	// 32 = 0x20
    MSArray *_stops;	// 40 = 0x28
    struct CGPoint _from;	// 48 = 0x30
    struct CGPoint _to;	// 64 = 0x40
}

@property(nonatomic) struct CGPoint to; // @synthesize to=_to;
@property(retain, nonatomic) MSArray *stops; // @synthesize stops=_stops;
@property(nonatomic) BOOL shouldSmoothenOpacity; // @synthesize shouldSmoothenOpacity=_shouldSmoothenOpacity;
@property(retain, nonatomic) MSPointArray *points; // @synthesize points=_points;
@property(nonatomic) long long gradientType; // @synthesize gradientType=_gradientType;
@property(nonatomic) struct CGPoint from; // @synthesize from=_from;
@property(nonatomic) double elipseLength; // @synthesize elipseLength=_elipseLength;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveTo:(struct CGPoint)arg1;
- (struct CGPoint)primitiveTo;
- (void)setPrimitiveStops:(id)arg1;
- (id)primitiveStops;
- (void)setPrimitiveShouldSmoothenOpacity:(BOOL)arg1;
- (BOOL)primitiveShouldSmoothenOpacity;
- (void)setPrimitivePoints:(id)arg1;
- (id)primitivePoints;
- (void)setPrimitiveGradientType:(long long)arg1;
- (long long)primitiveGradientType;
- (void)setPrimitiveFrom:(struct CGPoint)arg1;
- (struct CGPoint)primitiveFrom;
- (void)setPrimitiveElipseLength:(double)arg1;
- (double)primitiveElipseLength;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSGradientStop : MSModelObject
{
    MSColor *_color;	// 8 = 0x8
    double _position;	// 16 = 0x10
}

@property(nonatomic) double position; // @synthesize position=_position;
@property(copy, nonatomic) MSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitivePosition:(double)arg1;
- (double)primitivePosition;
- (void)setPrimitiveColor:(id)arg1;
- (id)primitiveColor;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSGraphicsContextSettings : MSModelObject
{
    long long _blendMode;	// 8 = 0x8
    double _opacity;	// 16 = 0x10
}

@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) long long blendMode; // @synthesize blendMode=_blendMode;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveOpacity:(double)arg1;
- (double)primitiveOpacity;
- (void)setPrimitiveBlendMode:(long long)arg1;
- (long long)primitiveBlendMode;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSImageCollection : MSModelObject
{
    NSDictionary *_images;	// 8 = 0x8
}

@property(retain, nonatomic) NSDictionary *images; // @synthesize images=_images;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveImages:(id)arg1;
- (id)primitiveImages;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSLayer : MSModelObject
{
    BOOL _isFlippedHorizontal;	// 8 = 0x8
    BOOL _isFlippedVertical;	// 9 = 0x9
    BOOL _isLocked;	// 10 = 0xa
    BOOL _isVisible;	// 11 = 0xb
    BOOL _nameIsFixed;	// 12 = 0xc
    BOOL _shouldBreakMaskChain;	// 13 = 0xd
    MSExportOptions *_exportOptions;	// 16 = 0x10
    MSRect *_frame;	// 24 = 0x18
    NSString *_name;	// 32 = 0x20
    NSString *_originalObjectID;	// 40 = 0x28
    double _rotation;	// 48 = 0x30
}

@property(nonatomic) BOOL shouldBreakMaskChain; // @synthesize shouldBreakMaskChain=_shouldBreakMaskChain;
@property(nonatomic) double rotation; // @synthesize rotation=_rotation;
@property(retain, nonatomic) NSString *originalObjectID; // @synthesize originalObjectID=_originalObjectID;
@property(nonatomic) BOOL nameIsFixed; // @synthesize nameIsFixed=_nameIsFixed;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) BOOL isVisible; // @synthesize isVisible=_isVisible;
@property(nonatomic) BOOL isLocked; // @synthesize isLocked=_isLocked;
@property(nonatomic) BOOL isFlippedVertical; // @synthesize isFlippedVertical=_isFlippedVertical;
@property(nonatomic) BOOL isFlippedHorizontal; // @synthesize isFlippedHorizontal=_isFlippedHorizontal;
@property(retain, nonatomic) MSRect *frame; // @synthesize frame=_frame;
@property(retain, nonatomic) MSExportOptions *exportOptions; // @synthesize exportOptions=_exportOptions;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveShouldBreakMaskChain:(BOOL)arg1;
- (BOOL)primitiveShouldBreakMaskChain;
- (void)setPrimitiveRotation:(double)arg1;
- (double)primitiveRotation;
- (void)setPrimitiveOriginalObjectID:(id)arg1;
- (id)primitiveOriginalObjectID;
- (void)setPrimitiveNameIsFixed:(BOOL)arg1;
- (BOOL)primitiveNameIsFixed;
- (void)setPrimitiveName:(id)arg1;
- (id)primitiveName;
- (void)setPrimitiveIsVisible:(BOOL)arg1;
- (BOOL)primitiveIsVisible;
- (void)setPrimitiveIsLocked:(BOOL)arg1;
- (BOOL)primitiveIsLocked;
- (void)setPrimitiveIsFlippedVertical:(BOOL)arg1;
- (BOOL)primitiveIsFlippedVertical;
- (void)setPrimitiveIsFlippedHorizontal:(BOOL)arg1;
- (BOOL)primitiveIsFlippedHorizontal;
- (void)setPrimitiveFrame:(id)arg1;
- (id)primitiveFrame;
- (void)setPrimitiveExportOptions:(id)arg1;
- (id)primitiveExportOptions;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSLayerGroup : MSStyledLayer
{
    BOOL _hasClickThrough;	// 56 = 0x38
    MSArray *_layers;	// 64 = 0x40
    NSString *_sharedObjectID;	// 72 = 0x48
}

@property(retain, nonatomic) NSString *sharedObjectID; // @synthesize sharedObjectID=_sharedObjectID;
@property(retain, nonatomic) MSArray *layers; // @synthesize layers=_layers;
@property(nonatomic) BOOL hasClickThrough; // @synthesize hasClickThrough=_hasClickThrough;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveSharedObjectID:(id)arg1;
- (id)primitiveSharedObjectID;
- (void)setPrimitiveLayers:(id)arg1;
- (id)primitiveLayers;
- (void)setPrimitiveHasClickThrough:(BOOL)arg1;
- (BOOL)primitiveHasClickThrough;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSLayoutGrid : MSBaseGrid
{
    BOOL _drawHorizontal;	// 8 = 0x8
    BOOL _drawHorizontalLines;	// 9 = 0x9
    BOOL _drawVertical;	// 10 = 0xa
    BOOL _guttersOutside;	// 11 = 0xb
    double _columnWidth;	// 16 = 0x10
    double _gutterHeight;	// 24 = 0x18
    double _gutterWidth;	// 32 = 0x20
    double _horizontalOffset;	// 40 = 0x28
    double _numberOfColumns;	// 48 = 0x30
    double _rowHeightMultiplication;	// 56 = 0x38
    double _totalWidth;	// 64 = 0x40
}

@property(nonatomic) double totalWidth; // @synthesize totalWidth=_totalWidth;
@property(nonatomic) double rowHeightMultiplication; // @synthesize rowHeightMultiplication=_rowHeightMultiplication;
@property(nonatomic) double numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(nonatomic) double horizontalOffset; // @synthesize horizontalOffset=_horizontalOffset;
@property(nonatomic) BOOL guttersOutside; // @synthesize guttersOutside=_guttersOutside;
@property(nonatomic) double gutterWidth; // @synthesize gutterWidth=_gutterWidth;
@property(nonatomic) double gutterHeight; // @synthesize gutterHeight=_gutterHeight;
@property(nonatomic) BOOL drawVertical; // @synthesize drawVertical=_drawVertical;
@property(nonatomic) BOOL drawHorizontalLines; // @synthesize drawHorizontalLines=_drawHorizontalLines;
@property(nonatomic) BOOL drawHorizontal; // @synthesize drawHorizontal=_drawHorizontal;
@property(nonatomic) double columnWidth; // @synthesize columnWidth=_columnWidth;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveTotalWidth:(double)arg1;
- (double)primitiveTotalWidth;
- (void)setPrimitiveRowHeightMultiplication:(double)arg1;
- (double)primitiveRowHeightMultiplication;
- (void)setPrimitiveNumberOfColumns:(double)arg1;
- (double)primitiveNumberOfColumns;
- (void)setPrimitiveHorizontalOffset:(double)arg1;
- (double)primitiveHorizontalOffset;
- (void)setPrimitiveGuttersOutside:(BOOL)arg1;
- (BOOL)primitiveGuttersOutside;
- (void)setPrimitiveGutterWidth:(double)arg1;
- (double)primitiveGutterWidth;
- (void)setPrimitiveGutterHeight:(double)arg1;
- (double)primitiveGutterHeight;
- (void)setPrimitiveDrawVertical:(BOOL)arg1;
- (BOOL)primitiveDrawVertical;
- (void)setPrimitiveDrawHorizontalLines:(BOOL)arg1;
- (BOOL)primitiveDrawHorizontalLines;
- (void)setPrimitiveDrawHorizontal:(BOOL)arg1;
- (BOOL)primitiveDrawHorizontal;
- (void)setPrimitiveColumnWidth:(double)arg1;
- (double)primitiveColumnWidth;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSLegacyLayerContainer : MSModelObject
{
    long long _identifier;	// 8 = 0x8
    MSArray *_layers;	// 16 = 0x10
}

@property(retain, nonatomic) MSArray *layers; // @synthesize layers=_layers;
@property(nonatomic) long long identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveLayers:(id)arg1;
- (id)primitiveLayers;
- (void)setPrimitiveIdentifier:(long long)arg1;
- (long long)primitiveIdentifier;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSLegacySlice : MSRect
{
    BOOL _includeRetinaVersion;	// 32 = 0x20
    BOOL _shouldTrim;	// 33 = 0x21
    NSMutableArray *_includedLayers;	// 40 = 0x28
    NSString *_name;	// 48 = 0x30
    unsigned long long _options;	// 56 = 0x38
}

@property(nonatomic) BOOL shouldTrim; // @synthesize shouldTrim=_shouldTrim;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSMutableArray *includedLayers; // @synthesize includedLayers=_includedLayers;
@property(nonatomic) BOOL includeRetinaVersion; // @synthesize includeRetinaVersion=_includeRetinaVersion;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveShouldTrim:(BOOL)arg1;
- (BOOL)primitiveShouldTrim;
- (void)setPrimitiveOptions:(unsigned long long)arg1;
- (unsigned long long)primitiveOptions;
- (void)setPrimitiveName:(id)arg1;
- (id)primitiveName;
- (void)setPrimitiveIncludedLayers:(id)arg1;
- (id)primitiveIncludedLayers;
- (void)setPrimitiveIncludeRetinaVersion:(BOOL)arg1;
- (BOOL)primitiveIncludeRetinaVersion;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSOvalShape : MSShapePathLayer
{
}

- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSPage : MSLayerGroup
{
    MSSimpleGrid *_grid;	// 56 = 0x38
    MSRulerData *_horizontalRulerData;	// 64 = 0x40
    MSLayoutGrid *_layout;	// 72 = 0x48
    MSRulerData *_verticalRulerData;	// 80 = 0x50
    double _zoomValue;	// 88 = 0x58
    struct CGPoint _scrollOrigin;	// 96 = 0x60
}

@property(nonatomic) double zoomValue; // @synthesize zoomValue=_zoomValue;
@property(retain, nonatomic) MSRulerData *verticalRulerData; // @synthesize verticalRulerData=_verticalRulerData;
@property(nonatomic) struct CGPoint scrollOrigin; // @synthesize scrollOrigin=_scrollOrigin;
@property(retain, nonatomic) MSLayoutGrid *layout; // @synthesize layout=_layout;
@property(retain, nonatomic) MSRulerData *horizontalRulerData; // @synthesize horizontalRulerData=_horizontalRulerData;
@property(retain, nonatomic) MSSimpleGrid *grid; // @synthesize grid=_grid;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveZoomValue:(double)arg1;
- (double)primitiveZoomValue;
- (void)setPrimitiveVerticalRulerData:(id)arg1;
- (id)primitiveVerticalRulerData;
- (void)setPrimitiveScrollOrigin:(struct CGPoint)arg1;
- (struct CGPoint)primitiveScrollOrigin;
- (void)setPrimitiveLayout:(id)arg1;
- (id)primitiveLayout;
- (void)setPrimitiveHorizontalRulerData:(id)arg1;
- (id)primitiveHorizontalRulerData;
- (void)setPrimitiveGrid:(id)arg1;
- (id)primitiveGrid;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSPathDecorationStyle : MSModelObject
{
    MSArray *_decorations;	// 8 = 0x8
}

@property(retain, nonatomic) MSArray *decorations; // @synthesize decorations=_decorations;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveDecorations:(id)arg1;
- (id)primitiveDecorations;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSPolygonShape : MSCustomShapeLayer
{
    long long _numberOfPoints;	// 72 = 0x48
}

@property(nonatomic) long long numberOfPoints; // @synthesize numberOfPoints=_numberOfPoints;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveNumberOfPoints:(long long)arg1;
- (long long)primitiveNumberOfPoints;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSRect : MSModelObject
{
    BOOL _constrainProportions;	// 8 = 0x8
    double _height;	// 16 = 0x10
    double _width;	// 24 = 0x18
    double _x;	// 32 = 0x20
    double _y;	// 40 = 0x28
}

@property(nonatomic) double y; // @synthesize y=_y;
@property(nonatomic) double x; // @synthesize x=_x;
@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) double height; // @synthesize height=_height;
@property(nonatomic) BOOL constrainProportions; // @synthesize constrainProportions=_constrainProportions;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveY:(double)arg1;
- (double)primitiveY;
- (void)setPrimitiveX:(double)arg1;
- (double)primitiveX;
- (void)setPrimitiveWidth:(double)arg1;
- (double)primitiveWidth;
- (void)setPrimitiveHeight:(double)arg1;
- (double)primitiveHeight;
- (void)setPrimitiveConstrainProportions:(BOOL)arg1;
- (BOOL)primitiveConstrainProportions;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSRectangleShape : MSCustomShapeLayer
{
    BOOL _hasConvertedToNewRoundCorners;	// 65 = 0x41
    double _fixedRadius;	// 72 = 0x48
}

@property(nonatomic) BOOL hasConvertedToNewRoundCorners; // @synthesize hasConvertedToNewRoundCorners=_hasConvertedToNewRoundCorners;
@property(nonatomic) double fixedRadius; // @synthesize fixedRadius=_fixedRadius;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveHasConvertedToNewRoundCorners:(BOOL)arg1;
- (BOOL)primitiveHasConvertedToNewRoundCorners;
- (void)setPrimitiveFixedRadius:(double)arg1;
- (double)primitiveFixedRadius;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSRulerData : MSModelObject
{
    long long _base;	// 8 = 0x8
    MSArray *_guides;	// 16 = 0x10
}

@property(copy, nonatomic) MSArray *guides; // @synthesize guides=_guides;
@property(nonatomic) long long base; // @synthesize base=_base;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveGuides:(id)arg1;
- (id)primitiveGuides;
- (void)setPrimitiveBase:(long long)arg1;
- (long long)primitiveBase;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSShapeGroup : MSLayerGroup
{
    BOOL _hasClippingMask;	// 56 = 0x38
    MSArtisticStroke *_artisticStroke;	// 64 = 0x40
    long long _clippingMaskMode;	// 72 = 0x48
    unsigned long long _endDecorationType;	// 80 = 0x50
    MSPathDecorationStyle *_pathStyle;	// 88 = 0x58
    unsigned long long _startDecorationType;	// 96 = 0x60
    unsigned long long _windingRule;	// 104 = 0x68
}

@property(nonatomic) unsigned long long windingRule; // @synthesize windingRule=_windingRule;
@property(nonatomic) unsigned long long startDecorationType; // @synthesize startDecorationType=_startDecorationType;
@property(retain, nonatomic) MSPathDecorationStyle *pathStyle; // @synthesize pathStyle=_pathStyle;
@property(nonatomic) BOOL hasClippingMask; // @synthesize hasClippingMask=_hasClippingMask;
@property(nonatomic) unsigned long long endDecorationType; // @synthesize endDecorationType=_endDecorationType;
@property(nonatomic) long long clippingMaskMode; // @synthesize clippingMaskMode=_clippingMaskMode;
@property(retain, nonatomic) MSArtisticStroke *artisticStroke; // @synthesize artisticStroke=_artisticStroke;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveWindingRule:(unsigned long long)arg1;
- (unsigned long long)primitiveWindingRule;
- (void)setPrimitiveStartDecorationType:(unsigned long long)arg1;
- (unsigned long long)primitiveStartDecorationType;
- (void)setPrimitivePathStyle:(id)arg1;
- (id)primitivePathStyle;
- (void)setPrimitiveHasClippingMask:(BOOL)arg1;
- (BOOL)primitiveHasClippingMask;
- (void)setPrimitiveEndDecorationType:(unsigned long long)arg1;
- (unsigned long long)primitiveEndDecorationType;
- (void)setPrimitiveClippingMaskMode:(long long)arg1;
- (long long)primitiveClippingMaskMode;
- (void)setPrimitiveArtisticStroke:(id)arg1;
- (id)primitiveArtisticStroke;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSShapePath : MSModelObject
{
    BOOL _isClosed;	// 8 = 0x8
    MSArray *_points;	// 16 = 0x10
}

@property(retain, nonatomic) MSArray *points; // @synthesize points=_points;
@property(nonatomic) BOOL isClosed; // @synthesize isClosed=_isClosed;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitivePoints:(id)arg1;
- (id)primitivePoints;
- (void)setPrimitiveIsClosed:(BOOL)arg1;
- (BOOL)primitiveIsClosed;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSShapePathLayer : MSLayer
{
    BOOL _edited;	// 56 = 0x38
    long long _booleanOperation;	// 64 = 0x40
    MSShapePath *_path;	// 72 = 0x48
}

@property(retain, nonatomic) MSShapePath *path; // @synthesize path=_path;
@property(nonatomic) BOOL edited; // @synthesize edited=_edited;
@property(nonatomic) long long booleanOperation; // @synthesize booleanOperation=_booleanOperation;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitivePath:(id)arg1;
- (id)primitivePath;
- (void)setPrimitiveEdited:(BOOL)arg1;
- (BOOL)primitiveEdited;
- (void)setPrimitiveBooleanOperation:(long long)arg1;
- (long long)primitiveBooleanOperation;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSharedLayer : MSSharedObject
{
}

- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSharedLayerContainer : MSSharedObjectContainer
{
}

- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSharedLayerStyle : MSSharedObject
{
}

- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSharedLayerStyleContainer : MSSharedObjectContainer
{
}

- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSharedLayerTextStyleContainer : MSSharedLayerStyleContainer
{
}

- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSharedObject : MSModelObject
{
    MSArray *_instances;	// 8 = 0x8
    NSString *_name;	// 16 = 0x10
    MSModelObject *_value;	// 24 = 0x18
}

@property(retain, nonatomic) MSModelObject *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) MSArray *instances; // @synthesize instances=_instances;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveValue:(id)arg1;
- (id)primitiveValue;
- (void)setPrimitiveName:(id)arg1;
- (id)primitiveName;
- (void)setPrimitiveInstances:(id)arg1;
- (id)primitiveInstances;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSharedObjectContainer : MSModelObject
{
    MSArray *_objects;	// 8 = 0x8
}

@property(retain, nonatomic) MSArray *objects; // @synthesize objects=_objects;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveObjects:(id)arg1;
- (id)primitiveObjects;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSimpleGrid : MSBaseGrid
{
    long long _gridSize;	// 8 = 0x8
    long long _thickGridTimes;	// 16 = 0x10
}

@property(nonatomic) long long thickGridTimes; // @synthesize thickGridTimes=_thickGridTimes;
@property(nonatomic) long long gridSize; // @synthesize gridSize=_gridSize;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveThickGridTimes:(long long)arg1;
- (long long)primitiveThickGridTimes;
- (void)setPrimitiveGridSize:(long long)arg1;
- (long long)primitiveGridSize;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSliceLayer : MSLayer
{
    BOOL _hasBackgroundColor;	// 56 = 0x38
    MSColor *_backgroundColor;	// 64 = 0x40
}

@property(nonatomic) BOOL hasBackgroundColor; // @synthesize hasBackgroundColor=_hasBackgroundColor;
@property(copy, nonatomic) MSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveHasBackgroundColor:(BOOL)arg1;
- (BOOL)primitiveHasBackgroundColor;
- (void)setPrimitiveBackgroundColor:(id)arg1;
- (id)primitiveBackgroundColor;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSSpiralShape : MSCustomShapeLayer
{
    double _compactness;	// 72 = 0x48
    double _size;	// 80 = 0x50
    double _start;	// 88 = 0x58
}

@property(nonatomic) double start; // @synthesize start=_start;
@property(nonatomic) double size; // @synthesize size=_size;
@property(nonatomic) double compactness; // @synthesize compactness=_compactness;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveStart:(double)arg1;
- (double)primitiveStart;
- (void)setPrimitiveSize:(double)arg1;
- (double)primitiveSize;
- (void)setPrimitiveCompactness:(double)arg1;
- (double)primitiveCompactness;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStarShape : MSCustomShapeLayer
{
    long long _numberOfPoints;	// 72 = 0x48
    double _radius;	// 80 = 0x50
}

@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) long long numberOfPoints; // @synthesize numberOfPoints=_numberOfPoints;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveRadius:(double)arg1;
- (double)primitiveRadius;
- (void)setPrimitiveNumberOfPoints:(long long)arg1;
- (long long)primitiveNumberOfPoints;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyle : MSModelObject
{
    MSStyleBlur *_blur;	// 8 = 0x8
    MSStyleBorderOptions *_borderOptions;	// 16 = 0x10
    MSBorderStyleCollection *_borders;	// 24 = 0x18
    MSStyleColorControls *_colorControls;	// 32 = 0x20
    MSGraphicsContextSettings *_contextSettings;	// 40 = 0x28
    MSFillStyleCollection *_fills;	// 48 = 0x30
    MSInnerShadowStyleCollection *_innerShadows;	// 56 = 0x38
    long long _miterLimit;	// 64 = 0x40
    MSStyleReflection *_reflection;	// 72 = 0x48
    MSShadowStyleCollection *_shadows;	// 80 = 0x50
    NSString *_sharedObjectID;	// 88 = 0x58
    MSTextStyle *_textStyle;	// 96 = 0x60
}

@property(retain, nonatomic) MSTextStyle *textStyle; // @synthesize textStyle=_textStyle;
@property(retain, nonatomic) NSString *sharedObjectID; // @synthesize sharedObjectID=_sharedObjectID;
@property(retain, nonatomic) MSShadowStyleCollection *shadows; // @synthesize shadows=_shadows;
@property(retain, nonatomic) MSStyleReflection *reflection; // @synthesize reflection=_reflection;
@property(nonatomic) long long miterLimit; // @synthesize miterLimit=_miterLimit;
@property(retain, nonatomic) MSInnerShadowStyleCollection *innerShadows; // @synthesize innerShadows=_innerShadows;
@property(retain, nonatomic) MSFillStyleCollection *fills; // @synthesize fills=_fills;
@property(retain, nonatomic) MSGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(retain, nonatomic) MSStyleColorControls *colorControls; // @synthesize colorControls=_colorControls;
@property(retain, nonatomic) MSBorderStyleCollection *borders; // @synthesize borders=_borders;
@property(retain, nonatomic) MSStyleBorderOptions *borderOptions; // @synthesize borderOptions=_borderOptions;
@property(retain, nonatomic) MSStyleBlur *blur; // @synthesize blur=_blur;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveTextStyle:(id)arg1;
- (id)primitiveTextStyle;
- (void)setPrimitiveSharedObjectID:(id)arg1;
- (id)primitiveSharedObjectID;
- (void)setPrimitiveShadows:(id)arg1;
- (id)primitiveShadows;
- (void)setPrimitiveReflection:(id)arg1;
- (id)primitiveReflection;
- (void)setPrimitiveMiterLimit:(long long)arg1;
- (long long)primitiveMiterLimit;
- (void)setPrimitiveInnerShadows:(id)arg1;
- (id)primitiveInnerShadows;
- (void)setPrimitiveFills:(id)arg1;
- (id)primitiveFills;
- (void)setPrimitiveContextSettings:(id)arg1;
- (id)primitiveContextSettings;
- (void)setPrimitiveColorControls:(id)arg1;
- (id)primitiveColorControls;
- (void)setPrimitiveBorders:(id)arg1;
- (id)primitiveBorders;
- (void)setPrimitiveBorderOptions:(id)arg1;
- (id)primitiveBorderOptions;
- (void)setPrimitiveBlur:(id)arg1;
- (id)primitiveBlur;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleBasicFill : MSStylePart
{
    MSColor *_color;	// 8 = 0x8
    MSGraphicsContextSettings *_contextSettings;	// 16 = 0x10
    unsigned long long _fillType;	// 24 = 0x18
    MSGradient *_gradient;	// 32 = 0x20
}

@property(retain, nonatomic) MSGradient *gradient; // @synthesize gradient=_gradient;
@property(nonatomic) unsigned long long fillType; // @synthesize fillType=_fillType;
@property(retain, nonatomic) MSGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(copy, nonatomic) MSColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveGradient:(id)arg1;
- (id)primitiveGradient;
- (void)setPrimitiveFillType:(unsigned long long)arg1;
- (unsigned long long)primitiveFillType;
- (void)setPrimitiveContextSettings:(id)arg1;
- (id)primitiveContextSettings;
- (void)setPrimitiveColor:(id)arg1;
- (id)primitiveColor;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleBlur : MSStylePart
{
    double _motionAngle;	// 8 = 0x8
    double _radius;	// 16 = 0x10
    unsigned long long _type;	// 24 = 0x18
    struct CGPoint _center;	// 32 = 0x20
}

@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double motionAngle; // @synthesize motionAngle=_motionAngle;
@property(nonatomic) struct CGPoint center; // @synthesize center=_center;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveType:(unsigned long long)arg1;
- (unsigned long long)primitiveType;
- (void)setPrimitiveRadius:(double)arg1;
- (double)primitiveRadius;
- (void)setPrimitiveMotionAngle:(double)arg1;
- (double)primitiveMotionAngle;
- (void)setPrimitiveCenter:(struct CGPoint)arg1;
- (struct CGPoint)primitiveCenter;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleBorder : MSStyleBasicFill
{
    long long _position;	// 8 = 0x8
    double _thickness;	// 16 = 0x10
}

@property(nonatomic) double thickness; // @synthesize thickness=_thickness;
@property(nonatomic) long long position; // @synthesize position=_position;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveThickness:(double)arg1;
- (double)primitiveThickness;
- (void)setPrimitivePosition:(long long)arg1;
- (long long)primitivePosition;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleBorderOptions : MSStylePart
{
    BOOL _hasDashPattern;	// 8 = 0x8
    NSArray *_dashPattern;	// 16 = 0x10
    unsigned long long _lineCapStyle;	// 24 = 0x18
    unsigned long long _lineJoinStyle;	// 32 = 0x20
}

@property(nonatomic) unsigned long long lineJoinStyle; // @synthesize lineJoinStyle=_lineJoinStyle;
@property(nonatomic) unsigned long long lineCapStyle; // @synthesize lineCapStyle=_lineCapStyle;
@property(nonatomic) BOOL hasDashPattern; // @synthesize hasDashPattern=_hasDashPattern;
@property(copy, nonatomic) NSArray *dashPattern; // @synthesize dashPattern=_dashPattern;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)primitiveLineJoinStyle;
- (void)setPrimitiveLineCapStyle:(unsigned long long)arg1;
- (unsigned long long)primitiveLineCapStyle;
- (void)setPrimitiveHasDashPattern:(BOOL)arg1;
- (BOOL)primitiveHasDashPattern;
- (void)setPrimitiveDashPattern:(id)arg1;
- (id)primitiveDashPattern;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleColorControls : MSStylePart
{
    double _brightness;	// 8 = 0x8
    double _contrast;	// 16 = 0x10
    double _saturation;	// 24 = 0x18
}

@property(nonatomic) double saturation; // @synthesize saturation=_saturation;
@property(nonatomic) double contrast; // @synthesize contrast=_contrast;
@property(nonatomic) double brightness; // @synthesize brightness=_brightness;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveSaturation:(double)arg1;
- (double)primitiveSaturation;
- (void)setPrimitiveContrast:(double)arg1;
- (double)primitiveContrast;
- (void)setPrimitiveBrightness:(double)arg1;
- (double)primitiveBrightness;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleFill : MSStyleBasicFill
{
    long long _noiseIndex;	// 8 = 0x8
    double _noiseIntensity;	// 16 = 0x10
    long long _patternFillType;	// 24 = 0x18
    NSImage *_patternImage;	// 32 = 0x20
    double _patternTileScale;	// 40 = 0x28
}

@property(nonatomic) double patternTileScale; // @synthesize patternTileScale=_patternTileScale;
@property(retain, nonatomic) NSImage *patternImage; // @synthesize patternImage=_patternImage;
@property(nonatomic) long long patternFillType; // @synthesize patternFillType=_patternFillType;
@property(nonatomic) double noiseIntensity; // @synthesize noiseIntensity=_noiseIntensity;
@property(nonatomic) long long noiseIndex; // @synthesize noiseIndex=_noiseIndex;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitivePatternTileScale:(double)arg1;
- (double)primitivePatternTileScale;
- (void)setPrimitivePatternImage:(id)arg1;
- (id)primitivePatternImage;
- (void)setPrimitivePatternFillType:(long long)arg1;
- (long long)primitivePatternFillType;
- (void)setPrimitiveNoiseIntensity:(double)arg1;
- (double)primitiveNoiseIntensity;
- (void)setPrimitiveNoiseIndex:(long long)arg1;
- (long long)primitiveNoiseIndex;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleInnerShadow : MSStyleShadow
{
}

- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStylePart : MSModelObject
{
    BOOL _isEnabled;	// 8 = 0x8
}

@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled=_isEnabled;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveIsEnabled:(BOOL)arg1;
- (BOOL)primitiveIsEnabled;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleReflection : MSStylePart
{
    double _distance;	// 8 = 0x8
    double _strength;	// 16 = 0x10
}

@property(nonatomic) double strength; // @synthesize strength=_strength;
@property(nonatomic) double distance; // @synthesize distance=_distance;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveStrength:(double)arg1;
- (double)primitiveStrength;
- (void)setPrimitiveDistance:(double)arg1;
- (double)primitiveDistance;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyleShadow : MSStylePart
{
    BOOL _hasShadow;	// 8 = 0x8
    double _blurRadius;	// 16 = 0x10
    MSColor *_color;	// 24 = 0x18
    MSGraphicsContextSettings *_contextSettings;	// 32 = 0x20
    double _offsetX;	// 40 = 0x28
    double _offsetY;	// 48 = 0x30
    double _spread;	// 56 = 0x38
}

@property(nonatomic) double spread; // @synthesize spread=_spread;
@property(nonatomic) double offsetY; // @synthesize offsetY=_offsetY;
@property(nonatomic) double offsetX; // @synthesize offsetX=_offsetX;
@property(nonatomic) BOOL hasShadow; // @synthesize hasShadow=_hasShadow;
@property(retain, nonatomic) MSGraphicsContextSettings *contextSettings; // @synthesize contextSettings=_contextSettings;
@property(copy, nonatomic) MSColor *color; // @synthesize color=_color;
@property(nonatomic) double blurRadius; // @synthesize blurRadius=_blurRadius;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveSpread:(double)arg1;
- (double)primitiveSpread;
- (void)setPrimitiveOffsetY:(double)arg1;
- (double)primitiveOffsetY;
- (void)setPrimitiveOffsetX:(double)arg1;
- (double)primitiveOffsetX;
- (void)setPrimitiveHasShadow:(BOOL)arg1;
- (BOOL)primitiveHasShadow;
- (void)setPrimitiveContextSettings:(id)arg1;
- (id)primitiveContextSettings;
- (void)setPrimitiveColor:(id)arg1;
- (id)primitiveColor;
- (void)setPrimitiveBlurRadius:(double)arg1;
- (double)primitiveBlurRadius;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSStyledLayer : MSLayer
{
    MSStyle *_style;	// 56 = 0x38
}

@property(retain, nonatomic) MSStyle *style; // @synthesize style=_style;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveStyle:(id)arg1;
- (id)primitiveStyle;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSTextLayer : MSStyledLayer
{
    BOOL _automaticallyDrawOnUnderlyingPath;	// 56 = 0x38
    BOOL _dontSynchroniseWithSymbol;	// 57 = 0x39
    NSTextStorage *_storage;	// 64 = 0x40
    long long _textBehaviour;	// 72 = 0x48
}

@property(nonatomic) long long textBehaviour; // @synthesize textBehaviour=_textBehaviour;
@property(retain, nonatomic) NSTextStorage *storage; // @synthesize storage=_storage;
@property(nonatomic) BOOL dontSynchroniseWithSymbol; // @synthesize dontSynchroniseWithSymbol=_dontSynchroniseWithSymbol;
@property(nonatomic) BOOL automaticallyDrawOnUnderlyingPath; // @synthesize automaticallyDrawOnUnderlyingPath=_automaticallyDrawOnUnderlyingPath;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveTextBehaviour:(long long)arg1;
- (long long)primitiveTextBehaviour;
- (void)setPrimitiveStorage:(id)arg1;
- (id)primitiveStorage;
- (void)setPrimitiveDontSynchroniseWithSymbol:(BOOL)arg1;
- (BOOL)primitiveDontSynchroniseWithSymbol;
- (void)setPrimitiveAutomaticallyDrawOnUnderlyingPath:(BOOL)arg1;
- (BOOL)primitiveAutomaticallyDrawOnUnderlyingPath;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSTextStyle : MSModelObject
{
    NSDictionary *_attributes;	// 8 = 0x8
}

@property(copy, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
- (void).cxx_destruct;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveAttributes:(id)arg1;
- (id)primitiveAttributes;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _MSTriangleShape : MSCustomShapeLayer
{
    BOOL _isEquilateral;	// 65 = 0x41
}

@property(nonatomic) BOOL isEquilateral; // @synthesize isEquilateral=_isEquilateral;
- (BOOL)isEqualForSync:(id)arg1;
- (void)syncPropertiesMatchingReference:(id)arg1 withObject:(id)arg2;
- (void)copyPropertiesToObjectCopy:(id)arg1;
- (void)setAsParentOnChildren;
- (void)decodePropertiesWithCoder:(id)arg1;
- (void)encodePropertiesWithCoder:(id)arg1;
- (void)fillInEmptyObjects;
- (BOOL)hasDefaultValues;
- (void)initEmptyObject;
- (void)setPrimitiveIsEquilateral:(BOOL)arg1;
- (BOOL)primitiveIsEquilateral;
- (void)enumerateChildProperties:(CDUnknownBlockType)arg1;
- (void)enumerateProperties:(CDUnknownBlockType)arg1;

@end

@interface _SVGBasicShape : SVGDrawableElement
{
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;

@end

@interface _SVGCircleShape : SVGBasicShape
{
    double _cx;	// 8 = 0x8
    double _cy;	// 16 = 0x10
    double _r;	// 24 = 0x18
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double r; // @synthesize r=_r;
@property(nonatomic) double cy; // @synthesize cy=_cy;
@property(nonatomic) double cx; // @synthesize cx=_cx;

@end

@interface _SVGClipPath : SVGGroupElement
{
    NSSet *_clipping;	// 8 = 0x8
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSSet *clipping; // @synthesize clipping=_clipping;
- (void).cxx_destruct;
- (void)primitiveRemoveClippingObject:(id)arg1;
- (void)primitiveAddClippingObject:(id)arg1;
- (void)removeClippingObject:(id)arg1;
- (void)addClippingObject:(id)arg1;

@end

@interface _SVGDrawableElement : SVGElement
{
    BOOL _clips;	// 8 = 0x8
    BOOL _hidden;	// 9 = 0x9
    SVGClipPath *_clip;	// 16 = 0x10
    SVGFill *_fill;	// 24 = 0x18
    SVGFont *_font;	// 32 = 0x20
    SVGMask *_mask;	// 40 = 0x28
    SVGStroke *_stroke;	// 48 = 0x30
    double _opacity;	// 56 = 0x38
    NSAffineTransform *_transform;	// 64 = 0x40
    struct CGRect _rect;	// 72 = 0x48
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSAffineTransform *transform; // @synthesize transform=_transform;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) BOOL hidden; // @synthesize hidden=_hidden;
@property(nonatomic) BOOL clips; // @synthesize clips=_clips;
@property(retain, nonatomic) SVGStroke *stroke; // @synthesize stroke=_stroke;
@property(retain, nonatomic) SVGMask *mask; // @synthesize mask=_mask;
@property(retain, nonatomic) SVGFont *font; // @synthesize font=_font;
@property(retain, nonatomic) SVGFill *fill; // @synthesize fill=_fill;
@property(retain, nonatomic) SVGClipPath *clip; // @synthesize clip=_clip;
- (void).cxx_destruct;
- (void)primitiveSetStroke:(id)arg1;
- (void)primitiveSetMask:(id)arg1;
- (void)primitiveSetFont:(id)arg1;
- (void)primitiveSetFill:(id)arg1;
- (void)primitiveSetClip:(id)arg1;

@end

@interface _SVGElement : NSObject
{
    NSSet *_children;	// 8 = 0x8
    NSSet *_linked;	// 16 = 0x10
    SVGElement *_parent;	// 24 = 0x18
    NSString *_desc;	// 32 = 0x20
    NSString *_identifier;	// 40 = 0x28
    long long _index;	// 48 = 0x30
    NSString *_title;	// 56 = 0x38
    NSString *_type;	// 64 = 0x40
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) long long index; // @synthesize index=_index;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSString *desc; // @synthesize desc=_desc;
@property(retain, nonatomic) SVGElement *parent; // @synthesize parent=_parent;
@property(retain, nonatomic) NSSet *linked; // @synthesize linked=_linked;
@property(retain, nonatomic) NSSet *children; // @synthesize children=_children;
- (void).cxx_destruct;
- (void)primitiveSetParent:(id)arg1;
- (void)primitiveRemoveLinkedObject:(id)arg1;
- (void)primitiveAddLinkedObject:(id)arg1;
- (void)removeLinkedObject:(id)arg1;
- (void)addLinkedObject:(id)arg1;
- (void)primitiveRemoveChildrenObject:(id)arg1;
- (void)primitiveAddChildrenObject:(id)arg1;
- (void)removeChildrenObject:(id)arg1;
- (void)addChildrenObject:(id)arg1;

@end

@interface _SVGEllipseShape : SVGBasicShape
{
    double _cx;	// 8 = 0x8
    double _cy;	// 16 = 0x10
    double _rx;	// 24 = 0x18
    double _ry;	// 32 = 0x20
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double ry; // @synthesize ry=_ry;
@property(nonatomic) double rx; // @synthesize rx=_rx;
@property(nonatomic) double cy; // @synthesize cy=_cy;
@property(nonatomic) double cx; // @synthesize cx=_cx;

@end

@interface _SVGFill : SVGElement
{
    SVGGradient *_gradient;	// 8 = 0x8
    NSSet *_usedBy;	// 16 = 0x10
    SVGColor *_color;	// 24 = 0x18
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) SVGColor *color; // @synthesize color=_color;
@property(retain, nonatomic) NSSet *usedBy; // @synthesize usedBy=_usedBy;
@property(retain, nonatomic) SVGGradient *gradient; // @synthesize gradient=_gradient;
- (void).cxx_destruct;
- (void)primitiveRemoveUsedByObject:(id)arg1;
- (void)primitiveAddUsedByObject:(id)arg1;
- (void)removeUsedByObject:(id)arg1;
- (void)addUsedByObject:(id)arg1;
- (void)primitiveSetGradient:(id)arg1;

@end

@interface _SVGFont : SVGElement
{
    NSSet *_usedBy;	// 8 = 0x8
    NSString *_family;	// 16 = 0x10
    double _size;	// 24 = 0x18
    NSString *_style;	// 32 = 0x20
    NSString *_variant;	// 40 = 0x28
    double _weight;	// 48 = 0x30
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double weight; // @synthesize weight=_weight;
@property(retain, nonatomic) NSString *variant; // @synthesize variant=_variant;
@property(retain, nonatomic) NSString *style; // @synthesize style=_style;
@property(nonatomic) double size; // @synthesize size=_size;
@property(retain, nonatomic) NSString *family; // @synthesize family=_family;
@property(retain, nonatomic) NSSet *usedBy; // @synthesize usedBy=_usedBy;
- (void).cxx_destruct;
- (void)primitiveRemoveUsedByObject:(id)arg1;
- (void)primitiveAddUsedByObject:(id)arg1;
- (void)removeUsedByObject:(id)arg1;
- (void)addUsedByObject:(id)arg1;

@end

@interface _SVGGradient : SVGElement
{
    BOOL _absolute;	// 8 = 0x8
    BOOL _radial;	// 9 = 0x9
    NSSet *_linkedFrom;	// 16 = 0x10
    SVGGradient *_linkedTo;	// 24 = 0x18
    NSSet *_usedByFills;	// 32 = 0x20
    NSSet *_usedByStrokes;	// 40 = 0x28
    double _fromX;	// 48 = 0x30
    double _fromY;	// 56 = 0x38
    double _toX;	// 64 = 0x40
    double _toY;	// 72 = 0x48
    NSAffineTransform *_transform;	// 80 = 0x50
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSAffineTransform *transform; // @synthesize transform=_transform;
@property(nonatomic) double toY; // @synthesize toY=_toY;
@property(nonatomic) double toX; // @synthesize toX=_toX;
@property(nonatomic) BOOL radial; // @synthesize radial=_radial;
@property(nonatomic) double fromY; // @synthesize fromY=_fromY;
@property(nonatomic) double fromX; // @synthesize fromX=_fromX;
@property(nonatomic) BOOL absolute; // @synthesize absolute=_absolute;
@property(retain, nonatomic) NSSet *usedByStrokes; // @synthesize usedByStrokes=_usedByStrokes;
@property(retain, nonatomic) NSSet *usedByFills; // @synthesize usedByFills=_usedByFills;
@property(retain, nonatomic) SVGGradient *linkedTo; // @synthesize linkedTo=_linkedTo;
@property(retain, nonatomic) NSSet *linkedFrom; // @synthesize linkedFrom=_linkedFrom;
- (void).cxx_destruct;
- (void)primitiveRemoveUsedByStrokesObject:(id)arg1;
- (void)primitiveAddUsedByStrokesObject:(id)arg1;
- (void)removeUsedByStrokesObject:(id)arg1;
- (void)addUsedByStrokesObject:(id)arg1;
- (void)primitiveRemoveUsedByFillsObject:(id)arg1;
- (void)primitiveAddUsedByFillsObject:(id)arg1;
- (void)removeUsedByFillsObject:(id)arg1;
- (void)addUsedByFillsObject:(id)arg1;
- (void)primitiveSetLinkedTo:(id)arg1;
- (void)primitiveRemoveLinkedFromObject:(id)arg1;
- (void)primitiveAddLinkedFromObject:(id)arg1;
- (void)removeLinkedFromObject:(id)arg1;
- (void)addLinkedFromObject:(id)arg1;

@end

@interface _SVGGradientStop : SVGElement
{
    SVGColor *_color;	// 8 = 0x8
    double _position;	// 16 = 0x10
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double position; // @synthesize position=_position;
@property(retain, nonatomic) SVGColor *color; // @synthesize color=_color;
- (void).cxx_destruct;

@end

@interface _SVGGroupElement : SVGDrawableElement
{
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;

@end

@interface _SVGImage : SVGDrawableElement
{
    NSImage *_image;	// 8 = 0x8
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (void).cxx_destruct;

@end

@interface _SVGLineShape : SVGBasicShape
{
    double _x1;	// 8 = 0x8
    double _x2;	// 16 = 0x10
    double _y1;	// 24 = 0x18
    double _y2;	// 32 = 0x20
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double y2; // @synthesize y2=_y2;
@property(nonatomic) double y1; // @synthesize y1=_y1;
@property(nonatomic) double x2; // @synthesize x2=_x2;
@property(nonatomic) double x1; // @synthesize x1=_x1;

@end

@interface _SVGLink : SVGDrawableElement
{
    SVGElement *_link;	// 8 = 0x8
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) SVGElement *link; // @synthesize link=_link;
- (void).cxx_destruct;
- (void)primitiveSetLink:(id)arg1;

@end

@interface _SVGMask : SVGGroupElement
{
    NSSet *_masking;	// 8 = 0x8
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSSet *masking; // @synthesize masking=_masking;
- (void).cxx_destruct;
- (void)primitiveRemoveMaskingObject:(id)arg1;
- (void)primitiveAddMaskingObject:(id)arg1;
- (void)removeMaskingObject:(id)arg1;
- (void)addMaskingObject:(id)arg1;

@end

@interface _SVGPathShape : SVGDrawableElement
{
    BOOL _closed;	// 8 = 0x8
    NSBezierPath *_path;	// 16 = 0x10
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(retain, nonatomic) NSBezierPath *path; // @synthesize path=_path;
@property(nonatomic) BOOL closed; // @synthesize closed=_closed;
- (void).cxx_destruct;

@end

@interface _SVGPolygonShape : SVGPathShape
{
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;

@end

@interface _SVGRectangleShape : SVGBasicShape
{
    double _cornerRadius;	// 8 = 0x8
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;

@end

@interface _SVGStroke : SVGElement
{
    SVGGradient *_gradient;	// 8 = 0x8
    NSSet *_usedBy;	// 16 = 0x10
    SVGColor *_color;	// 24 = 0x18
    NSArray *_dashes;	// 32 = 0x20
    double _width;	// 40 = 0x28
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double width; // @synthesize width=_width;
@property(retain, nonatomic) NSArray *dashes; // @synthesize dashes=_dashes;
@property(retain, nonatomic) SVGColor *color; // @synthesize color=_color;
@property(retain, nonatomic) NSSet *usedBy; // @synthesize usedBy=_usedBy;
@property(retain, nonatomic) SVGGradient *gradient; // @synthesize gradient=_gradient;
- (void).cxx_destruct;
- (void)primitiveRemoveUsedByObject:(id)arg1;
- (void)primitiveAddUsedByObject:(id)arg1;
- (void)removeUsedByObject:(id)arg1;
- (void)addUsedByObject:(id)arg1;
- (void)primitiveSetGradient:(id)arg1;

@end

@interface _SVGSymbolElement : SVGGroupElement
{
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;

@end

@interface _SVGText : SVGDrawableElement
{
    BOOL _adjustSpacingAndGlyphs;	// 8 = 0x8
    short _anchor;	// 10 = 0xa
    double _dx;	// 16 = 0x10
    double _dy;	// 24 = 0x18
    double _length;	// 32 = 0x20
    double _rotate;	// 40 = 0x28
    NSString *_text;	// 48 = 0x30
    double _x;	// 56 = 0x38
    double _y;	// 64 = 0x40
}

+ (id)attributeNames;
+ (id)relationshipNames;
+ (id)propertyNames;
@property(nonatomic) double y; // @synthesize y=_y;
@property(nonatomic) double x; // @synthesize x=_x;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) double rotate; // @synthesize rotate=_rotate;
@property(nonatomic) double length; // @synthesize length=_length;
@property(nonatomic) double dy; // @synthesize dy=_dy;
@property(nonatomic) double dx; // @synthesize dx=_dx;
@property(nonatomic) short anchor; // @synthesize anchor=_anchor;
@property(nonatomic) BOOL adjustSpacingAndGlyphs; // @synthesize adjustSpacingAndGlyphs=_adjustSpacingAndGlyphs;
- (void).cxx_destruct;

@end

